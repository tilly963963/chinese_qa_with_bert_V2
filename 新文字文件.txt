思肖为何坐卧必向南，并自号“所南”', 'id': 'TRAIN_3797_QUERY_1', 'answers': [{'text': '为了寄托爱国情怀', 'answer_start': 267}]}, {'question': '郑思肖在 哪一年逝世？', 'id': 'TRAIN_3797_QUERY_2', 'answers': [{'text': '元仁宗延祐五年（1318年）', 'answer_start': 348}]}, {'question': '郑思肖专工画什么？', 'id': 'TRAIN_3797_QUERY_3', 'answers': [{'text': '画兰', 'answer_start': 381}]}, {'question': '谁称赞郑思肖是“民族意识浓烈的人”？', 'id': 'TRAIN_3797_QUERY_4', 'answers': [{'text': '郭沫若', 'answer_start': 756}]}]
answer= {'text': '元仁宗延祐五年（1318年）', 'answer_start': 348}
orig_answer_text= 元仁宗延祐五年（1318年）
answer_offset= 348
answer_length= 14
actual_text= 元仁宗延祐五年（1318年）
qas_id= TRAIN_3797_QUERY_2
question_text= 郑思肖在哪一年逝世？
doc_tokens= ['郑', '思', '肖', '，', '原', '名', '郑', '之', '因', '，', '祖', '籍', '连', '江', '（', '今', '福', '建', '福', '州', '连', '江', '县', ' ）', '，', '字', '忆', '翁', '，', '号', '所', '南', '，', '又', '号', '三', '外', '野', '人', '，', '宋', '末', '元', '初', '画', '家', '、', '诗', '人', '。', '南', '宋', '亡', '国', '后', '，', '孤', '身', '隐', '居', '苏', '州', '，', '终', '身', '未', '娶', '。', '郑', '思', '肖', '生', '于', '南', '宋', '理', '宗', '淳', '祐', '元', '年', '（', '1', '2', '4', '1', '年', '）', '。', '祖', '父', '郑', '咸', '曾', '任', '枝', '江', '县', '主', '簿', ' 。', '父', '亲', '郑', '起', '，', '字', '叔', '起', '，', '号', '菊', '山', '，', '从', '事', '教', '书', '生', '涯', '。', '母', '亲', '楼', '氏', '。', '南', '宋', '末', '年', '，', '通', '过', '科', '举', '，', '考', '中', '秀', '才', '，', '为', '理', '宗', '时', '的', '太', '学', '上', '舍', '，', '应', '博', '学', '宏', '词', '科', '。', '咸', '淳', '三', '年', '（', '1', '2', '6', '7', '年', '）', '元', '人', '南', '下', '攻', '宋', '，', '咸', ' 淳', '九', '年', '（', '1', '2', '7', '3', '年', '）', '襄', '阳', '失', '守', '。', '郑', '思', '肖', '献', '策', '抵', '抗', '，', '因', '“', '辞', ' 切', '直', '，', '忤', '当', '路', '”', '，', '未', '被', '采', '纳', '。', '祥', '兴', '二', '年', '（', '1', '2', '7', '9', '年', '）', '南', '宋', ' 灭', '亡', '，', '郑', '思', '肖', '隐', '居', '吴', '中', '（', '今', '江', '苏', '苏', '州', '）', '，', '改', '名', '思', '肖', '（', '因', '宋', '朝', '皇', '帝', '姓', '赵', '）', '，', '改', '字', '忆', '翁', '；', '为', '了', '寄', '托', '爱', '国', '情', '怀', '，', '郑', '思', '肖', '坐', '卧', '必', '向', '南', '，', '并', '自', '号', '“', '所', '南', '”', '；', '所', '居', '之', '处', '命', '名', '为', '“', '本', '穴', '世', '界', '”', '（', '把', '“', '本', '”', '字', '中', '的', '“', '十', '”', '置', '于', '“', '穴', '”', '字', '中', '，', '便', '是', '“', '大', '宋', '”', '，', '以', '词', '寓', '意', '其', '乃', '大', '宋', '遗', '民', '，', '不', '忘', '故', '国', '。', '元', '仁', '宗', '延', '祐', '五', '年', '（', '1', '3', '1', '8', '年', '）', '，', '郑', '思', '肖', '于', '苏', '州', '觉', '报', '寺', '内', '逝', '世', '。', '郑', '思', '肖', '专', '工', '画', '兰', '，', '特', '征', '为', '花', '和', '叶', '萧', '疏', '，', '画', '兰', '不', '画', '土', '地', '和', '根', '，', '寓', '意', '宋', '朝', '沦', '亡', '。', ' 其', '存', '世', '作', '品', '有', '《', '国', '香', '图', '卷', '》', '、', '《', '墨', '兰', '图', '卷', '》', '、', '《', '墨', '兰', '图', '》', '等', '。', '其', '中', '《', '墨', '兰', '图', '卷', '》', '藏', '于', '日', '本', '大', '阪', '市', '立', '美', '术', '馆', '，', '《', '墨', '兰', '图', '》', '藏', '于', '美', '国', '耶', '鲁', '大', '学', '美', '术', '馆', '。', '郑', '思', '肖', '在', '《', '画', '菊', '》', '中', '托', '物', '言', '志', '，', '以', '菊', '花', '自', '比', '，', '隐', '含', '了', '诗', '人', '的', '人', '生', '遭', '际', '和', '理', '想', '追', '求', '。', '这', '首', '诗', '的', '意', '思', '是', '：', '菊', '花', '不', '与', '百', '花', '为', '丛', '，', '独', '立', '却', '意', '趣', '未', '穷', '，', '宁', '愿', '在', '枝', '头', '上', '枯', '死', '、', '遗', '留', '芬', '芳', '，', '也', '不', '向', '元', '朝', '（', '北', '风', '）', '投', '降', '。', '常', '用', '于', '表', '达', '高', '尚', '的', '民', '族', '气', '节', '。', '2', '0', '1', '7', '年', '6', '月', '中', '国', '国', '民', '党', '主', '席', '洪', '秀', '柱', '在', '海', '峡', '论', '坛', '的', '讲', '话', '中', '引', '用', '了', '这', '首', '诗', '的', '后', '两', '句', '，', '说', '“', '现', '实', '轨', '迹', '总', '未', '必', '是', '尽', '如', '人', '意', '，', '但', '逆', '境', '才', '能', '锤', '炼', '出', '钢', '铁', '的', '意', '志', '”', '。', '郑', '思', '肖', '的', '作', '品', '有', '《', '郑', '所', '南', '先', '生', '文', '集', '》', '、', '《', '一', '百', '二', '十', '图', '诗', '集', '》', '、', '《', '心', '史', '》', '等', '。', '其', '中', '《', '心', '史', '》', '是', '郑', '思', '肖', '在', '南', '宋', '灭', '亡', '之', '后', '写', '下', '的', '一', '部', '诗', '文', '总', '集', '，', '分', '上', '下', '两', '卷', '。', '史', '学', '家', '陈', '寅', '恪', '很', '推', '崇', '郑', '思', '肖', '，', '在', '《', '柳', '如', '是', '别', '传', '》', '中', '曾', '写', '“', '所', '南', '心', '史', '，', '固', '非', '吴', '井', '之', '藏', '；', '孙', '盛', '阳', '秋', '，', '同', '是', '辽', '东', '旧', '本', '。', '”', '郭', '沫', '若', '在', '抗', '日', '战', '争', '期', '间', '写', '的', '《', '国', '画', '中', '的', '民', '族', '意', '识', '》', '中', '，', '称', '赞', '郑', '思', '肖', '是', '“', '民', '族', '意', '识', '浓', '烈', '的', '人', '”', '。']
orig_answer_text= 元仁宗延祐五年（1318年）
start_position= 347
end_position= 360
is_impossible= False
==============
paragraph[qas]
[{'question': '郑思肖字什么？', 'id': 'TRAIN_3797_QUERY_0', 'answers': [{'text': '忆翁', 'answer_start': 26}]}, {'question': '祥兴二年（1279年）以后，郑 思肖为何坐卧必向南，并自号“所南”', 'id': 'TRAIN_3797_QUERY_1', 'answers': [{'text': '为了寄托爱国情怀', 'answer_start': 267}]}, {'question': '郑思肖在 哪一年逝世？', 'id': 'TRAIN_3797_QUERY_2', 'answers': [{'text': '元仁宗延祐五年（1318年）', 'answer_start': 348}]}, {'question': '郑思肖专工画什么？', 'id': 'TRAIN_3797_QUERY_3', 'answers': [{'text': '画兰', 'answer_start': 381}]}, {'question': '谁称赞郑思肖是“民族意识浓烈的人”？', 'id': 'TRAIN_3797_QUERY_4', 'answers': [{'text': '郭沫若', 'answer_start': 756}]}]
answer= {'text': '画兰', 'answer_start': 381}
orig_answer_text= 画兰
answer_offset= 381
answer_length= 2
actual_text= 画兰
qas_id= TRAIN_3797_QUERY_3
question_text= 郑思肖专工画什么？
doc_tokens= ['郑', '思', '肖', '，', '原', '名', '郑', '之', '因', '，', '祖', '籍', '连', '江', '（', '今', '福', '建', '福', '州', '连', '江', '县', ' ）', '，', '字', '忆', '翁', '，', '号', '所', '南', '，', '又', '号', '三', '外', '野', '人', '，', '宋', '末', '元', '初', '画', '家', '、', '诗', '人', '。', '南', '宋', '亡', '国', '后', '，', '孤', '身', '隐', '居', '苏', '州', '，', '终', '身', '未', '娶', '。', '郑', '思', '肖', '生', '于', '南', '宋', '理', '宗', '淳', '祐', '元', '年', '（', '1', '2', '4', '1', '年', '）', '。', '祖', '父', '郑', '咸', '曾', '任', '枝', '江', '县', '主', '簿', ' 。', '父', '亲', '郑', '起', '，', '字', '叔', '起', '，', '号', '菊', '山', '，', '从', '事', '教', '书', '生', '涯', '。', '母', '亲', '楼', '氏', '。', '南', '宋', '末', '年', '，', '通', '过', '科', '举', '，', '考', '中', '秀', '才', '，', '为', '理', '宗', '时', '的', '太', '学', '上', '舍', '，', '应', '博', '学', '宏', '词', '科', '。', '咸', '淳', '三', '年', '（', '1', '2', '6', '7', '年', '）', '元', '人', '南', '下', '攻', '宋', '，', '咸', ' 淳', '九', '年', '（', '1', '2', '7', '3', '年', '）', '襄', '阳', '失', '守', '。', '郑', '思', '肖', '献', '策', '抵', '抗', '，', '因', '“', '辞', ' 切', '直', '，', '忤', '当', '路', '”', '，', '未', '被', '采', '纳', '。', '祥', '兴', '二', '年', '（', '1', '2', '7', '9', '年', '）', '南', '宋', ' 灭', '亡', '，', '郑', '思', '肖', '隐', '居', '吴', '中', '（', '今', '江', '苏', '苏', '州', '）', '，', '改', '名', '思', '肖', '（', '因', '宋', '朝', '皇', '帝', '姓', '赵', '）', '，', '改', '字', '忆', '翁', '；', '为', '了', '寄', '托', '爱', '国', '情', '怀', '，', '郑', '思', '肖', '坐', '卧', '必', '向', '南', '，', '并', '自', '号', '“', '所', '南', '”', '；', '所', '居', '之', '处', '命', '名', '为', '“', '本', '穴', '世', '界', '”', '（', '把', '“', '本', '”', '字', '中', '的', '“', '十', '”', '置', '于', '“', '穴', '”', '字', '中', '，', '便', '是', '“', '大', '宋', '”', '，', '以', '词', '寓', '意', '其', '乃', '大', '宋', '遗', '民', '，', '不', '忘', '故', '国', '。', '元', '仁', '宗', '延', '祐', '五', '年', '（', '1', '3', '1', '8', '年', '）', '，', '郑', '思', '肖', '于', '苏', '州', '觉', '报', '寺', '内', '逝', '世', '。', '郑', '思', '肖', '专', '工', '画', '兰', '，', '特', '征', '为', '花', '和', '叶', '萧', '疏', '，', '画', '兰', '不', '画', '土', '地', '和', '根', '，', '寓', '意', '宋', '朝', '沦', '亡', '。', ' 其', '存', '世', '作', '品', '有', '《', '国', '香', '图', '卷', '》', '、', '《', '墨', '兰', '图', '卷', '》', '、', '《', '墨', '兰', '图', '》', '等', '。', '其', '中', '《', '墨', '兰', '图', '卷', '》', '藏', '于', '日', '本', '大', '阪', '市', '立', '美', '术', '馆', '，', '《', '墨', '兰', '图', '》', '藏', '于', '美', '国', '耶', '鲁', '大', '学', '美', '术', '馆', '。', '郑', '思', '肖', '在', '《', '画', '菊', '》', '中', '托', '物', '言', '志', '，', '以', '菊', '花', '自', '比', '，', '隐', '含', '了', '诗', '人', '的', '人', '生', '遭', '际', '和', '理', '想', '追', '求', '。', '这', '首', '诗', '的', '意', '思', '是', '：', '菊', '花', '不', '与', '百', '花', '为', '丛', '，', '独', '立', '却', '意', '趣', '未', '穷', '，', '宁', '愿', '在', '枝', '头', '上', '枯', '死', '、', '遗', '留', '芬', '芳', '，', '也', '不', '向', '元', '朝', '（', '北', '风', '）', '投', '降', '。', '常', '用', '于', '表', '达', '高', '尚', '的', '民', '族', '气', '节', '。', '2', '0', '1', '7', '年', '6', '月', '中', '国', '国', '民', '党', '主', '席', '洪', '秀', '柱', '在', '海', '峡', '论', '坛', '的', '讲', '话', '中', '引', '用', '了', '这', '首', '诗', '的', '后', '两', '句', '，', '说', '“', '现', '实', '轨', '迹', '总', '未', '必', '是', '尽', '如', '人', '意', '，', '但', '逆', '境', '才', '能', '锤', '炼', '出', '钢', '铁', '的', '意', '志', '”', '。', '郑', '思', '肖', '的', '作', '品', '有', '《', '郑', '所', '南', '先', '生', '文', '集', '》', '、', '《', '一', '百', '二', '十', '图', '诗', '集', '》', '、', '《', '心', '史', '》', '等', '。', '其', '中', '《', '心', '史', '》', '是', '郑', '思', '肖', '在', '南', '宋', '灭', '亡', '之', '后', '写', '下', '的', '一', '部', '诗', '文', '总', '集', '，', '分', '上', '下', '两', '卷', '。', '史', '学', '家', '陈', '寅', '恪', '很', '推', '崇', '郑', '思', '肖', '，', '在', '《', '柳', '如', '是', '别', '传', '》', '中', '曾', '写', '“', '所', '南', '心', '史', '，', '固', '非', '吴', '井', '之', '藏', '；', '孙', '盛', '阳', '秋', '，', '同', '是', '辽', '东', '旧', '本', '。', '”', '郭', '沫', '若', '在', '抗', '日', '战', '争', '期', '间', '写', '的', '《', '国', '画', '中', '的', '民', '族', '意', '识', '》', '中', '，', '称', '赞', '郑', '思', '肖', '是', '“', '民', '族', '意', '识', '浓', '烈', '的', '人', '”', '。']
orig_answer_text= 画兰
start_position= 380
end_position= 381
is_impossible= False
==============
paragraph[qas]
[{'question': '郑思肖字什么？', 'id': 'TRAIN_3797_QUERY_0', 'answers': [{'text': '忆翁', 'answer_start': 26}]}, {'question': '祥兴二年（1279年）以后，郑 思肖为何坐卧必向南，并自号“所南”', 'id': 'TRAIN_3797_QUERY_1', 'answers': [{'text': '为了寄托爱国情怀', 'answer_start': 267}]}, {'question': '郑思肖在 哪一年逝世？', 'id': 'TRAIN_3797_QUERY_2', 'answers': [{'text': '元仁宗延祐五年（1318年）', 'answer_start': 348}]}, {'question': '郑思肖专工画什么？', 'id': 'TRAIN_3797_QUERY_3', 'answers': [{'text': '画兰', 'answer_start': 381}]}, {'question': '谁称赞郑思肖是“民族意识浓烈的人”？', 'id': 'TRAIN_3797_QUERY_4', 'answers': [{'text': '郭沫若', 'answer_start': 756}]}]
answer= {'text': '郭沫若', 'answer_start': 756}
orig_answer_text= 郭沫若
answer_offset= 756
answer_length= 3
actual_text= 郭沫若
qas_id= TRAIN_3797_QUERY_4
question_text= 谁称赞郑思肖是“民族意识浓烈的人”？
doc_tokens= ['郑', '思', '肖', '，', '原', '名', '郑', '之', '因', '，', '祖', '籍', '连', '江', '（', '今', '福', '建', '福', '州', '连', '江', '县', ' ）', '，', '字', '忆', '翁', '，', '号', '所', '南', '，', '又', '号', '三', '外', '野', '人', '，', '宋', '末', '元', '初', '画', '家', '、', '诗', '人', '。', '南', '宋', '亡', '国', '后', '，', '孤', '身', '隐', '居', '苏', '州', '，', '终', '身', '未', '娶', '。', '郑', '思', '肖', '生', '于', '南', '宋', '理', '宗', '淳', '祐', '元', '年', '（', '1', '2', '4', '1', '年', '）', '。', '祖', '父', '郑', '咸', '曾', '任', '枝', '江', '县', '主', '簿', ' 。', '父', '亲', '郑', '起', '，', '字', '叔', '起', '，', '号', '菊', '山', '，', '从', '事', '教', '书', '生', '涯', '。', '母', '亲', '楼', '氏', '。', '南', '宋', '末', '年', '，', '通', '过', '科', '举', '，', '考', '中', '秀', '才', '，', '为', '理', '宗', '时', '的', '太', '学', '上', '舍', '，', '应', '博', '学', '宏', '词', '科', '。', '咸', '淳', '三', '年', '（', '1', '2', '6', '7', '年', '）', '元', '人', '南', '下', '攻', '宋', '，', '咸', ' 淳', '九', '年', '（', '1', '2', '7', '3', '年', '）', '襄', '阳', '失', '守', '。', '郑', '思', '肖', '献', '策', '抵', '抗', '，', '因', '“', '辞', ' 切', '直', '，', '忤', '当', '路', '”', '，', '未', '被', '采', '纳', '。', '祥', '兴', '二', '年', '（', '1', '2', '7', '9', '年', '）', '南', '宋', ' 灭', '亡', '，', '郑', '思', '肖', '隐', '居', '吴', '中', '（', '今', '江', '苏', '苏', '州', '）', '，', '改', '名', '思', '肖', '（', '因', '宋', '朝', '皇', '帝', '姓', '赵', '）', '，', '改', '字', '忆', '翁', '；', '为', '了', '寄', '托', '爱', '国', '情', '怀', '，', '郑', '思', '肖', '坐', '卧', '必', '向', '南', '，', '并', '自', '号', '“', '所', '南', '”', '；', '所', '居', '之', '处', '命', '名', '为', '“', '本', '穴', '世', '界', '”', '（', '把', '“', '本', '”', '字', '中', '的', '“', '十', '”', '置', '于', '“', '穴', '”', '字', '中', '，', '便', '是', '“', '大', '宋', '”', '，', '以', '词', '寓', '意', '其', '乃', '大', '宋', '遗', '民', '，', '不', '忘', '故', '国', '。', '元', '仁', '宗', '延', '祐', '五', '年', '（', '1', '3', '1', '8', '年', '）', '，', '郑', '思', '肖', '于', '苏', '州', '觉', '报', '寺', '内', '逝', '世', '。', '郑', '思', '肖', '专', '工', '画', '兰', '，', '特', '征', '为', '花', '和', '叶', '萧', '疏', '，', '画', '兰', '不', '画', '土', '地', '和', '根', '，', '寓', '意', '宋', '朝', '沦', '亡', '。', ' 其', '存', '世', '作', '品', '有', '《', '国', '香', '图', '卷', '》', '、', '《', '墨', '兰', '图', '卷', '》', '、', '《', '墨', '兰', '图', '》', '等', '。', '其', '中', '《', '墨', '兰', '图', '卷', '》', '藏', '于', '日', '本', '大', '阪', '市', '立', '美', '术', '馆', '，', '《', '墨', '兰', '图', '》', '藏', '于', '美', '国', '耶', '鲁', '大', '学', '美', '术', '馆', '。', '郑', '思', '肖', '在', '《', '画', '菊', '》', '中', '托', '物', '言', '志', '，', '以', '菊', '花', '自', '比', '，', '隐', '含', '了', '诗', '人', '的', '人', '生', '遭', '际', '和', '理', '想', '追', '求', '。', '这', '首', '诗', '的', '意', '思', '是', '：', '菊', '花', '不', '与', '百', '花', '为', '丛', '，', '独', '立', '却', '意', '趣', '未', '穷', '，', '宁', '愿', '在', '枝', '头', '上', '枯', '死', '、', '遗', '留', '芬', '芳', '，', '也', '不', '向', '元', '朝', '（', '北', '风', '）', '投', '降', '。', '常', '用', '于', '表', '达', '高', '尚', '的', '民', '族', '气', '节', '。', '2', '0', '1', '7', '年', '6', '月', '中', '国', '国', '民', '党', '主', '席', '洪', '秀', '柱', '在', '海', '峡', '论', '坛', '的', '讲', '话', '中', '引', '用', '了', '这', '首', '诗', '的', '后', '两', '句', '，', '说', '“', '现', '实', '轨', '迹', '总', '未', '必', '是', '尽', '如', '人', '意', '，', '但', '逆', '境', '才', '能', '锤', '炼', '出', '钢', '铁', '的', '意', '志', '”', '。', '郑', '思', '肖', '的', '作', '品', '有', '《', '郑', '所', '南', '先', '生', '文', '集', '》', '、', '《', '一', '百', '二', '十', '图', '诗', '集', '》', '、', '《', '心', '史', '》', '等', '。', '其', '中', '《', '心', '史', '》', '是', '郑', '思', '肖', '在', '南', '宋', '灭', '亡', '之', '后', '写', '下', '的', '一', '部', '诗', '文', '总', '集', '，', '分', '上', '下', '两', '卷', '。', '史', '学', '家', '陈', '寅', '恪', '很', '推', '崇', '郑', '思', '肖', '，', '在', '《', '柳', '如', '是', '别', '传', '》', '中', '曾', '写', '“', '所', '南', '心', '史', '，', '固', '非', '吴', '井', '之', '藏', '；', '孙', '盛', '阳', '秋', '，', '同', '是', '辽', '东', '旧', '本', '。', '”', '郭', '沫', '若', '在', '抗', '日', '战', '争', '期', '间', '写', '的', '《', '国', '画', '中', '的', '民', '族', '意', '识', '》', '中', '，', '称', '赞', '郑', '思', '肖', '是', '“', '民', '族', '意', '识', '浓', '烈', '的', '人', '”', '。']
orig_answer_text= 郭沫若
start_position= 755
end_position= 757
is_impossible= False
==============
paragraph[qas]
[{'question': '新切尔卡斯克距首府罗斯托夫东北多少公里？', 'id': 'TRAIN_3798_QUERY_0', 'answers': [{'text': '30公里', 'answer_start': 35}]}, {'question': '新切尔卡斯克在2002年人口达到多少人？', 'id': 'TRAIN_3798_QUERY_1', 'answers': [{'text': '170,822人', 'answer_start': 47}]}, {'question': '闻名全苏联的诺沃切尔卡斯克电力机车厂位于哪里？', 'id': 'TRAIN_3798_QUERY_2', 'answers': [{'text': '新切尔卡斯克', 'answer_start': 0}]}, {'question': '新切尔卡斯克在哪 一年成为顿河州首府？', 'id': 'TRAIN_3798_QUERY_3', 'answers': [{'text': '1806年', 'answer_start': 408}]}, {'question': '中国铁路8G型电力机车是哪个厂生产 的？', 'id': 'TRAIN_3798_QUERY_4', 'answers': [{'text': '诺沃切尔卡斯克电力机车厂', 'answer_start': 427}]}]
answer= {'text': '30公里', 'answer_start': 35}
orig_answer_text= 30公里
answer_offset= 35
answer_length= 4
actual_text= 北30公
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '北30公' vs. '30公里'
==============
paragraph[qas]
[{'question': '新切尔卡斯克距首府罗斯托夫东北多少公里？', 'id': 'TRAIN_3798_QUERY_0', 'answers': [{'text': '30公里', 'answer_start': 35}]}, {'question': '新切尔卡斯克在2002年人口达到多少人？', 'id': 'TRAIN_3798_QUERY_1', 'answers': [{'text': '170,822人', 'answer_start': 47}]}, {'question': '闻名全苏联的诺沃切尔卡斯克电力机车厂位于哪里？', 'id': 'TRAIN_3798_QUERY_2', 'answers': [{'text': '新切尔卡斯克', 'answer_start': 0}]}, {'question': '新切尔卡斯克在哪 一年成为顿河州首府？', 'id': 'TRAIN_3798_QUERY_3', 'answers': [{'text': '1806年', 'answer_start': 408}]}, {'question': '中国铁路8G型电力机车是哪个厂生产 的？', 'id': 'TRAIN_3798_QUERY_4', 'answers': [{'text': '诺沃切尔卡斯克电力机车厂', 'answer_start': 427}]}]
answer= {'text': '170,822人', 'answer_start': 47}
orig_answer_text= 170,822人
answer_offset= 47
answer_length= 8
actual_text= 口170,822
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '口170,822' vs. '170,822人'
==============
paragraph[qas]
[{'question': '新切尔卡斯克距首府罗斯托夫东北多少公里？', 'id': 'TRAIN_3798_QUERY_0', 'answers': [{'text': '30公里', 'answer_start': 35}]}, {'question': '新切尔卡斯克在2002年人口达到多少人？', 'id': 'TRAIN_3798_QUERY_1', 'answers': [{'text': '170,822人', 'answer_start': 47}]}, {'question': '闻名全苏联的诺沃切尔卡斯克电力机车厂位于哪里？', 'id': 'TRAIN_3798_QUERY_2', 'answers': [{'text': '新切尔卡斯克', 'answer_start': 0}]}, {'question': '新切尔卡斯克在哪 一年成为顿河州首府？', 'id': 'TRAIN_3798_QUERY_3', 'answers': [{'text': '1806年', 'answer_start': 408}]}, {'question': '中国铁路8G型电力机车是哪个厂生产 的？', 'id': 'TRAIN_3798_QUERY_4', 'answers': [{'text': '诺沃切尔卡斯克电力机车厂', 'answer_start': 427}]}]
answer= {'text': '新切尔卡斯克', 'answer_start': 0}
orig_answer_text= 新切尔卡斯克
answer_offset= 0
answer_length= 6
actual_text=
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '' vs. '新切尔卡斯克'
==============
paragraph[qas]
[{'question': '新切尔卡斯克距首府罗斯托夫东北多少公里？', 'id': 'TRAIN_3798_QUERY_0', 'answers': [{'text': '30公里', 'answer_start': 35}]}, {'question': '新切尔卡斯克在2002年人口达到多少人？', 'id': 'TRAIN_3798_QUERY_1', 'answers': [{'text': '170,822人', 'answer_start': 47}]}, {'question': '闻名全苏联的诺沃切尔卡斯克电力机车厂位于哪里？', 'id': 'TRAIN_3798_QUERY_2', 'answers': [{'text': '新切尔卡斯克', 'answer_start': 0}]}, {'question': '新切尔卡斯克在哪 一年成为顿河州首府？', 'id': 'TRAIN_3798_QUERY_3', 'answers': [{'text': '1806年', 'answer_start': 408}]}, {'question': '中国铁路8G型电力机车是哪个厂生产 的？', 'id': 'TRAIN_3798_QUERY_4', 'answers': [{'text': '诺沃切尔卡斯克电力机车厂', 'answer_start': 427}]}]
answer= {'text': '1806年', 'answer_start': 408}
orig_answer_text= 1806年
answer_offset= 408
answer_length= 5
actual_text= 1806年
qas_id= TRAIN_3798_QUERY_3
question_text= 新切尔卡斯克在哪一年成为顿河州首府？
doc_tokens= ['新', '切', '尔', '卡', '斯', '克', '（', '）', '，', '是', '俄', '罗', '斯', '罗', '斯', '托', '夫', '州', '西', '部', '的', '一', '个', ' 城', '市', '，', '距', '首', '府', '罗', '斯', '托', '夫', '东', '北', '3', '0', '公', '里', '。', '2', '0', '0', '2', '年', '人', '口', '1', '7', '0', ',', '8', '2', '2', '人', '。', '切', '尔', '卡', '斯', '克', '是', '由', '马', '特', '维', '普', '拉', '托', '夫', '，', '在', '1', '8', '0', '5', '年', '作', '为', '顿', '河', 'V', 'o', 'i', 's', 'k', 'o', '土', '地', '，', '当', '了', 'C', 'h', 'e', 'r', 'k', 'a', 's', 's', 'k', '斯', '坦', '尼', '察', '的', '居', '民', '被', '迫', '离', '开', '的', '顿', '河', '银', '行', '就', '经', '常', '到', '其', '住', '处', 'i', 'n', 'u', 'n', 'd', 'a', 't', 'i', 'o', 'n', 's', '行', '政', '中', '心', '。', '在', '苏', '维', '埃', '国', '内', '革', '命', '战', '争', '其', '间', '，', '新', '切', '尔', '卡', '斯', '克', '是', '顿', '河', '反', '革', '命', '心', '脏', '和', '下', '阿', '列', '克', '谢', '莫', '维', '奇', '卡', '莱', '丁', '指', '挥', '部', '。', ' 红', '军', '终', '于', '1', '9', '2', '0', '年', '1', '月', '7', '日', '击', '败', '了', '盘', '踞', '在', '此', '的', '白', '军', '并', '解', '放', '了', '这', '个', '镇', '。', '第', '二', '次', '世', '界', '大', '战', '期', '间', '，', '新', '切', '尔', '卡', '斯', '克', '一', '度', '与', '1', '9', '4', '2', '年', '7', '月', '2', '4', '日', '及', '1', '9', '4', '3', '年', '2', '月', '1', '3', '日', '被', '德', '国', '军', '队', '占', '领', '。', '切', '尔', '卡', '斯', '克', '曾', '是', '总', '主', '教', '看', '到', '希', '腊', '东', '正', '教', '大', '教', '堂', '，', '并', '有', '一', '个', '（', '1', '9', '0', '4', '年', '）', '中', '，', '对', '哥', '萨', '克', '艾', '泰', '曼', '宫', '殿', '，', '并', '马', '特', '维', '普', '拉', '托', '夫', '和', '叶', '尔', '马', '克', '季', '莫', '费', '耶', '维', '奇', '（', 'M', 'i', 'k', 'e', 's', 'h', 'i', 'n', '，', '1', '9', '0', '4', '）', '的', '纪', '念', '碑', '。', '2', '0', '0', '5', '年', '9', '月', '期', '间', '，', '另', '一', '古', '迹', '2', '0', '0', '周', '年', '庆', '祝', '活', '动', '，', '致', '力', '于', '白', '色', '和', '红', '色', '哥', '萨', '克', '和', '解', '，', '是', '揭', '开', '了', '罗', '曼', '诺', '夫', '家', '族', '的', '成', '员', '出', '席', '。', '1', '8', '0', '5', '年', '建', '城', '，', '1', '8', '0', '6', '年', '成', '为', '顿', '河', '州', '首', '府', '。', '闻', ' 名', '全', '苏', '联', '的', '诺', '沃', '切', '尔', '卡', '斯', '克', '电', '力', '机', '车', '厂', '就', '位', '于', '这', '座', '城', '市', '，', '其', '产', '品', '畅', '销', '欧', '亚', '，', '中', '国', '铁', '路', '8', 'G', '型', '电', '力', '机', '车', '就', '是', '该', '厂', '产', '品', '。']
orig_answer_text= 1806年
start_position= 407
end_position= 411
is_impossible= False
==============
paragraph[qas]
[{'question': '新切尔卡斯克距首府罗斯托夫东北多少公里？', 'id': 'TRAIN_3798_QUERY_0', 'answers': [{'text': '30公里', 'answer_start': 35}]}, {'question': '新切尔卡斯克在2002年人口达到多少人？', 'id': 'TRAIN_3798_QUERY_1', 'answers': [{'text': '170,822人', 'answer_start': 47}]}, {'question': '闻名全苏联的诺沃切尔卡斯克电力机车厂位于哪里？', 'id': 'TRAIN_3798_QUERY_2', 'answers': [{'text': '新切尔卡斯克', 'answer_start': 0}]}, {'question': '新切尔卡斯克在哪 一年成为顿河州首府？', 'id': 'TRAIN_3798_QUERY_3', 'answers': [{'text': '1806年', 'answer_start': 408}]}, {'question': '中国铁路8G型电力机车是哪个厂生产 的？', 'id': 'TRAIN_3798_QUERY_4', 'answers': [{'text': '诺沃切尔卡斯克电力机车厂', 'answer_start': 427}]}]
answer= {'text': '诺沃切尔卡斯克电力机车厂', 'answer_start': 427}
orig_answer_text= 诺沃切尔卡斯克电力机车厂
answer_offset= 427
answer_length= 12
actual_text= 诺沃切尔卡斯克电力机车厂
qas_id= TRAIN_3798_QUERY_4
question_text= 中国铁路8G型电力机车是哪个厂生产的？
doc_tokens= ['新', '切', '尔', '卡', '斯', '克', '（', '）', '，', '是', '俄', '罗', '斯', '罗', '斯', '托', '夫', '州', '西', '部', '的', '一', '个', ' 城', '市', '，', '距', '首', '府', '罗', '斯', '托', '夫', '东', '北', '3', '0', '公', '里', '。', '2', '0', '0', '2', '年', '人', '口', '1', '7', '0', ',', '8', '2', '2', '人', '。', '切', '尔', '卡', '斯', '克', '是', '由', '马', '特', '维', '普', '拉', '托', '夫', '，', '在', '1', '8', '0', '5', '年', '作', '为', '顿', '河', 'V', 'o', 'i', 's', 'k', 'o', '土', '地', '，', '当', '了', 'C', 'h', 'e', 'r', 'k', 'a', 's', 's', 'k', '斯', '坦', '尼', '察', '的', '居', '民', '被', '迫', '离', '开', '的', '顿', '河', '银', '行', '就', '经', '常', '到', '其', '住', '处', 'i', 'n', 'u', 'n', 'd', 'a', 't', 'i', 'o', 'n', 's', '行', '政', '中', '心', '。', '在', '苏', '维', '埃', '国', '内', '革', '命', '战', '争', '其', '间', '，', '新', '切', '尔', '卡', '斯', '克', '是', '顿', '河', '反', '革', '命', '心', '脏', '和', '下', '阿', '列', '克', '谢', '莫', '维', '奇', '卡', '莱', '丁', '指', '挥', '部', '。', ' 红', '军', '终', '于', '1', '9', '2', '0', '年', '1', '月', '7', '日', '击', '败', '了', '盘', '踞', '在', '此', '的', '白', '军', '并', '解', '放', '了', '这', '个', '镇', '。', '第', '二', '次', '世', '界', '大', '战', '期', '间', '，', '新', '切', '尔', '卡', '斯', '克', '一', '度', '与', '1', '9', '4', '2', '年', '7', '月', '2', '4', '日', '及', '1', '9', '4', '3', '年', '2', '月', '1', '3', '日', '被', '德', '国', '军', '队', '占', '领', '。', '切', '尔', '卡', '斯', '克', '曾', '是', '总', '主', '教', '看', '到', '希', '腊', '东', '正', '教', '大', '教', '堂', '，', '并', '有', '一', '个', '（', '1', '9', '0', '4', '年', '）', '中', '，', '对', '哥', '萨', '克', '艾', '泰', '曼', '宫', '殿', '，', '并', '马', '特', '维', '普', '拉', '托', '夫', '和', '叶', '尔', '马', '克', '季', '莫', '费', '耶', '维', '奇', '（', 'M', 'i', 'k', 'e', 's', 'h', 'i', 'n', '，', '1', '9', '0', '4', '）', '的', '纪', '念', '碑', '。', '2', '0', '0', '5', '年', '9', '月', '期', '间', '，', '另', '一', '古', '迹', '2', '0', '0', '周', '年', '庆', '祝', '活', '动', '，', '致', '力', '于', '白', '色', '和', '红', '色', '哥', '萨', '克', '和', '解', '，', '是', '揭', '开', '了', '罗', '曼', '诺', '夫', '家', '族', '的', '成', '员', '出', '席', '。', '1', '8', '0', '5', '年', '建', '城', '，', '1', '8', '0', '6', '年', '成', '为', '顿', '河', '州', '首', '府', '。', '闻', ' 名', '全', '苏', '联', '的', '诺', '沃', '切', '尔', '卡', '斯', '克', '电', '力', '机', '车', '厂', '就', '位', '于', '这', '座', '城', '市', '，', '其', '产', '品', '畅', '销', '欧', '亚', '，', '中', '国', '铁', '路', '8', 'G', '型', '电', '力', '机', '车', '就', '是', '该', '厂', '产', '品', '。']
orig_answer_text= 诺沃切尔卡斯克电力机车厂
start_position= 426
end_position= 437
is_impossible= False
==============
paragraph[qas]
[{'question': '史蒂芬妮·摩根·梅尔是哪国作家？', 'id': 'TRAIN_3799_QUERY_0', 'answers': [{'text': '美国作家', 'answer_start': 14}]}, {'question': '史蒂芬 妮·摩根·梅尔定居在哪里？', 'id': 'TRAIN_3799_QUERY_1', 'answers': [{'text': '亚利桑那州凤凰城', 'answer_start': 155}]}, {'question': '史蒂芬妮·摩根·梅尔 在哪里与丈夫结识？', 'id': 'TRAIN_3799_QUERY_2', 'answers': [{'text': '亚历桑纳州', 'answer_start': 276}]}, {'question': '史蒂芬妮·摩根·梅尔是什么畅销小 说的作者？', 'id': 'TRAIN_3799_QUERY_3', 'answers': [{'text': '暮光之城系列', 'answer_start': 25}]}]
answer= {'text': '美国作家', 'answer_start': 14}
orig_answer_text= 美国作家
answer_offset= 14
answer_length= 4
actual_text= ，美国作
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '，美国作' vs. '美国作家'
==============
paragraph[qas]
[{'question': '史蒂芬妮·摩根·梅尔是哪国作家？', 'id': 'TRAIN_3799_QUERY_0', 'answers': [{'text': '美国作家', 'answer_start': 14}]}, {'question': '史蒂芬 妮·摩根·梅尔定居在哪里？', 'id': 'TRAIN_3799_QUERY_1', 'answers': [{'text': '亚利桑那州凤凰城', 'answer_start': 155}]}, {'question': '史蒂芬妮·摩根·梅尔 在哪里与丈夫结识？', 'id': 'TRAIN_3799_QUERY_2', 'answers': [{'text': '亚历桑纳州', 'answer_start': 276}]}, {'question': '史蒂芬妮·摩根·梅尔是什么畅销小 说的作者？', 'id': 'TRAIN_3799_QUERY_3', 'answers': [{'text': '暮光之城系列', 'answer_start': 25}]}]
answer= {'text': '亚利桑那州凤凰城', 'answer_start': 155}
orig_answer_text= 亚利桑那州凤凰城
answer_offset= 155
answer_length= 8
actual_text= 桑那州凤凰城。有
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '桑那州凤凰城。有' vs. '亚利桑那州凤凰城'
==============
paragraph[qas]
[{'question': '史蒂芬妮·摩根·梅尔是哪国作家？', 'id': 'TRAIN_3799_QUERY_0', 'answers': [{'text': '美国作家', 'answer_start': 14}]}, {'question': '史蒂芬 妮·摩根·梅尔定居在哪里？', 'id': 'TRAIN_3799_QUERY_1', 'answers': [{'text': '亚利桑那州凤凰城', 'answer_start': 155}]}, {'question': '史蒂芬妮·摩根·梅尔 在哪里与丈夫结识？', 'id': 'TRAIN_3799_QUERY_2', 'answers': [{'text': '亚历桑纳州', 'answer_start': 276}]}, {'question': '史蒂芬妮·摩根·梅尔是什么畅销小 说的作者？', 'id': 'TRAIN_3799_QUERY_3', 'answers': [{'text': '暮光之城系列', 'answer_start': 25}]}]
answer= {'text': '亚历桑纳州', 'answer_start': 276}
orig_answer_text= 亚历桑纳州
answer_offset= 276
answer_length= 5
actual_text= 桑纳州长大
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '桑纳州长大' vs. '亚历桑纳州'
==============
paragraph[qas]
[{'question': '史蒂芬妮·摩根·梅尔是哪国作家？', 'id': 'TRAIN_3799_QUERY_0', 'answers': [{'text': '美国作家', 'answer_start': 14}]}, {'question': '史蒂芬 妮·摩根·梅尔定居在哪里？', 'id': 'TRAIN_3799_QUERY_1', 'answers': [{'text': '亚利桑那州凤凰城', 'answer_start': 155}]}, {'question': '史蒂芬妮·摩根·梅尔 在哪里与丈夫结识？', 'id': 'TRAIN_3799_QUERY_2', 'answers': [{'text': '亚历桑纳州', 'answer_start': 276}]}, {'question': '史蒂芬妮·摩根·梅尔是什么畅销小 说的作者？', 'id': 'TRAIN_3799_QUERY_3', 'answers': [{'text': '暮光之城系列', 'answer_start': 25}]}]
answer= {'text': '暮光之城系列', 'answer_start': 25}
orig_answer_text= 暮光之城系列
answer_offset= 25
answer_length= 6
actual_text= 说暮光之城系
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '说暮光之城系' vs. '暮光之城系列'
==============
paragraph[qas]
[{'question': '平泉车站是由哪个铁道所经营？', 'id': 'TRAIN_3800_QUERY_0', 'answers': [{'text': '东日本旅客铁道', 'answer_start': 9}]}, {'question': '平泉车站位于哪里？', 'id': 'TRAIN_3800_QUERY_1', 'answers': [{'text': '日本岩手县西磐井郡平泉町平泉字泉屋', 'answer_start': 34}]}, {'question': '2002年时，平泉车站以什么样的评语入选东北车站百选？', 'id': 'TRAIN_3800_QUERY_2', 'answers': [{'text': '与藤原三代时繁华一度的古都平泉相辉映，采用平安朝样式屋顶的车站站舍', 'answer_start': 202}]}]
answer= {'text': '东日本旅客铁道', 'answer_start': 9}
orig_answer_text= 东日本旅客铁道
answer_offset= 9
answer_length= 7
actual_text= 由东日本旅客铁
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '由东日本旅客铁' vs. '东日本旅客铁道'
==============
paragraph[qas]
[{'question': '平泉车站是由哪个铁道所经营？', 'id': 'TRAIN_3800_QUERY_0', 'answers': [{'text': '东日本旅客铁道', 'answer_start': 9}]}, {'question': '平泉车站位于哪里？', 'id': 'TRAIN_3800_QUERY_1', 'answers': [{'text': '日本岩手县西磐井郡平泉町平泉字泉屋', 'answer_start': 34}]}, {'question': '2002年时，平泉车站以什么样的评语入选东北车站百选？', 'id': 'TRAIN_3800_QUERY_2', 'answers': [{'text': '与藤原三代时繁华一度的古都平泉相辉映，采用平安朝样式屋顶的车站站舍', 'answer_start': 202}]}]
answer= {'text': '日本岩手县西磐井郡平泉町平泉字泉屋', 'answer_start': 34}
orig_answer_text= 日本岩手县西磐井郡平泉町平泉字泉屋
answer_offset= 34
answer_length= 17
actual_text= 于日本岩手县西磐井郡平泉町平泉字泉
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '于日本岩手县西磐井郡平泉町平泉字泉' vs. '日本岩手县西磐井郡平泉町平泉字泉屋'
==============
paragraph[qas]
[{'question': '平泉车站是由哪个铁道所经营？', 'id': 'TRAIN_3800_QUERY_0', 'answers': [{'text': '东日本旅客铁道', 'answer_start': 9}]}, {'question': '平泉车站位于哪里？', 'id': 'TRAIN_3800_QUERY_1', 'answers': [{'text': '日本岩手县西磐井郡平泉町平泉字泉屋', 'answer_start': 34}]}, {'question': '2002年时，平泉车站以什么样的评语入选东北车站百选？', 'id': 'TRAIN_3800_QUERY_2', 'answers': [{'text': '与藤原三代时繁华一度的古都平泉相辉映，采用平安朝样式屋顶的车站站舍', 'answer_start': 202}]}]
answer= {'text': '与藤原三代时繁华一度的古都平泉相辉映，采用平安朝样式屋顶的车站站舍', 'answer_start': 202}
orig_answer_text= 与藤原三代时繁华一度的古都平泉相辉映，采用平安朝样式屋顶的车站站舍
answer_offset= 202
answer_length= 33
actual_text= 「与藤原三代时繁华一度的古都平泉相辉映，采用平安朝样式屋顶的车站站
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '「与藤原三代时繁华一度的古都平泉相辉映，采用平安朝样式屋顶的车站站' vs. '与藤原三代时繁华一度 的古都平泉相辉映，采用平安朝样式屋顶的车站站舍'
==============
paragraph[qas]
[{'question': '古龙亲笔的陆小凤故事有多少篇？', 'id': 'TRAIN_3801_QUERY_0', 'answers': [{'text': '七篇', 'answer_start': 28}]}, {'question': '古龙亲笔的 陆小凤故事有哪七篇？', 'id': 'TRAIN_3801_QUERY_1', 'answers': [{'text': '大金鹏王（原名陆小凤传奇）、绣花大盗（又名凤凰东南飞）、决战前后、银钩赌坊、幽灵山庄、凤舞九天、剑神一笑', 'answer_start': 31}]}, {'question': '后人如何评价陆小凤？', 'id': 'TRAIN_3801_QUERY_2', 'answers': [{'text': '翩翩人中凤，遨游九重天，纵无灵犀指，眉毛亦堪豪，尊其为“侠探', 'answer_start': 116}]}, {'question': '陆小凤脸上最明显的特征是什么？', 'id': 'TRAIN_3801_QUERY_3', 'answers': [{'text': '有四条的眉毛', 'answer_start': 162}]}, {'question': '为什么武林人士都说陆小凤有四条眉毛？', 'id': 'TRAIN_3801_QUERY_4', 'answers': [{'text': '陆小凤的嘴上的两撇胡须，修的和眉毛一样整齐漂亮', 'answer_start': 180}]}]
answer= {'text': '七篇', 'answer_start': 28}
orig_answer_text= 七篇
answer_offset= 28
answer_length= 2
actual_text= 有七
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '有七' vs. '七篇'
==============
paragraph[qas]
[{'question': '古龙亲笔的陆小凤故事有多少篇？', 'id': 'TRAIN_3801_QUERY_0', 'answers': [{'text': '七篇', 'answer_start': 28}]}, {'question': '古龙亲笔的 陆小凤故事有哪七篇？', 'id': 'TRAIN_3801_QUERY_1', 'answers': [{'text': '大金鹏王（原名陆小凤传奇）、绣花大盗（又名凤凰东南飞）、决战前后、银钩赌坊、幽灵山庄、凤舞九天、剑神一笑', 'answer_start': 31}]}, {'question': '后人如何评价陆小凤？', 'id': 'TRAIN_3801_QUERY_2', 'answers': [{'text': '翩翩人中凤，遨游九重天，纵无灵犀指，眉毛亦堪豪，尊其为“侠探', 'answer_start': 116}]}, {'question': '陆小凤脸上最明显的特征是什么？', 'id': 'TRAIN_3801_QUERY_3', 'answers': [{'text': '有四条的眉毛', 'answer_start': 162}]}, {'question': '为什么武林人士都说陆小凤有四条眉毛？', 'id': 'TRAIN_3801_QUERY_4', 'answers': [{'text': '陆小凤的嘴上的两撇胡须，修的和眉毛一样整齐漂亮', 'answer_start': 180}]}]
answer= {'text': '大金鹏王（原名陆小凤传奇）、绣花大盗（又名凤凰东南飞）、决战前后、银钩赌坊、幽灵山庄、凤舞九天、剑神一笑', 'answer_start': 31}
orig_answer_text= 大金鹏王（原名陆小凤传奇）、绣花大盗（又名凤凰东南飞）、决战前后、银钩赌坊、幽灵山庄、凤舞九天、剑神一笑
answer_offset= 31
answer_length= 52
actual_text= ：大金鹏王（原名陆小凤传奇）、绣花大盗（又名凤凰东南飞）、决战前后、银钩赌坊、幽灵山庄、凤舞九天、剑神一
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '：大金鹏王（原名陆小凤传奇）、绣花大盗（又名凤凰东南飞）、决战前后、银钩赌坊、幽灵山庄、凤舞九天、剑神一' vs. '大金鹏王（原名陆小凤传奇）、绣花大盗（又名凤凰东南飞）、决战前后、银钩赌坊、幽灵山庄、凤舞九天、剑神一笑'
==============
paragraph[qas]
[{'question': '古龙亲笔的陆小凤故事有多少篇？', 'id': 'TRAIN_3801_QUERY_0', 'answers': [{'text': '七篇', 'answer_start': 28}]}, {'question': '古龙亲笔的 陆小凤故事有哪七篇？', 'id': 'TRAIN_3801_QUERY_1', 'answers': [{'text': '大金鹏王（原名陆小凤传奇）、绣花大盗（又名凤凰东南飞）、决战前后、银钩赌坊、幽灵山庄、凤舞九天、剑神一笑', 'answer_start': 31}]}, {'question': '后人如何评价陆小凤？', 'id': 'TRAIN_3801_QUERY_2', 'answers': [{'text': '翩翩人中凤，遨游九重天，纵无灵犀指，眉毛亦堪豪，尊其为“侠探', 'answer_start': 116}]}, {'question': '陆小凤脸上最明显的特征是什么？', 'id': 'TRAIN_3801_QUERY_3', 'answers': [{'text': '有四条的眉毛', 'answer_start': 162}]}, {'question': '为什么武林人士都说陆小凤有四条眉毛？', 'id': 'TRAIN_3801_QUERY_4', 'answers': [{'text': '陆小凤的嘴上的两撇胡须，修的和眉毛一样整齐漂亮', 'answer_start': 180}]}]
answer= {'text': '翩翩人中凤，遨游九重天，纵无灵犀指，眉毛亦堪豪，尊其为“侠探', 'answer_start': 116}
orig_answer_text= 翩翩人中凤，遨游九重天，纵无灵犀指，眉毛亦堪豪，尊其为“侠探
answer_offset= 116
answer_length= 30
actual_text= “翩翩人中凤，遨游九重天，纵无灵犀指，眉毛亦堪豪，尊其为“侠
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '“翩翩人中凤，遨游九重天，纵无灵犀指，眉毛亦堪豪，尊其为“侠' vs. '翩翩人中凤，遨游九重天，纵 无灵犀指，眉毛亦堪豪，尊其为“侠探'
==============
paragraph[qas]
[{'question': '古龙亲笔的陆小凤故事有多少篇？', 'id': 'TRAIN_3801_QUERY_0', 'answers': [{'text': '七篇', 'answer_start': 28}]}, {'question': '古龙亲笔的 陆小凤故事有哪七篇？', 'id': 'TRAIN_3801_QUERY_1', 'answers': [{'text': '大金鹏王（原名陆小凤传奇）、绣花大盗（又名凤凰东南飞）、决战前后、银钩赌坊、幽灵山庄、凤舞九天、剑神一笑', 'answer_start': 31}]}, {'question': '后人如何评价陆小凤？', 'id': 'TRAIN_3801_QUERY_2', 'answers': [{'text': '翩翩人中凤，遨游九重天，纵无灵犀指，眉毛亦堪豪，尊其为“侠探', 'answer_start': 116}]}, {'question': '陆小凤脸上最明显的特征是什么？', 'id': 'TRAIN_3801_QUERY_3', 'answers': [{'text': '有四条的眉毛', 'answer_start': 162}]}, {'question': '为什么武林人士都说陆小凤有四条眉毛？', 'id': 'TRAIN_3801_QUERY_4', 'answers': [{'text': '陆小凤的嘴上的两撇胡须，修的和眉毛一样整齐漂亮', 'answer_start': 180}]}]
answer= {'text': '有四条的眉毛', 'answer_start': 162}
orig_answer_text= 有四条的眉毛
answer_offset= 162
answer_length= 6
actual_text= 是有四条的眉
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '是有四条的眉' vs. '有四条的眉毛'
==============
paragraph[qas]
[{'question': '古龙亲笔的陆小凤故事有多少篇？', 'id': 'TRAIN_3801_QUERY_0', 'answers': [{'text': '七篇', 'answer_start': 28}]}, {'question': '古龙亲笔的 陆小凤故事有哪七篇？', 'id': 'TRAIN_3801_QUERY_1', 'answers': [{'text': '大金鹏王（原名陆小凤传奇）、绣花大盗（又名凤凰东南飞）、决战前后、银钩赌坊、幽灵山庄、凤舞九天、剑神一笑', 'answer_start': 31}]}, {'question': '后人如何评价陆小凤？', 'id': 'TRAIN_3801_QUERY_2', 'answers': [{'text': '翩翩人中凤，遨游九重天，纵无灵犀指，眉毛亦堪豪，尊其为“侠探', 'answer_start': 116}]}, {'question': '陆小凤脸上最明显的特征是什么？', 'id': 'TRAIN_3801_QUERY_3', 'answers': [{'text': '有四条的眉毛', 'answer_start': 162}]}, {'question': '为什么武林人士都说陆小凤有四条眉毛？', 'id': 'TRAIN_3801_QUERY_4', 'answers': [{'text': '陆小凤的嘴上的两撇胡须，修的和眉毛一样整齐漂亮', 'answer_start': 180}]}]
answer= {'text': '陆小凤的嘴上的两撇胡须，修的和眉毛一样整齐漂亮', 'answer_start': 180}
orig_answer_text= 陆小凤的嘴上的两撇胡须，修的和眉毛一样整齐漂亮
answer_offset= 180
answer_length= 23
actual_text= 是陆小凤的嘴上的两撇胡须，修的和眉毛一样整齐漂
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '是陆小凤的嘴上的两撇胡须，修的和眉毛一样整齐漂' vs. '陆小凤的嘴上的两撇胡须，修的和眉毛一样整 齐漂亮'
==============
paragraph[qas]
[{'question': '大唐威龙，是香港漫画《天子传奇》系列的第几部作品？', 'id': 'TRAIN_3802_QUERY_0', 'answers': [{'text': '第四部', 'answer_start': 19}]}, {'question': '大唐威龙讲述的是一个什么样的故事？', 'id': 'TRAIN_3802_QUERY_1', 'answers': [{'text': '唐太宗李世民如何成为天子', 'answer_start': 31}]}, {'question': '大唐威龙是谁的作品？', 'id': 'TRAIN_3802_QUERY_2', 'answers': [{'text': '黄玉郎', 'answer_start': 52}]}, {'question': '大唐威龙，是香港漫画哪一 个系列？', 'id': 'TRAIN_3802_QUERY_3', 'answers': [{'text': '《天子传奇》系列', 'answer_start': 10}]}]
answer= {'text': '第四部', 'answer_start': 19}
orig_answer_text= 第四部
answer_offset= 19
answer_length= 3
actual_text= 的第四
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '的第四' vs. '第四部'
==============
paragraph[qas]
[{'question': '大唐威龙，是香港漫画《天子传奇》系列的第几部作品？', 'id': 'TRAIN_3802_QUERY_0', 'answers': [{'text': '第四部', 'answer_start': 19}]}, {'question': '大唐威龙讲述的是一个什么样的故事？', 'id': 'TRAIN_3802_QUERY_1', 'answers': [{'text': '唐太宗李世民如何成为天子', 'answer_start': 31}]}, {'question': '大唐威龙是谁的作品？', 'id': 'TRAIN_3802_QUERY_2', 'answers': [{'text': '黄玉郎', 'answer_start': 52}]}, {'question': '大唐威龙，是香港漫画哪一 个系列？', 'id': 'TRAIN_3802_QUERY_3', 'answers': [{'text': '《天子传奇》系列', 'answer_start': 10}]}]
answer= {'text': '唐太宗李世民如何成为天子', 'answer_start': 31}
orig_answer_text= 唐太宗李世民如何成为天子
answer_offset= 31
answer_length= 12
actual_text= 是唐太宗李世民如何成为天
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '是唐太宗李世民如何成为天' vs. '唐太宗李世民如何成为天子'
==============
paragraph[qas]
[{'question': '大唐威龙，是香港漫画《天子传奇》系列的第几部作品？', 'id': 'TRAIN_3802_QUERY_0', 'answers': [{'text': '第四部', 'answer_start': 19}]}, {'question': '大唐威龙讲述的是一个什么样的故事？', 'id': 'TRAIN_3802_QUERY_1', 'answers': [{'text': '唐太宗李世民如何成为天子', 'answer_start': 31}]}, {'question': '大唐威龙是谁的作品？', 'id': 'TRAIN_3802_QUERY_2', 'answers': [{'text': '黄玉郎', 'answer_start': 52}]}, {'question': '大唐威龙，是香港漫画哪一 个系列？', 'id': 'TRAIN_3802_QUERY_3', 'answers': [{'text': '《天子传奇》系列', 'answer_start': 10}]}]
answer= {'text': '黄玉郎', 'answer_start': 52}
orig_answer_text= 黄玉郎
answer_offset= 52
answer_length= 3
actual_text= 是黄玉
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '是黄玉' vs. '黄玉郎'
==============
paragraph[qas]
[{'question': '大唐威龙，是香港漫画《天子传奇》系列的第几部作品？', 'id': 'TRAIN_3802_QUERY_0', 'answers': [{'text': '第四部', 'answer_start': 19}]}, {'question': '大唐威龙讲述的是一个什么样的故事？', 'id': 'TRAIN_3802_QUERY_1', 'answers': [{'text': '唐太宗李世民如何成为天子', 'answer_start': 31}]}, {'question': '大唐威龙是谁的作品？', 'id': 'TRAIN_3802_QUERY_2', 'answers': [{'text': '黄玉郎', 'answer_start': 52}]}, {'question': '大唐威龙，是香港漫画哪一 个系列？', 'id': 'TRAIN_3802_QUERY_3', 'answers': [{'text': '《天子传奇》系列', 'answer_start': 10}]}]
answer= {'text': '《天子传奇》系列', 'answer_start': 10}
orig_answer_text= 《天子传奇》系列
answer_offset= 10
answer_length= 8
actual_text= 画《天子传奇》系
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '画《天子传奇》系' vs. '《天子传奇》系列'
==============
paragraph[qas]
[{'question': '大部分西班牙人信奉什么宗教？', 'id': 'TRAIN_3803_QUERY_0', 'answers': [{'text': '天主教', 'answer_start': 76}]}, {'question': '西班牙有几 种主要的语言？', 'id': 'TRAIN_3803_QUERY_1', 'answers': [{'text': '四种', 'answer_start': 150}]}, {'question': '西班牙除了西班牙语外，还有哪三种主要的语 言？', 'id': 'TRAIN_3803_QUERY_2', 'answers': [{'text': '加泰罗尼亚语、加利西亚语和卡斯蒂利亚语', 'answer_start': 187}]}, {'question': '西班牙最重要的少 数民族是哪里人？', 'id': 'TRAIN_3803_QUERY_3', 'answers': [{'text': '吉普赛人', 'answer_start': 389}]}, {'question': '在美国的西班牙人使用的是哪里的方言 ？', 'id': 'TRAIN_3803_QUERY_4', 'answers': [{'text': '西班牙西南部', 'answer_start': 358}]}]
answer= {'text': '天主教', 'answer_start': 76}
orig_answer_text= 天主教
answer_offset= 76
answer_length= 3
actual_text= 天主教
qas_id= TRAIN_3803_QUERY_0
question_text= 大部分西班牙人信奉什么宗教？
doc_tokens= ['西', '班', '牙', '人', '（', '）', '是', '欧', '洲', '西', '南', '部', '伊', '比', '利', '亚', '半', '岛', '上', '的', '国', '家', '西', ' 班', '牙', '之', '主', '体', '民', '族', '，', '母', '语', '是', '西', '班', '牙', '语', '，', '而', '西', '班', '牙', '语', '则', '是', '一', '种', '从', '拉', '丁', '方', '言', '发', '展', '而', '来', '的', '语', '言', '，', '历', '史', '悠', '久', '。', '大', '部', '分', '西', '班', '牙', '人', '信', '奉', '天', '主', '教', '。', '随', '著', '西', '班', '牙', '帝', '国', '的', '兴', '起', '，', '西', '班', '牙', '人', '也', '散', '居', '各', '个', '殖', '民', '地', '。', '西', '班', '牙', '人', '和', '这', '些', '殖', '民', '地', '的', '原', '住', '民', '通', '婚', '，', '使', '得', '殖', '民', '地', '拥', '有', '大', '量', '的', '西', '班', '牙', '后', '裔', '，', '这', '以', '拉', '丁', '美', '洲', '为', '甚', '。', '西', '班', '牙', '有', '四', '种', '主', '要', '的', '语', '言', '，', '除', '了', '西', '班', '牙', '语', '为', '全', '国', '的', '官', '方', '语', '言', '外', '，', '其', '余', '三', '种', '为', '地', '区', '级', '官', '方', '语', '言', '：', '加', '泰', '罗', '尼', '亚', '语', '、', '加', '利', '西', '亚', '语', '和', '卡', '斯', '蒂', '利', '亚', '语', '（', '后', '者', '通', '常', '被', '称', '为', '“', '西', '班', '牙', '语', '”', '）', '都', '来', '源', '于', '拉', '丁', '语', '，', '并', '有', '各', '自', '的', '方', '言', '。', '同', '时', '还', '存', '在', '还', '有', '其', '它', '一', '些', '现', '在', '仍', '在', '使', '用', '的', '罗', '曼', '斯', '语', '族', '方', '言', '，', '如', '在', '阿', '斯', '图', '里', '亚', '斯', '和', '部', '分', 'L', 'e', 'ó', 'n', '地', '区', '使', '用', '的', '阿', '斯', '图', '里', '亚', '斯', '语', '或', '称', 'B', 'a', 'b', 'l', 'e', '，', '在', '部', '分', '阿', '拉', '贡', '地', '区', '使', '用', '的', '阿', '拉', '贡', '语', '，', '在', '加', '泰', '罗', '尼', '亚', '西', '北', '角', '的', 'V', 'a', 'l', 'd', "'", 'A', 'r', 'a', 'n', '使', '用', '的', 'A', 'r', 'a', 'n', 'e', 's', 'e', '。', '在', '美', '国', '的', '西', '班', '牙', '人', '使', '用', '的', '是', '在', '西', '班', '牙', '西', '南', '部', '的', '方', '言', '。', '西', '班', '牙', '人', '主', '要', '信', '仰', '天', '主', '教', '，', '最', '重', '要', '的', '少', '数', ' 民', '族', '是', '吉', '普', '赛', '人', '。']
orig_answer_text= 天主教
start_position= 75
end_position= 77
is_impossible= False
==============
paragraph[qas]
[{'question': '大部分西班牙人信奉什么宗教？', 'id': 'TRAIN_3803_QUERY_0', 'answers': [{'text': '天主教', 'answer_start': 76}]}, {'question': '西班牙有几 种主要的语言？', 'id': 'TRAIN_3803_QUERY_1', 'answers': [{'text': '四种', 'answer_start': 150}]}, {'question': '西班牙除了西班牙语外，还有哪三种主要的语 言？', 'id': 'TRAIN_3803_QUERY_2', 'answers': [{'text': '加泰罗尼亚语、加利西亚语和卡斯蒂利亚语', 'answer_start': 187}]}, {'question': '西班牙最重要的少 数民族是哪里人？', 'id': 'TRAIN_3803_QUERY_3', 'answers': [{'text': '吉普赛人', 'answer_start': 389}]}, {'question': '在美国的西班牙人使用的是哪里的方言 ？', 'id': 'TRAIN_3803_QUERY_4', 'answers': [{'text': '西班牙西南部', 'answer_start': 358}]}]
answer= {'text': '四种', 'answer_start': 150}
orig_answer_text= 四种
answer_offset= 150
answer_length= 2
actual_text= 四种
qas_id= TRAIN_3803_QUERY_1
question_text= 西班牙有几种主要的语言？
doc_tokens= ['西', '班', '牙', '人', '（', '）', '是', '欧', '洲', '西', '南', '部', '伊', '比', '利', '亚', '半', '岛', '上', '的', '国', '家', '西', ' 班', '牙', '之', '主', '体', '民', '族', '，', '母', '语', '是', '西', '班', '牙', '语', '，', '而', '西', '班', '牙', '语', '则', '是', '一', '种', '从', '拉', '丁', '方', '言', '发', '展', '而', '来', '的', '语', '言', '，', '历', '史', '悠', '久', '。', '大', '部', '分', '西', '班', '牙', '人', '信', '奉', '天', '主', '教', '。', '随', '著', '西', '班', '牙', '帝', '国', '的', '兴', '起', '，', '西', '班', '牙', '人', '也', '散', '居', '各', '个', '殖', '民', '地', '。', '西', '班', '牙', '人', '和', '这', '些', '殖', '民', '地', '的', '原', '住', '民', '通', '婚', '，', '使', '得', '殖', '民', '地', '拥', '有', '大', '量', '的', '西', '班', '牙', '后', '裔', '，', '这', '以', '拉', '丁', '美', '洲', '为', '甚', '。', '西', '班', '牙', '有', '四', '种', '主', '要', '的', '语', '言', '，', '除', '了', '西', '班', '牙', '语', '为', '全', '国', '的', '官', '方', '语', '言', '外', '，', '其', '余', '三', '种', '为', '地', '区', '级', '官', '方', '语', '言', '：', '加', '泰', '罗', '尼', '亚', '语', '、', '加', '利', '西', '亚', '语', '和', '卡', '斯', '蒂', '利', '亚', '语', '（', '后', '者', '通', '常', '被', '称', '为', '“', '西', '班', '牙', '语', '”', '）', '都', '来', '源', '于', '拉', '丁', '语', '，', '并', '有', '各', '自', '的', '方', '言', '。', '同', '时', '还', '存', '在', '还', '有', '其', '它', '一', '些', '现', '在', '仍', '在', '使', '用', '的', '罗', '曼', '斯', '语', '族', '方', '言', '，', '如', '在', '阿', '斯', '图', '里', '亚', '斯', '和', '部', '分', 'L', 'e', 'ó', 'n', '地', '区', '使', '用', '的', '阿', '斯', '图', '里', '亚', '斯', '语', '或', '称', 'B', 'a', 'b', 'l', 'e', '，', '在', '部', '分', '阿', '拉', '贡', '地', '区', '使', '用', '的', '阿', '拉', '贡', '语', '，', '在', '加', '泰', '罗', '尼', '亚', '西', '北', '角', '的', 'V', 'a', 'l', 'd', "'", 'A', 'r', 'a', 'n', '使', '用', '的', 'A', 'r', 'a', 'n', 'e', 's', 'e', '。', '在', '美', '国', '的', '西', '班', '牙', '人', '使', '用', '的', '是', '在', '西', '班', '牙', '西', '南', '部', '的', '方', '言', '。', '西', '班', '牙', '人', '主', '要', '信', '仰', '天', '主', '教', '，', '最', '重', '要', '的', '少', '数', ' 民', '族', '是', '吉', '普', '赛', '人', '。']
orig_answer_text= 四种
start_position= 149
end_position= 150
is_impossible= False
==============
paragraph[qas]
[{'question': '大部分西班牙人信奉什么宗教？', 'id': 'TRAIN_3803_QUERY_0', 'answers': [{'text': '天主教', 'answer_start': 76}]}, {'question': '西班牙有几 种主要的语言？', 'id': 'TRAIN_3803_QUERY_1', 'answers': [{'text': '四种', 'answer_start': 150}]}, {'question': '西班牙除了西班牙语外，还有哪三种主要的语 言？', 'id': 'TRAIN_3803_QUERY_2', 'answers': [{'text': '加泰罗尼亚语、加利西亚语和卡斯蒂利亚语', 'answer_start': 187}]}, {'question': '西班牙最重要的少 数民族是哪里人？', 'id': 'TRAIN_3803_QUERY_3', 'answers': [{'text': '吉普赛人', 'answer_start': 389}]}, {'question': '在美国的西班牙人使用的是哪里的方言 ？', 'id': 'TRAIN_3803_QUERY_4', 'answers': [{'text': '西班牙西南部', 'answer_start': 358}]}]
answer= {'text': '加泰罗尼亚语、加利西亚语和卡斯蒂利亚语', 'answer_start': 187}
orig_answer_text= 加泰罗尼亚语、加利西亚语和卡斯蒂利亚语
answer_offset= 187
answer_length= 19
actual_text= 加泰罗尼亚语、加利西亚语和卡斯蒂利亚语
qas_id= TRAIN_3803_QUERY_2
question_text= 西班牙除了西班牙语外，还有哪三种主要的语言？
doc_tokens= ['西', '班', '牙', '人', '（', '）', '是', '欧', '洲', '西', '南', '部', '伊', '比', '利', '亚', '半', '岛', '上', '的', '国', '家', '西', ' 班', '牙', '之', '主', '体', '民', '族', '，', '母', '语', '是', '西', '班', '牙', '语', '，', '而', '西', '班', '牙', '语', '则', '是', '一', '种', '从', '拉', '丁', '方', '言', '发', '展', '而', '来', '的', '语', '言', '，', '历', '史', '悠', '久', '。', '大', '部', '分', '西', '班', '牙', '人', '信', '奉', '天', '主', '教', '。', '随', '著', '西', '班', '牙', '帝', '国', '的', '兴', '起', '，', '西', '班', '牙', '人', '也', '散', '居', '各', '个', '殖', '民', '地', '。', '西', '班', '牙', '人', '和', '这', '些', '殖', '民', '地', '的', '原', '住', '民', '通', '婚', '，', '使', '得', '殖', '民', '地', '拥', '有', '大', '量', '的', '西', '班', '牙', '后', '裔', '，', '这', '以', '拉', '丁', '美', '洲', '为', '甚', '。', '西', '班', '牙', '有', '四', '种', '主', '要', '的', '语', '言', '，', '除', '了', '西', '班', '牙', '语', '为', '全', '国', '的', '官', '方', '语', '言', '外', '，', '其', '余', '三', '种', '为', '地', '区', '级', '官', '方', '语', '言', '：', '加', '泰', '罗', '尼', '亚', '语', '、', '加', '利', '西', '亚', '语', '和', '卡', '斯', '蒂', '利', '亚', '语', '（', '后', '者', '通', '常', '被', '称', '为', '“', '西', '班', '牙', '语', '”', '）', '都', '来', '源', '于', '拉', '丁', '语', '，', '并', '有', '各', '自', '的', '方', '言', '。', '同', '时', '还', '存', '在', '还', '有', '其', '它', '一', '些', '现', '在', '仍', '在', '使', '用', '的', '罗', '曼', '斯', '语', '族', '方', '言', '，', '如', '在', '阿', '斯', '图', '里', '亚', '斯', '和', '部', '分', 'L', 'e', 'ó', 'n', '地', '区', '使', '用', '的', '阿', '斯', '图', '里', '亚', '斯', '语', '或', '称', 'B', 'a', 'b', 'l', 'e', '，', '在', '部', '分', '阿', '拉', '贡', '地', '区', '使', '用', '的', '阿', '拉', '贡', '语', '，', '在', '加', '泰', '罗', '尼', '亚', '西', '北', '角', '的', 'V', 'a', 'l', 'd', "'", 'A', 'r', 'a', 'n', '使', '用', '的', 'A', 'r', 'a', 'n', 'e', 's', 'e', '。', '在', '美', '国', '的', '西', '班', '牙', '人', '使', '用', '的', '是', '在', '西', '班', '牙', '西', '南', '部', '的', '方', '言', '。', '西', '班', '牙', '人', '主', '要', '信', '仰', '天', '主', '教', '，', '最', '重', '要', '的', '少', '数', ' 民', '族', '是', '吉', '普', '赛', '人', '。']
orig_answer_text= 加泰罗尼亚语、加利西亚语和卡斯蒂利亚语
start_position= 186
end_position= 204
is_impossible= False
==============
paragraph[qas]
[{'question': '大部分西班牙人信奉什么宗教？', 'id': 'TRAIN_3803_QUERY_0', 'answers': [{'text': '天主教', 'answer_start': 76}]}, {'question': '西班牙有几 种主要的语言？', 'id': 'TRAIN_3803_QUERY_1', 'answers': [{'text': '四种', 'answer_start': 150}]}, {'question': '西班牙除了西班牙语外，还有哪三种主要的语 言？', 'id': 'TRAIN_3803_QUERY_2', 'answers': [{'text': '加泰罗尼亚语、加利西亚语和卡斯蒂利亚语', 'answer_start': 187}]}, {'question': '西班牙最重要的少 数民族是哪里人？', 'id': 'TRAIN_3803_QUERY_3', 'answers': [{'text': '吉普赛人', 'answer_start': 389}]}, {'question': '在美国的西班牙人使用的是哪里的方言 ？', 'id': 'TRAIN_3803_QUERY_4', 'answers': [{'text': '西班牙西南部', 'answer_start': 358}]}]
answer= {'text': '吉普赛人', 'answer_start': 389}
orig_answer_text= 吉普赛人
answer_offset= 389
answer_length= 4
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '392' vs. '392'
==============
paragraph[qas]
[{'question': '大部分西班牙人信奉什么宗教？', 'id': 'TRAIN_3803_QUERY_0', 'answers': [{'text': '天主教', 'answer_start': 76}]}, {'question': '西班牙有几 种主要的语言？', 'id': 'TRAIN_3803_QUERY_1', 'answers': [{'text': '四种', 'answer_start': 150}]}, {'question': '西班牙除了西班牙语外，还有哪三种主要的语 言？', 'id': 'TRAIN_3803_QUERY_2', 'answers': [{'text': '加泰罗尼亚语、加利西亚语和卡斯蒂利亚语', 'answer_start': 187}]}, {'question': '西班牙最重要的少 数民族是哪里人？', 'id': 'TRAIN_3803_QUERY_3', 'answers': [{'text': '吉普赛人', 'answer_start': 389}]}, {'question': '在美国的西班牙人使用的是哪里的方言 ？', 'id': 'TRAIN_3803_QUERY_4', 'answers': [{'text': '西班牙西南部', 'answer_start': 358}]}]
answer= {'text': '西班牙西南部', 'answer_start': 358}
orig_answer_text= 西班牙西南部
answer_offset= 358
answer_length= 6
actual_text= 班牙西南部的
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '班牙西南部的' vs. '西班牙西南部'
==============
paragraph[qas]
[{'question': '姬猪有多长？', 'id': 'TRAIN_3804_QUERY_0', 'answers': [{'text': '55－71cm长', 'answer_start': 110}]}, {'question': '姬猪主要以什么为食物？', 'id': 'TRAIN_3804_QUERY_1', 'answers': [{'text': '草树根，昆虫，小鼠类和小爬虫', 'answer_start': 245}]}, {'question': '姬猪的寿命大约为多少年？', 'id': 'TRAIN_3804_QUERY_2', 'answers': [{'text': '八年', 'answer_start': 266}]}, {'question': '刚出生的姬猪是什么颜色？', 'id': 'TRAIN_3804_QUERY_3', 'answers': [{'text': '粉灰色', 'answer_start': 163}]}, {'question': '姬猪的孕期为多少天？', 'id': 'TRAIN_3804_QUERY_4', 'answers': [{'text': '100天', 'answer_start': 289}]}]
answer= {'text': '55－71cm长', 'answer_start': 110}
orig_answer_text= 55－71cm长
answer_offset= 110
answer_length= 8
actual_text= 55－71cm长
qas_id= TRAIN_3804_QUERY_0
question_text= 姬猪有多长？
doc_tokens= ['姬', '猪', '（', '学', '名', '：', '"', '"', '）', '是', '一', '种', '在', '印', '度', '次', '大', '陆', '生', '活', '的', '小', '型', '猪', '，', '是', '猪', '科', '动', '物', '中', '最', '小', '的', '一', '种', '，', '曾', '经', '遍', '布', '印', '度', '、', '尼', '泊', '尔', '和', '不', '丹', '的', '高', '湿', '草', '原', '地', '带', '。', '然', '而', '人', '类', '的', '活', '动', '已', '经', '大', '大', '破', '坏', '了', '姬', '猪', '的', '自', '然', '栖', '息', '地', '，', '目', '前', '只', '分', '布', '在', '阿', '萨', '姆', '邦', '，', '总', '野', '生', '种', '群', '估', '计', '少', '于', '1', '5', '0', '只', '。', '姬', '猪', '约', '5', '5', '－', '7', '1', 'c', 'm', '长', '，', '2', '0', '－', '3', '0', 'c', 'm', '高', '，', '尾', '巴', '约', '2', '.', '5', 'c', 'm', '，', '体', '重', '6', '.', '6', '－', '1', '1', '.', '8', '公', '斤', '。', '皮', '肤', '棕', '黑', '色', '。', '小', '猪', '出', '生', '时', '是', '粉', '灰', '色', '，', '然', '后', '变', '为', '棕', '色', '底', '，', '黄', '色', '条', '纹', '。', '它', '们', '头', '尖', '长', '，', '额', '头', '和', '脖', '子', '后', '面', '有', '较', '长', '的', '毛', '。', '成', '年', '雄', '性', '上', '口', '部', '的', '虎', '牙', '伸', '出', '唇', '外', '。', '野', '生', '姬', '猪', '挖', '出', '一', '个', '浅', '沟', '，', '垫', '上', '植', '物', '为', '窝', '，', '白', '天', '燥', '热', '时', '躲', '在', '窝', '里', '。', '主', '食', '为', '草', '树', '根', '，', '昆', '虫', '，', '小', '鼠', '类', '和', '小', '爬', '虫', '。', '它', '们', '寿', '命', '约', '为', '八', '年', '，', '1', '－', '2', '岁', '时', '性', '成', '熟', '。', '台', '风', '季', '之', '前', '交', '配', '，', '孕', '期', '为', '1', '0', '0', '天', '，', '一', '胎', '3', '－', '6', '头', '小', '猪', '。', '牠', '也', '是', '姬', '猪', '虱', '的', '特', '定', '寄', '主', '。']
orig_answer_text= 55－71cm长
start_position= 109
end_position= 116
is_impossible= False
==============
paragraph[qas]
[{'question': '姬猪有多长？', 'id': 'TRAIN_3804_QUERY_0', 'answers': [{'text': '55－71cm长', 'answer_start': 110}]}, {'question': '姬猪主要以什么为食物？', 'id': 'TRAIN_3804_QUERY_1', 'answers': [{'text': '草树根，昆虫，小鼠类和小爬虫', 'answer_start': 245}]}, {'question': '姬猪的寿命大约为多少年？', 'id': 'TRAIN_3804_QUERY_2', 'answers': [{'text': '八年', 'answer_start': 266}]}, {'question': '刚出生的姬猪是什么颜色？', 'id': 'TRAIN_3804_QUERY_3', 'answers': [{'text': '粉灰色', 'answer_start': 163}]}, {'question': '姬猪的孕期为多少天？', 'id': 'TRAIN_3804_QUERY_4', 'answers': [{'text': '100天', 'answer_start': 289}]}]
answer= {'text': '草树根，昆虫，小鼠类和小爬虫', 'answer_start': 245}
orig_answer_text= 草树根，昆虫，小鼠类和小爬虫
answer_offset= 245
answer_length= 14
actual_text= 树根，昆虫，小鼠类和小爬虫。
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '树根，昆虫，小鼠类和小爬虫。' vs. '草树根，昆虫，小鼠类和小爬虫'
==============
paragraph[qas]
[{'question': '姬猪有多长？', 'id': 'TRAIN_3804_QUERY_0', 'answers': [{'text': '55－71cm长', 'answer_start': 110}]}, {'question': '姬猪主要以什么为食物？', 'id': 'TRAIN_3804_QUERY_1', 'answers': [{'text': '草树根，昆虫，小鼠类和小爬虫', 'answer_start': 245}]}, {'question': '姬猪的寿命大约为多少年？', 'id': 'TRAIN_3804_QUERY_2', 'answers': [{'text': '八年', 'answer_start': 266}]}, {'question': '刚出生的姬猪是什么颜色？', 'id': 'TRAIN_3804_QUERY_3', 'answers': [{'text': '粉灰色', 'answer_start': 163}]}, {'question': '姬猪的孕期为多少天？', 'id': 'TRAIN_3804_QUERY_4', 'answers': [{'text': '100天', 'answer_start': 289}]}]
answer= {'text': '八年', 'answer_start': 266}
orig_answer_text= 八年
answer_offset= 266
answer_length= 2
actual_text= 年，
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '年，' vs. '八年'
==============
paragraph[qas]
[{'question': '姬猪有多长？', 'id': 'TRAIN_3804_QUERY_0', 'answers': [{'text': '55－71cm长', 'answer_start': 110}]}, {'question': '姬猪主要以什么为食物？', 'id': 'TRAIN_3804_QUERY_1', 'answers': [{'text': '草树根，昆虫，小鼠类和小爬虫', 'answer_start': 245}]}, {'question': '姬猪的寿命大约为多少年？', 'id': 'TRAIN_3804_QUERY_2', 'answers': [{'text': '八年', 'answer_start': 266}]}, {'question': '刚出生的姬猪是什么颜色？', 'id': 'TRAIN_3804_QUERY_3', 'answers': [{'text': '粉灰色', 'answer_start': 163}]}, {'question': '姬猪的孕期为多少天？', 'id': 'TRAIN_3804_QUERY_4', 'answers': [{'text': '100天', 'answer_start': 289}]}]
answer= {'text': '粉灰色', 'answer_start': 163}
orig_answer_text= 粉灰色
answer_offset= 163
answer_length= 3
actual_text= 灰色，
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '灰色，' vs. '粉灰色'
==============
paragraph[qas]
[{'question': '姬猪有多长？', 'id': 'TRAIN_3804_QUERY_0', 'answers': [{'text': '55－71cm长', 'answer_start': 110}]}, {'question': '姬猪主要以什么为食物？', 'id': 'TRAIN_3804_QUERY_1', 'answers': [{'text': '草树根，昆虫，小鼠类和小爬虫', 'answer_start': 245}]}, {'question': '姬猪的寿命大约为多少年？', 'id': 'TRAIN_3804_QUERY_2', 'answers': [{'text': '八年', 'answer_start': 266}]}, {'question': '刚出生的姬猪是什么颜色？', 'id': 'TRAIN_3804_QUERY_3', 'answers': [{'text': '粉灰色', 'answer_start': 163}]}, {'question': '姬猪的孕期为多少天？', 'id': 'TRAIN_3804_QUERY_4', 'answers': [{'text': '100天', 'answer_start': 289}]}]
answer= {'text': '100天', 'answer_start': 289}
orig_answer_text= 100天
answer_offset= 289
answer_length= 4
actual_text= 00天，
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '00天，' vs. '100天'
==============
paragraph[qas]
[{'question': '婆罗洲战役是第几次世界大战中同盟国在西南太平洋战区最后一场主要军事行动？', 'id': 'TRAIN_3806_QUERY_0', 'answers': [{'text': '第二次世界大 战', 'answer_start': 6}]}, {'question': '盟军在婆罗洲一系列行动计划代号为双簧管及是属于蒙特克莱尔行动的第2阶段，该行动的目的是是什么？', 'id': 'TRAIN_3806_QUERY_1', 'answers': [{'text': '消灭当地的日军及收复荷属东印度、菲律宾南部及英属婆罗洲北部', 'answer_start': 351}]}, {'question': '蒙特克莱尔行动的第1 阶段，代号为什么？', 'id': 'TRAIN_3806_QUERY_2', 'answers': [{'text': '胜利', 'answer_start': 397}]}, {'question': '蒙特克莱尔行动的第1阶段的目的是什么？', 'id': 'TRAIN_3806_QUERY_3', 'answers': [{'text': '在菲律宾的彭内岛、宿务岛及内格罗岛登陆及已在1945年中完成', 'answer_start': 403}]}, {'question': '原 本双簧管行动分为几个阶段？', 'id': 'TRAIN_3806_QUERY_4', 'answers': [{'text': '6个', 'answer_start': 443}]}]
answer= {'text': '第二次世界大战', 'answer_start': 6}
orig_answer_text= 第二次世界大战
answer_offset= 6
answer_length= 7
actual_text= 是第二次世界大
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '是第二次世界大' vs. '第二次世界大战'
==============
paragraph[qas]
[{'question': '婆罗洲战役是第几次世界大战中同盟国在西南太平洋战区最后一场主要军事行动？', 'id': 'TRAIN_3806_QUERY_0', 'answers': [{'text': '第二次世界大 战', 'answer_start': 6}]}, {'question': '盟军在婆罗洲一系列行动计划代号为双簧管及是属于蒙特克莱尔行动的第2阶段，该行动的目的是是什么？', 'id': 'TRAIN_3806_QUERY_1', 'answers': [{'text': '消灭当地的日军及收复荷属东印度、菲律宾南部及英属婆罗洲北部', 'answer_start': 351}]}, {'question': '蒙特克莱尔行动的第1 阶段，代号为什么？', 'id': 'TRAIN_3806_QUERY_2', 'answers': [{'text': '胜利', 'answer_start': 397}]}, {'question': '蒙特克莱尔行动的第1阶段的目的是什么？', 'id': 'TRAIN_3806_QUERY_3', 'answers': [{'text': '在菲律宾的彭内岛、宿务岛及内格罗岛登陆及已在1945年中完成', 'answer_start': 403}]}, {'question': '原 本双簧管行动分为几个阶段？', 'id': 'TRAIN_3806_QUERY_4', 'answers': [{'text': '6个', 'answer_start': 443}]}]
answer= {'text': '消灭当地的日军及收复荷属东印度、菲律宾南部及英属婆罗洲北部', 'answer_start': 351}
orig_answer_text= 消灭当地的日军及收复荷属东印度、菲律宾南部及英属婆罗洲北部
answer_offset= 351
answer_length= 29
actual_text= 是消灭当地的日军及收复荷属东印度、菲律宾南部及英属婆罗洲北
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '是消灭当地的日军及收复荷属东印度、菲律宾南部及英属婆罗洲北' vs. '消灭当地的日军及收复荷属东印 度、菲律宾南部及英属婆罗洲北部'
==============
paragraph[qas]
[{'question': '婆罗洲战役是第几次世界大战中同盟国在西南太平洋战区最后一场主要军事行动？', 'id': 'TRAIN_3806_QUERY_0', 'answers': [{'text': '第二次世界大 战', 'answer_start': 6}]}, {'question': '盟军在婆罗洲一系列行动计划代号为双簧管及是属于蒙特克莱尔行动的第2阶段，该行动的目的是是什么？', 'id': 'TRAIN_3806_QUERY_1', 'answers': [{'text': '消灭当地的日军及收复荷属东印度、菲律宾南部及英属婆罗洲北部', 'answer_start': 351}]}, {'question': '蒙特克莱尔行动的第1 阶段，代号为什么？', 'id': 'TRAIN_3806_QUERY_2', 'answers': [{'text': '胜利', 'answer_start': 397}]}, {'question': '蒙特克莱尔行动的第1阶段的目的是什么？', 'id': 'TRAIN_3806_QUERY_3', 'answers': [{'text': '在菲律宾的彭内岛、宿务岛及内格罗岛登陆及已在1945年中完成', 'answer_start': 403}]}, {'question': '原 本双簧管行动分为几个阶段？', 'id': 'TRAIN_3806_QUERY_4', 'answers': [{'text': '6个', 'answer_start': 443}]}]
answer= {'text': '胜利', 'answer_start': 397}
orig_answer_text= 胜利
answer_offset= 397
answer_length= 2
actual_text= 为胜
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '为胜' vs. '胜利'
==============
paragraph[qas]
[{'question': '婆罗洲战役是第几次世界大战中同盟国在西南太平洋战区最后一场主要军事行动？', 'id': 'TRAIN_3806_QUERY_0', 'answers': [{'text': '第二次世界大 战', 'answer_start': 6}]}, {'question': '盟军在婆罗洲一系列行动计划代号为双簧管及是属于蒙特克莱尔行动的第2阶段，该行动的目的是是什么？', 'id': 'TRAIN_3806_QUERY_1', 'answers': [{'text': '消灭当地的日军及收复荷属东印度、菲律宾南部及英属婆罗洲北部', 'answer_start': 351}]}, {'question': '蒙特克莱尔行动的第1 阶段，代号为什么？', 'id': 'TRAIN_3806_QUERY_2', 'answers': [{'text': '胜利', 'answer_start': 397}]}, {'question': '蒙特克莱尔行动的第1阶段的目的是什么？', 'id': 'TRAIN_3806_QUERY_3', 'answers': [{'text': '在菲律宾的彭内岛、宿务岛及内格罗岛登陆及已在1945年中完成', 'answer_start': 403}]}, {'question': '原 本双簧管行动分为几个阶段？', 'id': 'TRAIN_3806_QUERY_4', 'answers': [{'text': '6个', 'answer_start': 443}]}]
answer= {'text': '在菲律宾的彭内岛、宿务岛及内格罗岛登陆及已在1945年中完成', 'answer_start': 403}
orig_answer_text= 在菲律宾的彭内岛、宿务岛及内格罗岛登陆及已在1945年中完成
answer_offset= 403
answer_length= 30
actual_text= 是在菲律宾的彭内岛、宿务岛及内格罗岛登陆及已在1945年中完
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '是在菲律宾的彭内岛、宿务岛及内格罗岛登陆及已在1945年中完' vs. '在菲律宾的彭内岛、宿务岛及内格 罗岛登陆及已在1945年中完成'
==============
paragraph[qas]
[{'question': '婆罗洲战役是第几次世界大战中同盟国在西南太平洋战区最后一场主要军事行动？', 'id': 'TRAIN_3806_QUERY_0', 'answers': [{'text': '第二次世界大 战', 'answer_start': 6}]}, {'question': '盟军在婆罗洲一系列行动计划代号为双簧管及是属于蒙特克莱尔行动的第2阶段，该行动的目的是是什么？', 'id': 'TRAIN_3806_QUERY_1', 'answers': [{'text': '消灭当地的日军及收复荷属东印度、菲律宾南部及英属婆罗洲北部', 'answer_start': 351}]}, {'question': '蒙特克莱尔行动的第1 阶段，代号为什么？', 'id': 'TRAIN_3806_QUERY_2', 'answers': [{'text': '胜利', 'answer_start': 397}]}, {'question': '蒙特克莱尔行动的第1阶段的目的是什么？', 'id': 'TRAIN_3806_QUERY_3', 'answers': [{'text': '在菲律宾的彭内岛、宿务岛及内格罗岛登陆及已在1945年中完成', 'answer_start': 403}]}, {'question': '原 本双簧管行动分为几个阶段？', 'id': 'TRAIN_3806_QUERY_4', 'answers': [{'text': '6个', 'answer_start': 443}]}]
answer= {'text': '6个', 'answer_start': 443}
orig_answer_text= 6个
answer_offset= 443
answer_length= 2
actual_text= 为6
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '为6' vs. '6个'
==============
paragraph[qas]
[{'question': '杨宁是哪个朝代的政治人物？', 'id': 'TRAIN_3807_QUERY_0', 'answers': [{'text': '明朝', 'answer_start': 15}]}, {'question': '杨宁字什么？', 'id': 'TRAIN_3807_QUERY_1', 'answers': [{'text': '彦谧', 'answer_start': 6}]}, {'question': '杨宁在哪一年中举人？', 'id': 'TRAIN_3807_QUERY_2', 'answers': [{'text': '永乐丁酉（1417年）', 'answer_start': 76}]}, {'question': '杨宁在正统六年（1441年）跟随谁征讨思任发？', 'id': 'TRAIN_3807_QUERY_3', 'answers': [{'text': '王骥征', 'answer_start': 194}]}, {'question': '杨宁的弟弟是谁？', 'id': 'TRAIN_3807_QUERY_4', 'answers': [{'text': '杨宜', 'answer_start': 302}]}]
answer= {'text': '明朝', 'answer_start': 15}
orig_answer_text= 明朝
answer_offset= 15
answer_length= 2
actual_text= 。明
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '。明' vs. '明朝'
==============
paragraph[qas]
[{'question': '杨宁是哪个朝代的政治人物？', 'id': 'TRAIN_3807_QUERY_0', 'answers': [{'text': '明朝', 'answer_start': 15}]}, {'question': '杨宁字什么？', 'id': 'TRAIN_3807_QUERY_1', 'answers': [{'text': '彦谧', 'answer_start': 6}]}, {'question': '杨宁在哪一年中举人？', 'id': 'TRAIN_3807_QUERY_2', 'answers': [{'text': '永乐丁酉（1417年）', 'answer_start': 76}]}, {'question': '杨宁在正统六年（1441年）跟随谁征讨思任发？', 'id': 'TRAIN_3807_QUERY_3', 'answers': [{'text': '王骥征', 'answer_start': 194}]}, {'question': '杨宁的弟弟是谁？', 'id': 'TRAIN_3807_QUERY_4', 'answers': [{'text': '杨宜', 'answer_start': 302}]}]
answer= {'text': '彦谧', 'answer_start': 6}
orig_answer_text= 彦谧
answer_offset= 6
answer_length= 2
actual_text= 字彦
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '字彦' vs. '彦谧'
==============
paragraph[qas]
[{'question': '杨宁是哪个朝代的政治人物？', 'id': 'TRAIN_3807_QUERY_0', 'answers': [{'text': '明朝', 'answer_start': 15}]}, {'question': '杨宁字什么？', 'id': 'TRAIN_3807_QUERY_1', 'answers': [{'text': '彦谧', 'answer_start': 6}]}, {'question': '杨宁在哪一年中举人？', 'id': 'TRAIN_3807_QUERY_2', 'answers': [{'text': '永乐丁酉（1417年）', 'answer_start': 76}]}, {'question': '杨宁在正统六年（1441年）跟随谁征讨思任发？', 'id': 'TRAIN_3807_QUERY_3', 'answers': [{'text': '王骥征', 'answer_start': 194}]}, {'question': '杨宁的弟弟是谁？', 'id': 'TRAIN_3807_QUERY_4', 'answers': [{'text': '杨宜', 'answer_start': 302}]}]
answer= {'text': '永乐丁酉（1417年）', 'answer_start': 76}
orig_answer_text= 永乐丁酉（1417年）
answer_offset= 76
answer_length= 11
actual_text= 。永乐丁酉（1417年
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '。永乐丁酉（1417年' vs. '永乐丁酉（1417年）'
==============
paragraph[qas]
[{'question': '杨宁是哪个朝代的政治人物？', 'id': 'TRAIN_3807_QUERY_0', 'answers': [{'text': '明朝', 'answer_start': 15}]}, {'question': '杨宁字什么？', 'id': 'TRAIN_3807_QUERY_1', 'answers': [{'text': '彦谧', 'answer_start': 6}]}, {'question': '杨宁在哪一年中举人？', 'id': 'TRAIN_3807_QUERY_2', 'answers': [{'text': '永乐丁酉（1417年）', 'answer_start': 76}]}, {'question': '杨宁在正统六年（1441年）跟随谁征讨思任发？', 'id': 'TRAIN_3807_QUERY_3', 'answers': [{'text': '王骥征', 'answer_start': 194}]}, {'question': '杨宁的弟弟是谁？', 'id': 'TRAIN_3807_QUERY_4', 'answers': [{'text': '杨宜', 'answer_start': 302}]}]
answer= {'text': '王骥征', 'answer_start': 194}
orig_answer_text= 王骥征
answer_offset= 194
answer_length= 3
actual_text= 书王骥
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '书王骥' vs. '王骥征'
==============
paragraph[qas]
[{'question': '杨宁是哪个朝代的政治人物？', 'id': 'TRAIN_3807_QUERY_0', 'answers': [{'text': '明朝', 'answer_start': 15}]}, {'question': '杨宁字什么？', 'id': 'TRAIN_3807_QUERY_1', 'answers': [{'text': '彦谧', 'answer_start': 6}]}, {'question': '杨宁在哪一年中举人？', 'id': 'TRAIN_3807_QUERY_2', 'answers': [{'text': '永乐丁酉（1417年）', 'answer_start': 76}]}, {'question': '杨宁在正统六年（1441年）跟随谁征讨思任发？', 'id': 'TRAIN_3807_QUERY_3', 'answers': [{'text': '王骥征', 'answer_start': 194}]}, {'question': '杨宁的弟弟是谁？', 'id': 'TRAIN_3807_QUERY_4', 'answers': [{'text': '杨宜', 'answer_start': 302}]}]
answer= {'text': '杨宜', 'answer_start': 302}
orig_answer_text= 杨宜
answer_offset= 302
answer_length= 2
actual_text= 弟杨
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '弟杨' vs. '杨宜'
==============
paragraph[qas]
[{'question': '陆佑的身份是什么？', 'id': 'TRAIN_3808_QUERY_0', 'answers': [{'text': '马来亚著名华侨实业家、金融家，慈善家', 'answer_start': 9}]}, {'question': '陆佑几岁至新加坡？', 'id': 'TRAIN_3808_QUERY_1', 'answers': [{'text': '13岁', 'answer_start': 146}]}, {'question': '陆佑克勤克俭，经过四年储蓄了99元，他利用这笔钱创办了什么？', 'id': 'TRAIN_3808_QUERY_2', 'answers': [{'text': '商号「兴隆」', 'answer_start': 210}]}, {'question': '在1872年时，当地两个对立的华人党派——海山党和义兴党，因为什么而发生大规模的械斗？', 'id': 'TRAIN_3808_QUERY_3', 'answers': [{'text': '争夺矿地', 'answer_start': 371}]}]
answer= {'text': '马来亚著名华侨实业家、金融家，慈善家', 'answer_start': 9}
orig_answer_text= 马来亚著名华侨实业家、金融家，慈善家
answer_offset= 9
answer_length= 18
actual_text= ，马来亚著名华侨实业家、金融家，慈善
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '，马来亚著名华侨实业家、金融家，慈善' vs. '马来亚著名华侨实业家、金融家，慈善家'
==============
paragraph[qas]
[{'question': '陆佑的身份是什么？', 'id': 'TRAIN_3808_QUERY_0', 'answers': [{'text': '马来亚著名华侨实业家、金融家，慈善家', 'answer_start': 9}]}, {'question': '陆佑几岁至新加坡？', 'id': 'TRAIN_3808_QUERY_1', 'answers': [{'text': '13岁', 'answer_start': 146}]}, {'question': '陆佑克勤克俭，经过四年储蓄了99元，他利用这笔钱创办了什么？', 'id': 'TRAIN_3808_QUERY_2', 'answers': [{'text': '商号「兴隆」', 'answer_start': 210}]}, {'question': '在1872年时，当地两个对立的华人党派——海山党和义兴党，因为什么而发生大规模的械斗？', 'id': 'TRAIN_3808_QUERY_3', 'answers': [{'text': '争夺矿地', 'answer_start': 371}]}]
answer= {'text': '13岁', 'answer_start': 146}
orig_answer_text= 13岁
answer_offset= 146
answer_length= 3
actual_text= 仅13
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '仅13' vs. '13岁'
==============
paragraph[qas]
[{'question': '陆佑的身份是什么？', 'id': 'TRAIN_3808_QUERY_0', 'answers': [{'text': '马来亚著名华侨实业家、金融家，慈善家', 'answer_start': 9}]}, {'question': '陆佑几岁至新加坡？', 'id': 'TRAIN_3808_QUERY_1', 'answers': [{'text': '13岁', 'answer_start': 146}]}, {'question': '陆佑克勤克俭，经过四年储蓄了99元，他利用这笔钱创办了什么？', 'id': 'TRAIN_3808_QUERY_2', 'answers': [{'text': '商号「兴隆」', 'answer_start': 210}]}, {'question': '在1872年时，当地两个对立的华人党派——海山党和义兴党，因为什么而发生大规模的械斗？', 'id': 'TRAIN_3808_QUERY_3', 'answers': [{'text': '争夺矿地', 'answer_start': 371}]}]
answer= {'text': '商号「兴隆」', 'answer_start': 210}
orig_answer_text= 商号「兴隆」
answer_offset= 210
answer_length= 6
actual_text= 了商号「兴隆
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '了商号「兴隆' vs. '商号「兴隆」'
==============
paragraph[qas]
[{'question': '陆佑的身份是什么？', 'id': 'TRAIN_3808_QUERY_0', 'answers': [{'text': '马来亚著名华侨实业家、金融家，慈善家', 'answer_start': 9}]}, {'question': '陆佑几岁至新加坡？', 'id': 'TRAIN_3808_QUERY_1', 'answers': [{'text': '13岁', 'answer_start': 146}]}, {'question': '陆佑克勤克俭，经过四年储蓄了99元，他利用这笔钱创办了什么？', 'id': 'TRAIN_3808_QUERY_2', 'answers': [{'text': '商号「兴隆」', 'answer_start': 210}]}, {'question': '在1872年时，当地两个对立的华人党派——海山党和义兴党，因为什么而发生大规模的械斗？', 'id': 'TRAIN_3808_QUERY_3', 'answers': [{'text': '争夺矿地', 'answer_start': 371}]}]
answer= {'text': '争夺矿地', 'answer_start': 371}
orig_answer_text= 争夺矿地
answer_offset= 371
answer_length= 4
actual_text= 为争夺矿
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '为争夺矿' vs. '争夺矿地'
==============
paragraph[qas]
[{'question': '司马岐是哪里人？', 'id': 'TRAIN_3809_QUERY_0', 'answers': [{'text': '河内温县人', 'answer_start': 11}]}, {'question': '司马岐因为什么而获 升任廷尉？', 'id': 'TRAIN_3809_QUERY_1', 'answers': [{'text': '一夜之间就解决了案件', 'answer_start': 221}]}, {'question': '尚书何晏、邓飏等都作为谁的党 羽？', 'id': 'TRAIN_3809_QUERY_2', 'answers': [{'text': '大将军曹爽', 'answer_start': 242}]}, {'question': '司马岐享年多少岁？', 'id': 'TRAIN_3809_QUERY_3', 'answers': [{'text': '三十五岁', 'answer_start': 393}]}, {'question': '司马岐为何要称病离职？', 'id': 'TRAIN_3809_QUERY_4', 'answers': [{'text': '害 怕他的说话会被邓飏追究而获罪', 'answer_start': 357}]}]
answer= {'text': '河内温县人', 'answer_start': 11}
orig_answer_text= 河内温县人
answer_offset= 11
answer_length= 5
actual_text= ，河内温县
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '，河内温县' vs. '河内温县人'
==============
paragraph[qas]
[{'question': '司马岐是哪里人？', 'id': 'TRAIN_3809_QUERY_0', 'answers': [{'text': '河内温县人', 'answer_start': 11}]}, {'question': '司马岐因为什么而获 升任廷尉？', 'id': 'TRAIN_3809_QUERY_1', 'answers': [{'text': '一夜之间就解决了案件', 'answer_start': 221}]}, {'question': '尚书何晏、邓飏等都作为谁的党 羽？', 'id': 'TRAIN_3809_QUERY_2', 'answers': [{'text': '大将军曹爽', 'answer_start': 242}]}, {'question': '司马岐享年多少岁？', 'id': 'TRAIN_3809_QUERY_3', 'answers': [{'text': '三十五岁', 'answer_start': 393}]}, {'question': '司马岐为何要称病离职？', 'id': 'TRAIN_3809_QUERY_4', 'answers': [{'text': '害 怕他的说话会被邓飏追究而获罪', 'answer_start': 357}]}]
answer= {'text': '一夜之间就解决了案件', 'answer_start': 221}
orig_answer_text= 一夜之间就解决了案件
answer_offset= 221
answer_length= 10
actual_text= ，一夜之间就解决了案
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '，一夜之间就解决了案' vs. '一夜之间就解决了案件'
==============
paragraph[qas]
[{'question': '司马岐是哪里人？', 'id': 'TRAIN_3809_QUERY_0', 'answers': [{'text': '河内温县人', 'answer_start': 11}]}, {'question': '司马岐因为什么而获 升任廷尉？', 'id': 'TRAIN_3809_QUERY_1', 'answers': [{'text': '一夜之间就解决了案件', 'answer_start': 221}]}, {'question': '尚书何晏、邓飏等都作为谁的党 羽？', 'id': 'TRAIN_3809_QUERY_2', 'answers': [{'text': '大将军曹爽', 'answer_start': 242}]}, {'question': '司马岐享年多少岁？', 'id': 'TRAIN_3809_QUERY_3', 'answers': [{'text': '三十五岁', 'answer_start': 393}]}, {'question': '司马岐为何要称病离职？', 'id': 'TRAIN_3809_QUERY_4', 'answers': [{'text': '害 怕他的说话会被邓飏追究而获罪', 'answer_start': 357}]}]
answer= {'text': '大将军曹爽', 'answer_start': 242}
orig_answer_text= 大将军曹爽
answer_offset= 242
answer_length= 5
actual_text= 时大将军曹
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '时大将军曹' vs. '大将军曹爽'
==============
paragraph[qas]
[{'question': '司马岐是哪里人？', 'id': 'TRAIN_3809_QUERY_0', 'answers': [{'text': '河内温县人', 'answer_start': 11}]}, {'question': '司马岐因为什么而获 升任廷尉？', 'id': 'TRAIN_3809_QUERY_1', 'answers': [{'text': '一夜之间就解决了案件', 'answer_start': 221}]}, {'question': '尚书何晏、邓飏等都作为谁的党 羽？', 'id': 'TRAIN_3809_QUERY_2', 'answers': [{'text': '大将军曹爽', 'answer_start': 242}]}, {'question': '司马岐享年多少岁？', 'id': 'TRAIN_3809_QUERY_3', 'answers': [{'text': '三十五岁', 'answer_start': 393}]}, {'question': '司马岐为何要称病离职？', 'id': 'TRAIN_3809_QUERY_4', 'answers': [{'text': '害 怕他的说话会被邓飏追究而获罪', 'answer_start': 357}]}]
answer= {'text': '三十五岁', 'answer_start': 393}
orig_answer_text= 三十五岁
answer_offset= 393
answer_length= 4
actual_text= 仅三十五
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '仅三十五' vs. '三十五岁'
==============
paragraph[qas]
[{'question': '司马岐是哪里人？', 'id': 'TRAIN_3809_QUERY_0', 'answers': [{'text': '河内温县人', 'answer_start': 11}]}, {'question': '司马岐因为什么而获 升任廷尉？', 'id': 'TRAIN_3809_QUERY_1', 'answers': [{'text': '一夜之间就解决了案件', 'answer_start': 221}]}, {'question': '尚书何晏、邓飏等都作为谁的党 羽？', 'id': 'TRAIN_3809_QUERY_2', 'answers': [{'text': '大将军曹爽', 'answer_start': 242}]}, {'question': '司马岐享年多少岁？', 'id': 'TRAIN_3809_QUERY_3', 'answers': [{'text': '三十五岁', 'answer_start': 393}]}, {'question': '司马岐为何要称病离职？', 'id': 'TRAIN_3809_QUERY_4', 'answers': [{'text': '害 怕他的说话会被邓飏追究而获罪', 'answer_start': 357}]}]
answer= {'text': '害怕他的说话会被邓飏追究而获罪', 'answer_start': 357}
orig_answer_text= 害怕他的说话会被邓飏追究而获罪
answer_offset= 357
answer_length= 15
actual_text= 后害怕他的说话会被邓飏追究而获
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '后害怕他的说话会被邓飏追究而获' vs. '害怕他的说话会被邓飏追究而获罪'
==============
paragraph[qas]
[{'question': '晋侯稣编钟是哪个朝代的青铜乐器？', 'id': 'TRAIN_3810_QUERY_0', 'answers': [{'text': '西周', 'answer_start': 6}]}, {'question': '晋侯稣编钟有14件为盗墓者盗掘，现于何处？', 'id': 'TRAIN_3810_QUERY_1', 'answers': [{'text': '上海博物馆', 'answer_start': 108}]}, {'question': '山西省侯马市曲沃县 曲村的附近，曾是晋国最早的都城所在地，有几晋侯及夫人的墓葬', 'id': 'TRAIN_3810_QUERY_2', 'answers': [{'text': '九代', 'answer_start': 179}]}, {'question': '晋侯稣编钟铸于什么时候？', 'id': 'TRAIN_3810_QUERY_3', 'answers': [{'text': '前9世纪中叶', 'answer_start': 16}]}, {'question': '晋侯稣编钟全套共多少件？', 'id': 'TRAIN_3810_QUERY_4', 'answers': [{'text': '16件', 'answer_start': 90}]}]
answer= {'text': '西周', 'answer_start': 6}
orig_answer_text= 西周
answer_offset= 6
answer_length= 2
actual_text= 是西
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '是西' vs. '西周'
==============
paragraph[qas]
[{'question': '晋侯稣编钟是哪个朝代的青铜乐器？', 'id': 'TRAIN_3810_QUERY_0', 'answers': [{'text': '西周', 'answer_start': 6}]}, {'question': '晋侯稣编钟有14件为盗墓者盗掘，现于何处？', 'id': 'TRAIN_3810_QUERY_1', 'answers': [{'text': '上海博物馆', 'answer_start': 108}]}, {'question': '山西省侯马市曲沃县 曲村的附近，曾是晋国最早的都城所在地，有几晋侯及夫人的墓葬', 'id': 'TRAIN_3810_QUERY_2', 'answers': [{'text': '九代', 'answer_start': 179}]}, {'question': '晋侯稣编钟铸于什么时候？', 'id': 'TRAIN_3810_QUERY_3', 'answers': [{'text': '前9世纪中叶', 'answer_start': 16}]}, {'question': '晋侯稣编钟全套共多少件？', 'id': 'TRAIN_3810_QUERY_4', 'answers': [{'text': '16件', 'answer_start': 90}]}]
answer= {'text': '上海博物馆', 'answer_start': 108}
orig_answer_text= 上海博物馆
answer_offset= 108
answer_length= 5
actual_text= 由上海博物
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '由上海博物' vs. '上海博物馆'
==============
paragraph[qas]
[{'question': '晋侯稣编钟是哪个朝代的青铜乐器？', 'id': 'TRAIN_3810_QUERY_0', 'answers': [{'text': '西周', 'answer_start': 6}]}, {'question': '晋侯稣编钟有14件为盗墓者盗掘，现于何处？', 'id': 'TRAIN_3810_QUERY_1', 'answers': [{'text': '上海博物馆', 'answer_start': 108}]}, {'question': '山西省侯马市曲沃县 曲村的附近，曾是晋国最早的都城所在地，有几晋侯及夫人的墓葬', 'id': 'TRAIN_3810_QUERY_2', 'answers': [{'text': '九代', 'answer_start': 179}]}, {'question': '晋侯稣编钟铸于什么时候？', 'id': 'TRAIN_3810_QUERY_3', 'answers': [{'text': '前9世纪中叶', 'answer_start': 16}]}, {'question': '晋侯稣编钟全套共多少件？', 'id': 'TRAIN_3810_QUERY_4', 'answers': [{'text': '16件', 'answer_start': 90}]}]
answer= {'text': '九代', 'answer_start': 179}
orig_answer_text= 九代
answer_offset= 179
answer_length= 2
actual_text= 有九
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '有九' vs. '九代'
==============
paragraph[qas]
[{'question': '晋侯稣编钟是哪个朝代的青铜乐器？', 'id': 'TRAIN_3810_QUERY_0', 'answers': [{'text': '西周', 'answer_start': 6}]}, {'question': '晋侯稣编钟有14件为盗墓者盗掘，现于何处？', 'id': 'TRAIN_3810_QUERY_1', 'answers': [{'text': '上海博物馆', 'answer_start': 108}]}, {'question': '山西省侯马市曲沃县 曲村的附近，曾是晋国最早的都城所在地，有几晋侯及夫人的墓葬', 'id': 'TRAIN_3810_QUERY_2', 'answers': [{'text': '九代', 'answer_start': 179}]}, {'question': '晋侯稣编钟铸于什么时候？', 'id': 'TRAIN_3810_QUERY_3', 'answers': [{'text': '前9世纪中叶', 'answer_start': 16}]}, {'question': '晋侯稣编钟全套共多少件？', 'id': 'TRAIN_3810_QUERY_4', 'answers': [{'text': '16件', 'answer_start': 90}]}]
answer= {'text': '前9世纪中叶', 'answer_start': 16}
orig_answer_text= 前9世纪中叶
answer_offset= 16
answer_length= 6
actual_text= 于前9世纪中
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '于前9世纪中' vs. '前9世纪中叶'
==============
paragraph[qas]
[{'question': '晋侯稣编钟是哪个朝代的青铜乐器？', 'id': 'TRAIN_3810_QUERY_0', 'answers': [{'text': '西周', 'answer_start': 6}]}, {'question': '晋侯稣编钟有14件为盗墓者盗掘，现于何处？', 'id': 'TRAIN_3810_QUERY_1', 'answers': [{'text': '上海博物馆', 'answer_start': 108}]}, {'question': '山西省侯马市曲沃县 曲村的附近，曾是晋国最早的都城所在地，有几晋侯及夫人的墓葬', 'id': 'TRAIN_3810_QUERY_2', 'answers': [{'text': '九代', 'answer_start': 179}]}, {'question': '晋侯稣编钟铸于什么时候？', 'id': 'TRAIN_3810_QUERY_3', 'answers': [{'text': '前9世纪中叶', 'answer_start': 16}]}, {'question': '晋侯稣编钟全套共多少件？', 'id': 'TRAIN_3810_QUERY_4', 'answers': [{'text': '16件', 'answer_start': 90}]}]
answer= {'text': '16件', 'answer_start': 90}
orig_answer_text= 16件
answer_offset= 90
answer_length= 3
actual_text= 共16
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '共16' vs. '16件'
==============
paragraph[qas]
[{'question': '《武尊少林》这部电视连续剧，全剧共多少集？', 'id': 'TRAIN_3811_QUERY_0', 'answers': [{'text': '共20集', 'answer_start': 32}]}, {'question': '《武尊少林》是香港无线电视在哪一年拍摄的电视连续剧？', 'id': 'TRAIN_3811_QUERY_1', 'answers': [{'text': '1993年', 'answer_start': 16}]}, {'question': '《武尊少林》的监制是谁？', 'id': 'TRAIN_3811_QUERY_2', 'answers': [{'text': '杨锦泉', 'answer_start': 39}]}, {'question': '《武尊少林》的主题曲由谁作曲 ？', 'id': 'TRAIN_3811_QUERY_3', 'answers': [{'text': '徐嘉良', 'answer_start': 98}]}]
answer= {'text': '共20集', 'answer_start': 32}
orig_answer_text= 共20集
answer_offset= 32
answer_length= 4
actual_text= 剧共20
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '剧共20' vs. '共20集'
==============
paragraph[qas]
[{'question': '《武尊少林》这部电视连续剧，全剧共多少集？', 'id': 'TRAIN_3811_QUERY_0', 'answers': [{'text': '共20集', 'answer_start': 32}]}, {'question': '《武尊少林》是香港无线电视在哪一年拍摄的电视连续剧？', 'id': 'TRAIN_3811_QUERY_1', 'answers': [{'text': '1993年', 'answer_start': 16}]}, {'question': '《武尊少林》的监制是谁？', 'id': 'TRAIN_3811_QUERY_2', 'answers': [{'text': '杨锦泉', 'answer_start': 39}]}, {'question': '《武尊少林》的主题曲由谁作曲 ？', 'id': 'TRAIN_3811_QUERY_3', 'answers': [{'text': '徐嘉良', 'answer_start': 98}]}]
answer= {'text': '1993年', 'answer_start': 16}
orig_answer_text= 1993年
answer_offset= 16
answer_length= 5
actual_text= 视1993
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '视1993' vs. '1993年'
==============
paragraph[qas]
[{'question': '《武尊少林》这部电视连续剧，全剧共多少集？', 'id': 'TRAIN_3811_QUERY_0', 'answers': [{'text': '共20集', 'answer_start': 32}]}, {'question': '《武尊少林》是香港无线电视在哪一年拍摄的电视连续剧？', 'id': 'TRAIN_3811_QUERY_1', 'answers': [{'text': '1993年', 'answer_start': 16}]}, {'question': '《武尊少林》的监制是谁？', 'id': 'TRAIN_3811_QUERY_2', 'answers': [{'text': '杨锦泉', 'answer_start': 39}]}, {'question': '《武尊少林》的主题曲由谁作曲 ？', 'id': 'TRAIN_3811_QUERY_3', 'answers': [{'text': '徐嘉良', 'answer_start': 98}]}]
answer= {'text': '杨锦泉', 'answer_start': 39}
orig_answer_text= 杨锦泉
answer_offset= 39
answer_length= 3
actual_text= 制杨锦
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '制杨锦' vs. '杨锦泉'
==============
paragraph[qas]
[{'question': '《武尊少林》这部电视连续剧，全剧共多少集？', 'id': 'TRAIN_3811_QUERY_0', 'answers': [{'text': '共20集', 'answer_start': 32}]}, {'question': '《武尊少林》是香港无线电视在哪一年拍摄的电视连续剧？', 'id': 'TRAIN_3811_QUERY_1', 'answers': [{'text': '1993年', 'answer_start': 16}]}, {'question': '《武尊少林》的监制是谁？', 'id': 'TRAIN_3811_QUERY_2', 'answers': [{'text': '杨锦泉', 'answer_start': 39}]}, {'question': '《武尊少林》的主题曲由谁作曲 ？', 'id': 'TRAIN_3811_QUERY_3', 'answers': [{'text': '徐嘉良', 'answer_start': 98}]}]
answer= {'text': '徐嘉良', 'answer_start': 98}
orig_answer_text= 徐嘉良
answer_offset= 98
answer_length= 3
actual_text= 由徐嘉
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '由徐嘉' vs. '徐嘉良'
==============
paragraph[qas]
[{'question': '尼古洛巴托总统国际机场之前称什么机场？', 'id': 'TRAIN_3812_QUERY_0', 'answers': [{'text': '科摩罗国际机场', 'answer_start': 18}]}, {'question': '尼古洛巴托总统国际机场位于哪里？', 'id': 'TRAIN_3812_QUERY_1', 'answers': [{'text': '东帝汶帝力', 'answer_start': 32}]}, {'question': '东帝汶为什 么要将国际机场命名为「尼古劳·洛巴托总统国际机场」？', 'id': 'TRAIN_3812_QUERY_2', 'answers': [{'text': '尼古·洛巴托在今日视同东帝汶国家英雄', 'answer_start': 39}]}, {'question': '在什么事件后，包考机场被印尼军方接管并停止民航运营？', 'id': 'TRAIN_3812_QUERY_3', 'answers': [{'text': '1975年的印度尼西亚入侵东帝汶事件', 'answer_start': 262}]}]
answer= {'text': '科摩罗国际机场', 'answer_start': 18}
orig_answer_text= 科摩罗国际机场
answer_offset= 18
answer_length= 7
actual_text= 称科摩罗国际机
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '称科摩罗国际机' vs. '科摩罗国际机场'
==============
paragraph[qas]
[{'question': '尼古洛巴托总统国际机场之前称什么机场？', 'id': 'TRAIN_3812_QUERY_0', 'answers': [{'text': '科摩罗国际机场', 'answer_start': 18}]}, {'question': '尼古洛巴托总统国际机场位于哪里？', 'id': 'TRAIN_3812_QUERY_1', 'answers': [{'text': '东帝汶帝力', 'answer_start': 32}]}, {'question': '东帝汶为什 么要将国际机场命名为「尼古劳·洛巴托总统国际机场」？', 'id': 'TRAIN_3812_QUERY_2', 'answers': [{'text': '尼古·洛巴托在今日视同东帝汶国家英雄', 'answer_start': 39}]}, {'question': '在什么事件后，包考机场被印尼军方接管并停止民航运营？', 'id': 'TRAIN_3812_QUERY_3', 'answers': [{'text': '1975年的印度尼西亚入侵东帝汶事件', 'answer_start': 262}]}]
answer= {'text': '东帝汶帝力', 'answer_start': 32}
orig_answer_text= 东帝汶帝力
answer_offset= 32
answer_length= 5
actual_text= 于东帝汶帝
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '于东帝汶帝' vs. '东帝汶帝力'
==============
paragraph[qas]
[{'question': '尼古洛巴托总统国际机场之前称什么机场？', 'id': 'TRAIN_3812_QUERY_0', 'answers': [{'text': '科摩罗国际机场', 'answer_start': 18}]}, {'question': '尼古洛巴托总统国际机场位于哪里？', 'id': 'TRAIN_3812_QUERY_1', 'answers': [{'text': '东帝汶帝力', 'answer_start': 32}]}, {'question': '东帝汶为什 么要将国际机场命名为「尼古劳·洛巴托总统国际机场」？', 'id': 'TRAIN_3812_QUERY_2', 'answers': [{'text': '尼古·洛巴托在今日视同东帝汶国家英雄', 'answer_start': 39}]}, {'question': '在什么事件后，包考机场被印尼军方接管并停止民航运营？', 'id': 'TRAIN_3812_QUERY_3', 'answers': [{'text': '1975年的印度尼西亚入侵东帝汶事件', 'answer_start': 262}]}]
answer= {'text': '尼古·洛巴托在今日视同东帝汶国家英雄', 'answer_start': 39}
orig_answer_text= 尼古·洛巴托在今日视同东帝汶国家英雄
answer_offset= 39
answer_length= 18
actual_text= 因尼古·洛巴托在今日视同东帝汶国家英
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '因尼古·洛巴托在今日视同东帝汶国家英' vs. '尼古·洛巴托在今日视同东帝汶国家英雄'
==============
paragraph[qas]
[{'question': '尼古洛巴托总统国际机场之前称什么机场？', 'id': 'TRAIN_3812_QUERY_0', 'answers': [{'text': '科摩罗国际机场', 'answer_start': 18}]}, {'question': '尼古洛巴托总统国际机场位于哪里？', 'id': 'TRAIN_3812_QUERY_1', 'answers': [{'text': '东帝汶帝力', 'answer_start': 32}]}, {'question': '东帝汶为什 么要将国际机场命名为「尼古劳·洛巴托总统国际机场」？', 'id': 'TRAIN_3812_QUERY_2', 'answers': [{'text': '尼古·洛巴托在今日视同东帝汶国家英雄', 'answer_start': 39}]}, {'question': '在什么事件后，包考机场被印尼军方接管并停止民航运营？', 'id': 'TRAIN_3812_QUERY_3', 'answers': [{'text': '1975年的印度尼西亚入侵东帝汶事件', 'answer_start': 262}]}]
answer= {'text': '1975年的印度尼西亚入侵东帝汶事件', 'answer_start': 262}
orig_answer_text= 1975年的印度尼西亚入侵东帝汶事件
answer_offset= 262
answer_length= 18
actual_text= 在1975年的印度尼西亚入侵东帝汶事
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '在1975年的印度尼西亚入侵东帝汶事' vs. '1975年的印度尼西亚入侵东帝汶事件'
==============
paragraph[qas]
[{'question': '《外交边缘》又名什么？', 'id': 'TRAIN_3813_QUERY_0', 'answers': [{'text': '《燃眉追击》或《国家内部》', 'answer_start': 11}]}, {'question': '《外交边缘》是哪两个电视台于2006年共同制作的电视剧？', 'id': 'TRAIN_3813_QUERY_1', 'answers': [{'text': '英国广播公司与英国广播公司美国台', 'answer_start': 29}]}, {'question': '《外交边缘》是一套以什么为题材的剧集？', 'id': 'TRAIN_3813_QUERY_2', 'answers': [{'text': '以国际政局为题材', 'answer_start': 71}]}, {'question': '《外交边缘全剧总共有多少集？', 'id': 'TRAIN_3813_QUERY_3', 'answers': [{'text': '六集', 'answer_start': 65}]}, {'question': '《外交 边缘》剧集以谁的故事为蓝本？', 'id': 'TRAIN_3813_QUERY_4', 'answers': [{'text': '以前英国驻乌兹别克斯坦大使Craig Murray的故事', 'answer_start': 85}]}]
answer= {'text': '《燃眉追击》或《国家内部》', 'answer_start': 11}
orig_answer_text= 《燃眉追击》或《国家内部》
answer_offset= 11
answer_length= 13
actual_text= 名《燃眉追击》或《国家内部
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '名《燃眉追击》或《国家内部' vs. '《燃眉追击》或《国家内部》'
==============
paragraph[qas]
[{'question': '《外交边缘》又名什么？', 'id': 'TRAIN_3813_QUERY_0', 'answers': [{'text': '《燃眉追击》或《国家内部》', 'answer_start': 11}]}, {'question': '《外交边缘》是哪两个电视台于2006年共同制作的电视剧？', 'id': 'TRAIN_3813_QUERY_1', 'answers': [{'text': '英国广播公司与英国广播公司美国台', 'answer_start': 29}]}, {'question': '《外交边缘》是一套以什么为题材的剧集？', 'id': 'TRAIN_3813_QUERY_2', 'answers': [{'text': '以国际政局为题材', 'answer_start': 71}]}, {'question': '《外交边缘全剧总共有多少集？', 'id': 'TRAIN_3813_QUERY_3', 'answers': [{'text': '六集', 'answer_start': 65}]}, {'question': '《外交 边缘》剧集以谁的故事为蓝本？', 'id': 'TRAIN_3813_QUERY_4', 'answers': [{'text': '以前英国驻乌兹别克斯坦大使Craig Murray的故事', 'answer_start': 85}]}]
answer= {'text': '英国广播公司与英国广播公司美国台', 'answer_start': 29}
orig_answer_text= 英国广播公司与英国广播公司美国台
answer_offset= 29
answer_length= 16
actual_text= 由英国广播公司与英国广播公司美国
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '由英国广播公司与英国广播公司美国' vs. '英国广播公司与英国广播公司美国台'
==============
paragraph[qas]
[{'question': '《外交边缘》又名什么？', 'id': 'TRAIN_3813_QUERY_0', 'answers': [{'text': '《燃眉追击》或《国家内部》', 'answer_start': 11}]}, {'question': '《外交边缘》是哪两个电视台于2006年共同制作的电视剧？', 'id': 'TRAIN_3813_QUERY_1', 'answers': [{'text': '英国广播公司与英国广播公司美国台', 'answer_start': 29}]}, {'question': '《外交边缘》是一套以什么为题材的剧集？', 'id': 'TRAIN_3813_QUERY_2', 'answers': [{'text': '以国际政局为题材', 'answer_start': 71}]}, {'question': '《外交边缘全剧总共有多少集？', 'id': 'TRAIN_3813_QUERY_3', 'answers': [{'text': '六集', 'answer_start': 65}]}, {'question': '《外交 边缘》剧集以谁的故事为蓝本？', 'id': 'TRAIN_3813_QUERY_4', 'answers': [{'text': '以前英国驻乌兹别克斯坦大使Craig Murray的故事', 'answer_start': 85}]}]
answer= {'text': '以国际政局为题材', 'answer_start': 71}
orig_answer_text= 以国际政局为题材
answer_offset= 71
answer_length= 8
actual_text= 套以国际政局为题
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '套以国际政局为题' vs. '以国际政局为题材'
==============
paragraph[qas]
[{'question': '《外交边缘》又名什么？', 'id': 'TRAIN_3813_QUERY_0', 'answers': [{'text': '《燃眉追击》或《国家内部》', 'answer_start': 11}]}, {'question': '《外交边缘》是哪两个电视台于2006年共同制作的电视剧？', 'id': 'TRAIN_3813_QUERY_1', 'answers': [{'text': '英国广播公司与英国广播公司美国台', 'answer_start': 29}]}, {'question': '《外交边缘》是一套以什么为题材的剧集？', 'id': 'TRAIN_3813_QUERY_2', 'answers': [{'text': '以国际政局为题材', 'answer_start': 71}]}, {'question': '《外交边缘全剧总共有多少集？', 'id': 'TRAIN_3813_QUERY_3', 'answers': [{'text': '六集', 'answer_start': 65}]}, {'question': '《外交 边缘》剧集以谁的故事为蓝本？', 'id': 'TRAIN_3813_QUERY_4', 'answers': [{'text': '以前英国驻乌兹别克斯坦大使Craig Murray的故事', 'answer_start': 85}]}]
answer= {'text': '六集', 'answer_start': 65}
orig_answer_text= 六集
answer_offset= 65
answer_length= 2
actual_text= 有六
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '有六' vs. '六集'
==============
paragraph[qas]
[{'question': '《外交边缘》又名什么？', 'id': 'TRAIN_3813_QUERY_0', 'answers': [{'text': '《燃眉追击》或《国家内部》', 'answer_start': 11}]}, {'question': '《外交边缘》是哪两个电视台于2006年共同制作的电视剧？', 'id': 'TRAIN_3813_QUERY_1', 'answers': [{'text': '英国广播公司与英国广播公司美国台', 'answer_start': 29}]}, {'question': '《外交边缘》是一套以什么为题材的剧集？', 'id': 'TRAIN_3813_QUERY_2', 'answers': [{'text': '以国际政局为题材', 'answer_start': 71}]}, {'question': '《外交边缘全剧总共有多少集？', 'id': 'TRAIN_3813_QUERY_3', 'answers': [{'text': '六集', 'answer_start': 65}]}, {'question': '《外交 边缘》剧集以谁的故事为蓝本？', 'id': 'TRAIN_3813_QUERY_4', 'answers': [{'text': '以前英国驻乌兹别克斯坦大使Craig Murray的故事', 'answer_start': 85}]}]
answer= {'text': '以前英国驻乌兹别克斯坦大使Craig Murray的故事', 'answer_start': 85}
orig_answer_text= 以前英国驻乌兹别克斯坦大使Craig Murray的故事
answer_offset= 85
answer_length= 28
actual_text= 集以前英国驻乌兹别克斯坦大使CraigMurray的故事
qas_id= TRAIN_3813_QUERY_4
question_text= 《外交边缘》剧集以谁的故事为蓝本？
doc_tokens= ['《', '外', '交', '边', '缘', '》', '（', '）', '，', '又', '名', '《', '燃', '眉', '追', '击', '》', '或', '《', '国', '家', '内', '部', ' 》', '，', '是', '一', '套', '由', '英', '国', '广', '播', '公', '司', '与', '英', '国', '广', '播', '公', '司', '美', '国', '台', '于', '2', '0', '0', '6', '年', '共', '同', '制', '作', '的', '电', '视', '剧', '。', '全', '剧', '总', '共', '有', '六', '集', '，', '是', '一', '套', '以', '国', '际', '政', '局', '为', '题', '材', '的', '剧', '集', '。', '剧', '集', '以', '前', '英', '国', '驻', '乌', '兹', '别', '克', '斯', '坦', '大', '使', 'C', 'r', 'a', 'i', 'g', 'M', 'u', 'r', 'r', 'a', 'y', '的', '故', '事', '为', '蓝', '本', '。', '故', '事', '讲', '述', '英', '国', '驻', '美', '国', '大', '使', '及', '中', '亚', '一', '个', '虚', '构', '的', '前', '苏', '联', '共', '和', '国', '泰', '吉', '斯', '坦', '（', '影', '射', '塔', '吉', '克', '）', '的', '政', '局', '，', '以', '及', '有', '关', '国', '家', '如', '何', '透', '过', '在', '美', '国', '的', '军', '火', '商', '来', '购', '置', '军', '火', '，', '而', '另', '一', '方', '又', '如', '何', '透', '过', '这', '些', '交', '易', '来', '制', '造', '该', '国', '意', '图', '发', '展', '核', '武', '的', '假', '象', '。', '本', '剧', '于', '2', '0', '0', '6', '年', '1', '1', '月', '2', '日', '逢', '星', '期', '四', '开', '始', '，', '在', 'B', 'B', 'C', '1', '播', '放', '；', '在', '2', '0', '0', '7', '年', '1', '月', '2', '2', '日', '推', '出', 'D', 'V', 'D', '；', '在', '2', '0', '0', '7', '年', '2', '月', '分', '成', '三', '集', '在', '美', '国', '播', '放', '；', '在', '2', '0', '0', '9', '年', '3', '月', '2', '5', '日', '凌', '晨', '1', '2', '时', '开', '始', '逢', '星', '期', '三', '在', '无', '线', '电', '视', '明', '珠', '台', '播', '放', '，', '接', '替', '刚', '完', '结', '的', '《', '变', '身', '怪', '医', '》', '，', '然', '后', '于', '4', '月', '2', '9', '日', '完', '结', '。', '本', '剧', '获', '提', '名', '金', '球', '奖', '的', '最', '佳', '短', '篇', '剧', '集', '或', '动', '画', '电', '视', '。']
orig_answer_text= 以前英国驻乌兹别克斯坦大使Craig Murray的故事
start_position= 84
end_position= 111
is_impossible= False
==============
paragraph[qas]
[{'question': '姆西里王国名称的由来是什么？', 'id': 'TRAIN_3814_QUERY_0', 'answers': [{'text': '其统治者是姆西里', 'answer_start': 73}]}, {'question': ' 姆西里凭借通过贸易获取的枪支以及高超的政治手腕，他建立了以哪个地区为中心的强大王国？', 'id': 'TRAIN_3814_QUERY_1', 'answers': [{'text': '加丹加地区', 'answer_start': 62}]}, {'question': '姆西里死后，其王国疆土被谁占领？', 'id': 'TRAIN_3814_QUERY_2', 'answers': [{'text': '刚果自由邦', 'answer_start': 206}]}, {'question': '姆西里死于哪一年？', 'id': 'TRAIN_3814_QUERY_3', 'answers': [{'text': '1891年', 'answer_start': 43}]}]
answer= {'text': '其统治者是姆西里', 'answer_start': 73}
orig_answer_text= 其统治者是姆西里
answer_offset= 73
answer_length= 8
actual_text= 其统治者是姆西里
qas_id= TRAIN_3814_QUERY_0
question_text= 姆西里王国名称的由来是什么？
doc_tokens= ['姆', '西', '里', '王', '国', '，', '又', '称', '“', '叶', '克', '王', '国', '”', '(', 'Y', 'e', 'k', 'e', 'K', 'i', 'n', 'g', 'd', 'o', 'm', ')', '、', '“', '加', '朗', '甘', '兹', '王', '国', '”', '(', '1', '8', '5', '6', '－', '1', '8', '9', '1', '年', ')', '，', '是', '曾', '建', '立', '于', '今', '刚', '果', '东', '南', '部', '的', '加', '丹', '加', '地', '区', '的', '一', '个', '王', '国', '，', '其', '统', '治', '者', '是', '姆', '西', '里', '，', '因', '此', '得', '名', '。', '姆', '西', '里', '是', '活', '动', '于', '坦', '桑', '尼', '亚', '与', '刚', '果', '地', '区', '的', '一', '个', '商', '人', '，', '凭', '借', '通', '过', '贸', '易', '获', '取', '的', '枪', '支', '以', '及', '高', '超', '的', '政', '治', '手', '腕', '，', '他', '建', '立', '了', '以', '加', '丹', '加', '地', '区', '为', '中', '心', '的', '强', '大', '王', '国', '。', '姆', '西', '里', '王', '国', '曾', '盛', '极', '一', '时', '，', '其', '军', '事', '势', '力', '覆', '盖', '中', '南', '非', '洲', '的', '几', '十', '万', '平', '方', '公', '里', '的', '土', '地', '，', '并', '基', '本', '垄', '断', '了', '该', '地', '区', '的', '贸', '易', '。', '1', '8', '9', '1', '年', '，', '比', '利', '时', '的', '刚', ' 果', '自', '由', '邦', '派', '出', '斯', '泰', '尔', '远', '征', '队', '开', '往', '加', '丹', '加', '，', '副', '官', '波', '德', '森', '在', '与', '姆', '西', '里', '发', '生', '争', '执', '时', '将', '其', '开', '枪', '射', '杀', '。', '姆', '西', '里', '死', '后', '，', '其', '王', '国', '疆', '土', '被', '刚', '果', '自', '由', '邦', '占', '领', '，', '后', '被', '并', '入', '比', '属', '刚', '果', '，', '昙', '花', '一', '现', '的', '姆', '西', '里', '王', '国', '就', '此', '不', '复', '存', '在', '。']
orig_answer_text= 其统治者是姆西里
start_position= 72
end_position= 79
is_impossible= False
==============
paragraph[qas]
[{'question': '姆西里王国名称的由来是什么？', 'id': 'TRAIN_3814_QUERY_0', 'answers': [{'text': '其统治者是姆西里', 'answer_start': 73}]}, {'question': ' 姆西里凭借通过贸易获取的枪支以及高超的政治手腕，他建立了以哪个地区为中心的强大王国？', 'id': 'TRAIN_3814_QUERY_1', 'answers': [{'text': '加丹加地区', 'answer_start': 62}]}, {'question': '姆西里死后，其王国疆土被谁占领？', 'id': 'TRAIN_3814_QUERY_2', 'answers': [{'text': '刚果自由邦', 'answer_start': 206}]}, {'question': '姆西里死于哪一年？', 'id': 'TRAIN_3814_QUERY_3', 'answers': [{'text': '1891年', 'answer_start': 43}]}]
answer= {'text': '加丹加地区', 'answer_start': 62}
orig_answer_text= 加丹加地区
answer_offset= 62
answer_length= 5
actual_text= 加丹加地区
qas_id= TRAIN_3814_QUERY_1
question_text= 姆西里凭借通过贸易获取的枪支以及高超的政治手腕，他建立了以哪个地区为中心的强大王国？
doc_tokens= ['姆', '西', '里', '王', '国', '，', '又', '称', '“', '叶', '克', '王', '国', '”', '(', 'Y', 'e', 'k', 'e', 'K', 'i', 'n', 'g', 'd', 'o', 'm', ')', '、', '“', '加', '朗', '甘', '兹', '王', '国', '”', '(', '1', '8', '5', '6', '－', '1', '8', '9', '1', '年', ')', '，', '是', '曾', '建', '立', '于', '今', '刚', '果', '东', '南', '部', '的', '加', '丹', '加', '地', '区', '的', '一', '个', '王', '国', '，', '其', '统', '治', '者', '是', '姆', '西', '里', '，', '因', '此', '得', '名', '。', '姆', '西', '里', '是', '活', '动', '于', '坦', '桑', '尼', '亚', '与', '刚', '果', '地', '区', '的', '一', '个', '商', '人', '，', '凭', '借', '通', '过', '贸', '易', '获', '取', '的', '枪', '支', '以', '及', '高', '超', '的', '政', '治', '手', '腕', '，', '他', '建', '立', '了', '以', '加', '丹', '加', '地', '区', '为', '中', '心', '的', '强', '大', '王', '国', '。', '姆', '西', '里', '王', '国', '曾', '盛', '极', '一', '时', '，', '其', '军', '事', '势', '力', '覆', '盖', '中', '南', '非', '洲', '的', '几', '十', '万', '平', '方', '公', '里', '的', '土', '地', '，', '并', '基', '本', '垄', '断', '了', '该', '地', '区', '的', '贸', '易', '。', '1', '8', '9', '1', '年', '，', '比', '利', '时', '的', '刚', ' 果', '自', '由', '邦', '派', '出', '斯', '泰', '尔', '远', '征', '队', '开', '往', '加', '丹', '加', '，', '副', '官', '波', '德', '森', '在', '与', '姆', '西', '里', '发', '生', '争', '执', '时', '将', '其', '开', '枪', '射', '杀', '。', '姆', '西', '里', '死', '后', '，', '其', '王', '国', '疆', '土', '被', '刚', '果', '自', '由', '邦', '占', '领', '，', '后', '被', '并', '入', '比', '属', '刚', '果', '，', '昙', '花', '一', '现', '的', '姆', '西', '里', '王', '国', '就', '此', '不', '复', '存', '在', '。']
orig_answer_text= 加丹加地区
start_position= 61
end_position= 65
is_impossible= False
==============
paragraph[qas]
[{'question': '姆西里王国名称的由来是什么？', 'id': 'TRAIN_3814_QUERY_0', 'answers': [{'text': '其统治者是姆西里', 'answer_start': 73}]}, {'question': ' 姆西里凭借通过贸易获取的枪支以及高超的政治手腕，他建立了以哪个地区为中心的强大王国？', 'id': 'TRAIN_3814_QUERY_1', 'answers': [{'text': '加丹加地区', 'answer_start': 62}]}, {'question': '姆西里死后，其王国疆土被谁占领？', 'id': 'TRAIN_3814_QUERY_2', 'answers': [{'text': '刚果自由邦', 'answer_start': 206}]}, {'question': '姆西里死于哪一年？', 'id': 'TRAIN_3814_QUERY_3', 'answers': [{'text': '1891年', 'answer_start': 43}]}]
answer= {'text': '刚果自由邦', 'answer_start': 206}
orig_answer_text= 刚果自由邦
answer_offset= 206
answer_length= 5
actual_text= 刚果自由邦
qas_id= TRAIN_3814_QUERY_2
question_text= 姆西里死后，其王国疆土被谁占领？
doc_tokens= ['姆', '西', '里', '王', '国', '，', '又', '称', '“', '叶', '克', '王', '国', '”', '(', 'Y', 'e', 'k', 'e', 'K', 'i', 'n', 'g', 'd', 'o', 'm', ')', '、', '“', '加', '朗', '甘', '兹', '王', '国', '”', '(', '1', '8', '5', '6', '－', '1', '8', '9', '1', '年', ')', '，', '是', '曾', '建', '立', '于', '今', '刚', '果', '东', '南', '部', '的', '加', '丹', '加', '地', '区', '的', '一', '个', '王', '国', '，', '其', '统', '治', '者', '是', '姆', '西', '里', '，', '因', '此', '得', '名', '。', '姆', '西', '里', '是', '活', '动', '于', '坦', '桑', '尼', '亚', '与', '刚', '果', '地', '区', '的', '一', '个', '商', '人', '，', '凭', '借', '通', '过', '贸', '易', '获', '取', '的', '枪', '支', '以', '及', '高', '超', '的', '政', '治', '手', '腕', '，', '他', '建', '立', '了', '以', '加', '丹', '加', '地', '区', '为', '中', '心', '的', '强', '大', '王', '国', '。', '姆', '西', '里', '王', '国', '曾', '盛', '极', '一', '时', '，', '其', '军', '事', '势', '力', '覆', '盖', '中', '南', '非', '洲', '的', '几', '十', '万', '平', '方', '公', '里', '的', '土', '地', '，', '并', '基', '本', '垄', '断', '了', '该', '地', '区', '的', '贸', '易', '。', '1', '8', '9', '1', '年', '，', '比', '利', '时', '的', '刚', ' 果', '自', '由', '邦', '派', '出', '斯', '泰', '尔', '远', '征', '队', '开', '往', '加', '丹', '加', '，', '副', '官', '波', '德', '森', '在', '与', '姆', '西', '里', '发', '生', '争', '执', '时', '将', '其', '开', '枪', '射', '杀', '。', '姆', '西', '里', '死', '后', '，', '其', '王', '国', '疆', '土', '被', '刚', '果', '自', '由', '邦', '占', '领', '，', '后', '被', '并', '入', '比', '属', '刚', '果', '，', '昙', '花', '一', '现', '的', '姆', '西', '里', '王', '国', '就', '此', '不', '复', '存', '在', '。']
orig_answer_text= 刚果自由邦
start_position= 205
end_position= 209
is_impossible= False
==============
paragraph[qas]
[{'question': '姆西里王国名称的由来是什么？', 'id': 'TRAIN_3814_QUERY_0', 'answers': [{'text': '其统治者是姆西里', 'answer_start': 73}]}, {'question': ' 姆西里凭借通过贸易获取的枪支以及高超的政治手腕，他建立了以哪个地区为中心的强大王国？', 'id': 'TRAIN_3814_QUERY_1', 'answers': [{'text': '加丹加地区', 'answer_start': 62}]}, {'question': '姆西里死后，其王国疆土被谁占领？', 'id': 'TRAIN_3814_QUERY_2', 'answers': [{'text': '刚果自由邦', 'answer_start': 206}]}, {'question': '姆西里死于哪一年？', 'id': 'TRAIN_3814_QUERY_3', 'answers': [{'text': '1891年', 'answer_start': 43}]}]
answer= {'text': '1891年', 'answer_start': 43}
orig_answer_text= 1891年
answer_offset= 43
answer_length= 5
actual_text= 1891年
qas_id= TRAIN_3814_QUERY_3
question_text= 姆西里死于哪一年？
doc_tokens= ['姆', '西', '里', '王', '国', '，', '又', '称', '“', '叶', '克', '王', '国', '”', '(', 'Y', 'e', 'k', 'e', 'K', 'i', 'n', 'g', 'd', 'o', 'm', ')', '、', '“', '加', '朗', '甘', '兹', '王', '国', '”', '(', '1', '8', '5', '6', '－', '1', '8', '9', '1', '年', ')', '，', '是', '曾', '建', '立', '于', '今', '刚', '果', '东', '南', '部', '的', '加', '丹', '加', '地', '区', '的', '一', '个', '王', '国', '，', '其', '统', '治', '者', '是', '姆', '西', '里', '，', '因', '此', '得', '名', '。', '姆', '西', '里', '是', '活', '动', '于', '坦', '桑', '尼', '亚', '与', '刚', '果', '地', '区', '的', '一', '个', '商', '人', '，', '凭', '借', '通', '过', '贸', '易', '获', '取', '的', '枪', '支', '以', '及', '高', '超', '的', '政', '治', '手', '腕', '，', '他', '建', '立', '了', '以', '加', '丹', '加', '地', '区', '为', '中', '心', '的', '强', '大', '王', '国', '。', '姆', '西', '里', '王', '国', '曾', '盛', '极', '一', '时', '，', '其', '军', '事', '势', '力', '覆', '盖', '中', '南', '非', '洲', '的', '几', '十', '万', '平', '方', '公', '里', '的', '土', '地', '，', '并', '基', '本', '垄', '断', '了', '该', '地', '区', '的', '贸', '易', '。', '1', '8', '9', '1', '年', '，', '比', '利', '时', '的', '刚', ' 果', '自', '由', '邦', '派', '出', '斯', '泰', '尔', '远', '征', '队', '开', '往', '加', '丹', '加', '，', '副', '官', '波', '德', '森', '在', '与', '姆', '西', '里', '发', '生', '争', '执', '时', '将', '其', '开', '枪', '射', '杀', '。', '姆', '西', '里', '死', '后', '，', '其', '王', '国', '疆', '土', '被', '刚', '果', '自', '由', '邦', '占', '领', '，', '后', '被', '并', '入', '比', '属', '刚', '果', '，', '昙', '花', '一', '现', '的', '姆', '西', '里', '王', '国', '就', '此', '不', '复', '存', '在', '。']
orig_answer_text= 1891年
start_position= 42
end_position= 46
is_impossible= False
==============
paragraph[qas]
[{'question': '白额蜂虎的上身是什么颜色？', 'id': 'TRAIN_3815_QUERY_0', 'answers': [{'text': '绿色', 'answer_start': 66}]}, {'question': '白额蜂虎的群落 平均有多少只？', 'id': 'TRAIN_3815_QUERY_1', 'answers': [{'text': '200只', 'answer_start': 137}]}, {'question': '白额蜂虎主要吃什么？', 'id': 'TRAIN_3815_QUERY_2', 'answers': [{'text': '蜜蜂', 'answer_start': 475}]}, {'question': '白额蜂虎的尾巴是什么形状？', 'id': 'TRAIN_3815_QUERY_3', 'answers': [{'text': '方形', 'answer_start': 51}]}, {'question': '白额蜂虎的喉咙呈什么色？', 'id': 'TRAIN_3815_QUERY_4', 'answers': [{'text': '鲜红色', 'answer_start': 57}]}]
answer= {'text': '绿色', 'answer_start': 66}
orig_answer_text= 绿色
answer_offset= 66
answer_length= 2
actual_text= 身绿
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '身绿' vs. '绿色'
==============
paragraph[qas]
[{'question': '白额蜂虎的上身是什么颜色？', 'id': 'TRAIN_3815_QUERY_0', 'answers': [{'text': '绿色', 'answer_start': 66}]}, {'question': '白额蜂虎的群落 平均有多少只？', 'id': 'TRAIN_3815_QUERY_1', 'answers': [{'text': '200只', 'answer_start': 137}]}, {'question': '白额蜂虎主要吃什么？', 'id': 'TRAIN_3815_QUERY_2', 'answers': [{'text': '蜜蜂', 'answer_start': 475}]}, {'question': '白额蜂虎的尾巴是什么形状？', 'id': 'TRAIN_3815_QUERY_3', 'answers': [{'text': '方形', 'answer_start': 51}]}, {'question': '白额蜂虎的喉咙呈什么色？', 'id': 'TRAIN_3815_QUERY_4', 'answers': [{'text': '鲜红色', 'answer_start': 57}]}]
answer= {'text': '200只', 'answer_start': 137}
orig_answer_text= 200只
answer_offset= 137
answer_length= 4
actual_text= 有200
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '有200' vs. '200只'
==============
paragraph[qas]
[{'question': '白额蜂虎的上身是什么颜色？', 'id': 'TRAIN_3815_QUERY_0', 'answers': [{'text': '绿色', 'answer_start': 66}]}, {'question': '白额蜂虎的群落 平均有多少只？', 'id': 'TRAIN_3815_QUERY_1', 'answers': [{'text': '200只', 'answer_start': 137}]}, {'question': '白额蜂虎主要吃什么？', 'id': 'TRAIN_3815_QUERY_2', 'answers': [{'text': '蜜蜂', 'answer_start': 475}]}, {'question': '白额蜂虎的尾巴是什么形状？', 'id': 'TRAIN_3815_QUERY_3', 'answers': [{'text': '方形', 'answer_start': 51}]}, {'question': '白额蜂虎的喉咙呈什么色？', 'id': 'TRAIN_3815_QUERY_4', 'answers': [{'text': '鲜红色', 'answer_start': 57}]}]
answer= {'text': '蜜蜂', 'answer_start': 475}
orig_answer_text= 蜜蜂
answer_offset= 475
answer_length= 2
actual_text= 吃蜜
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '吃蜜' vs. '蜜蜂'
==============
paragraph[qas]
[{'question': '白额蜂虎的上身是什么颜色？', 'id': 'TRAIN_3815_QUERY_0', 'answers': [{'text': '绿色', 'answer_start': 66}]}, {'question': '白额蜂虎的群落 平均有多少只？', 'id': 'TRAIN_3815_QUERY_1', 'answers': [{'text': '200只', 'answer_start': 137}]}, {'question': '白额蜂虎主要吃什么？', 'id': 'TRAIN_3815_QUERY_2', 'answers': [{'text': '蜜蜂', 'answer_start': 475}]}, {'question': '白额蜂虎的尾巴是什么形状？', 'id': 'TRAIN_3815_QUERY_3', 'answers': [{'text': '方形', 'answer_start': 51}]}, {'question': '白额蜂虎的喉咙呈什么色？', 'id': 'TRAIN_3815_QUERY_4', 'answers': [{'text': '鲜红色', 'answer_start': 57}]}]
answer= {'text': '方形', 'answer_start': 51}
orig_answer_text= 方形
answer_offset= 51
answer_length= 2
actual_text= 巴方
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '巴方' vs. '方形'
==============
paragraph[qas]
[{'question': '白额蜂虎的上身是什么颜色？', 'id': 'TRAIN_3815_QUERY_0', 'answers': [{'text': '绿色', 'answer_start': 66}]}, {'question': '白额蜂虎的群落 平均有多少只？', 'id': 'TRAIN_3815_QUERY_1', 'answers': [{'text': '200只', 'answer_start': 137}]}, {'question': '白额蜂虎主要吃什么？', 'id': 'TRAIN_3815_QUERY_2', 'answers': [{'text': '蜜蜂', 'answer_start': 475}]}, {'question': '白额蜂虎的尾巴是什么形状？', 'id': 'TRAIN_3815_QUERY_3', 'answers': [{'text': '方形', 'answer_start': 51}]}, {'question': '白额蜂虎的喉咙呈什么色？', 'id': 'TRAIN_3815_QUERY_4', 'answers': [{'text': '鲜红色', 'answer_start': 57}]}]
answer= {'text': '鲜红色', 'answer_start': 57}
orig_answer_text= 鲜红色
answer_offset= 57
answer_length= 3
actual_text= 呈鲜红
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '呈鲜红' vs. '鲜红色'
==============
paragraph[qas]
[{'question': '布莱恩·杰伊·辛格的身份是什么？', 'id': 'TRAIN_3816_QUERY_0', 'answers': [{'text': '美国电影导演、电影监制、编剧及演员，为制片公司的创始人', 'answer_start': 16}]}, {'question': '布莱恩·杰伊·辛格凭借哪部作品获得奥斯卡最佳原著剧本、最佳男配角，开启好莱坞电影生涯？', 'id': 'TRAIN_3816_QUERY_1', 'answers': [{'text': '《刺激惊爆点》', 'answer_start': 53}]}, {'question': '布莱恩·杰伊·辛格是双性恋吗？', 'id': 'TRAIN_3816_QUERY_2', 'answers': [{'text': '辛格是一位公开的双性恋者。', 'answer_start': 202}]}, {'question': '辛格出生于哪个城市？', 'id': 'TRAIN_3816_QUERY_3', 'answers': [{'text': '纽约市', 'answer_start': 152}]}]
answer= {'text': '美国电影导演、电影监制、编剧及演员，为制片公司的创始人', 'answer_start': 16}
orig_answer_text= 美国电影导演、电影监制、编剧及演员，为制片公司的创始人
answer_offset= 16
answer_length= 27
actual_text= 位美国电影导演、电影监制、编剧及演员，为制片公司的创始
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '位美国电影导演、电影监制、编剧及演员，为制片公司的创始' vs. '美国电影导演、电影监制、编剧及演 员，为制片公司的创始人'
==============
paragraph[qas]
[{'question': '布莱恩·杰伊·辛格的身份是什么？', 'id': 'TRAIN_3816_QUERY_0', 'answers': [{'text': '美国电影导演、电影监制、编剧及演员，为制片公司的创始人', 'answer_start': 16}]}, {'question': '布莱恩·杰伊·辛格凭借哪部作品获得奥斯卡最佳原著剧本、最佳男配角，开启好莱坞电影生涯？', 'id': 'TRAIN_3816_QUERY_1', 'answers': [{'text': '《刺激惊爆点》', 'answer_start': 53}]}, {'question': '布莱恩·杰伊·辛格是双性恋吗？', 'id': 'TRAIN_3816_QUERY_2', 'answers': [{'text': '辛格是一位公开的双性恋者。', 'answer_start': 202}]}, {'question': '辛格出生于哪个城市？', 'id': 'TRAIN_3816_QUERY_3', 'answers': [{'text': '纽约市', 'answer_start': 152}]}]
answer= {'text': '《刺激惊爆点》', 'answer_start': 53}
orig_answer_text= 《刺激惊爆点》
answer_offset= 53
answer_length= 7
actual_text= 品《刺激惊爆点
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '品《刺激惊爆点' vs. '《刺激惊爆点》'
==============
paragraph[qas]
[{'question': '布莱恩·杰伊·辛格的身份是什么？', 'id': 'TRAIN_3816_QUERY_0', 'answers': [{'text': '美国电影导演、电影监制、编剧及演员，为制片公司的创始人', 'answer_start': 16}]}, {'question': '布莱恩·杰伊·辛格凭借哪部作品获得奥斯卡最佳原著剧本、最佳男配角，开启好莱坞电影生涯？', 'id': 'TRAIN_3816_QUERY_1', 'answers': [{'text': '《刺激惊爆点》', 'answer_start': 53}]}, {'question': '布莱恩·杰伊·辛格是双性恋吗？', 'id': 'TRAIN_3816_QUERY_2', 'answers': [{'text': '辛格是一位公开的双性恋者。', 'answer_start': 202}]}, {'question': '辛格出生于哪个城市？', 'id': 'TRAIN_3816_QUERY_3', 'answers': [{'text': '纽约市', 'answer_start': 152}]}]
answer= {'text': '辛格是一位公开的双性恋者。', 'answer_start': 202}
orig_answer_text= 辛格是一位公开的双性恋者。
answer_offset= 202
answer_length= 13
actual_text= 。辛格是一位公开的双性恋者
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '。辛格是一位公开的双性恋者' vs. '辛格是一位公开的双性恋者。'
==============
paragraph[qas]
[{'question': '布莱恩·杰伊·辛格的身份是什么？', 'id': 'TRAIN_3816_QUERY_0', 'answers': [{'text': '美国电影导演、电影监制、编剧及演员，为制片公司的创始人', 'answer_start': 16}]}, {'question': '布莱恩·杰伊·辛格凭借哪部作品获得奥斯卡最佳原著剧本、最佳男配角，开启好莱坞电影生涯？', 'id': 'TRAIN_3816_QUERY_1', 'answers': [{'text': '《刺激惊爆点》', 'answer_start': 53}]}, {'question': '布莱恩·杰伊·辛格是双性恋吗？', 'id': 'TRAIN_3816_QUERY_2', 'answers': [{'text': '辛格是一位公开的双性恋者。', 'answer_start': 202}]}, {'question': '辛格出生于哪个城市？', 'id': 'TRAIN_3816_QUERY_3', 'answers': [{'text': '纽约市', 'answer_start': 152}]}]
answer= {'text': '纽约市', 'answer_start': 152}
orig_answer_text= 纽约市
answer_offset= 152
answer_length= 3
actual_text= 于纽约
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '于纽约' vs. '纽约市'
==============
paragraph[qas]
[{'question': '圣若望广场位于哪里？', 'id': 'TRAIN_3817_QUERY_0', 'answers': [{'text': '佛罗伦萨', 'answer_start': 8}]}, {'question': '圣若望广场名字的由来是什么？', 'id': 'TRAIN_3817_QUERY_1', 'answers': [{'text': '得名于圣若望洗礼堂', 'answer_start': 18}]}]
answer= {'text': '佛罗伦萨', 'answer_start': 8}
orig_answer_text= 佛罗伦萨
answer_offset= 8
answer_length= 4
actual_text= 是佛罗伦
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '是佛罗伦' vs. '佛罗伦萨'
==============
paragraph[qas]
[{'question': '圣若望广场位于哪里？', 'id': 'TRAIN_3817_QUERY_0', 'answers': [{'text': '佛罗伦萨', 'answer_start': 8}]}, {'question': '圣若望广场名字的由来是什么？', 'id': 'TRAIN_3817_QUERY_1', 'answers': [{'text': '得名于圣若望洗礼堂', 'answer_start': 18}]}]
answer= {'text': '得名于圣若望洗礼堂', 'answer_start': 18}
orig_answer_text= 得名于圣若望洗礼堂
answer_offset= 18
answer_length= 9
actual_text= ，得名于圣若望洗礼
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '，得名于圣若望洗礼' vs. '得名于圣若望洗礼堂'
==============
paragraph[qas]
[{'question': '《雾之恋》是香港歌手谁发行的粤语专辑？', 'id': 'TRAIN_3818_QUERY_0', 'answers': [{'text': '谭咏麟', 'answer_start': 10}]}, {'question': ' 是哪张专辑将谭咏麟推向一线歌手？', 'id': 'TRAIN_3818_QUERY_1', 'answers': [{'text': '《雾之恋》', 'answer_start': 0}]}, {'question': '《傲骨》这张专辑内 有多首热门歌曲，其中有几首歌曲入选“劲歌金曲季选”？', 'id': 'TRAIN_3818_QUERY_2', 'answers': [{'text': '五首歌曲', 'answer_start': 200}]}, {'question': '《幻影》是一个重新编曲的版本，歌曲以什么形式起始？', 'id': 'TRAIN_3818_QUERY_3', 'answers': [{'text': '清唱形式', 'answer_start': 268}]}, {'question': '哪首歌曲代表了谭咏麟入选了“香港20世纪十大金曲”？', 'id': 'TRAIN_3818_QUERY_4', 'answers': [{'text': '雾之恋', 'answer_start': 1}]}]
answer= {'text': '谭咏麟', 'answer_start': 10}
orig_answer_text= 谭咏麟
answer_offset= 10
answer_length= 3
actual_text= 手谭咏
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '手谭咏' vs. '谭咏麟'
==============
paragraph[qas]
[{'question': '《雾之恋》是香港歌手谁发行的粤语专辑？', 'id': 'TRAIN_3818_QUERY_0', 'answers': [{'text': '谭咏麟', 'answer_start': 10}]}, {'question': ' 是哪张专辑将谭咏麟推向一线歌手？', 'id': 'TRAIN_3818_QUERY_1', 'answers': [{'text': '《雾之恋》', 'answer_start': 0}]}, {'question': '《傲骨》这张专辑内 有多首热门歌曲，其中有几首歌曲入选“劲歌金曲季选”？', 'id': 'TRAIN_3818_QUERY_2', 'answers': [{'text': '五首歌曲', 'answer_start': 200}]}, {'question': '《幻影》是一个重新编曲的版本，歌曲以什么形式起始？', 'id': 'TRAIN_3818_QUERY_3', 'answers': [{'text': '清唱形式', 'answer_start': 268}]}, {'question': '哪首歌曲代表了谭咏麟入选了“香港20世纪十大金曲”？', 'id': 'TRAIN_3818_QUERY_4', 'answers': [{'text': '雾之恋', 'answer_start': 1}]}]
answer= {'text': '《雾之恋》', 'answer_start': 0}
orig_answer_text= 《雾之恋》
answer_offset= 0
answer_length= 5
actual_text=
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '' vs. '《雾之恋》'
==============
paragraph[qas]
[{'question': '《雾之恋》是香港歌手谁发行的粤语专辑？', 'id': 'TRAIN_3818_QUERY_0', 'answers': [{'text': '谭咏麟', 'answer_start': 10}]}, {'question': ' 是哪张专辑将谭咏麟推向一线歌手？', 'id': 'TRAIN_3818_QUERY_1', 'answers': [{'text': '《雾之恋》', 'answer_start': 0}]}, {'question': '《傲骨》这张专辑内 有多首热门歌曲，其中有几首歌曲入选“劲歌金曲季选”？', 'id': 'TRAIN_3818_QUERY_2', 'answers': [{'text': '五首歌曲', 'answer_start': 200}]}, {'question': '《幻影》是一个重新编曲的版本，歌曲以什么形式起始？', 'id': 'TRAIN_3818_QUERY_3', 'answers': [{'text': '清唱形式', 'answer_start': 268}]}, {'question': '哪首歌曲代表了谭咏麟入选了“香港20世纪十大金曲”？', 'id': 'TRAIN_3818_QUERY_4', 'answers': [{'text': '雾之恋', 'answer_start': 1}]}]
answer= {'text': '五首歌曲', 'answer_start': 200}
orig_answer_text= 五首歌曲
answer_offset= 200
answer_length= 4
actual_text= 五首歌曲
qas_id= TRAIN_3818_QUERY_2
question_text= 《傲骨》这张专辑内有多首热门歌曲，其中有几首歌曲入选“劲歌金曲季选”？
doc_tokens= ['《', '雾', '之', '恋', '》', '是', '香', '港', '歌', '手', '谭', '咏', '麟', '发', '行', '第', '七', '张', '粤', '语', '专', '辑', '，', ' 籍', '著', '上', '一', '年', '的', '专', '辑', '《', '春', '.', '.', '.', '迟', '来', '的', '春', '天', '》', '的', '成', '功', '，', '谭', '咏', '麟', '开', '始', '在', '香', '港', '乐', '坛', '的', '前', '列', '歌', '手', '行', '列', '站', '稳', '阵', '脚', '。', '《', '雾', '之', '恋', '》', '可', '说', '是', '将', '谭', '咏', '麟', '推', '向', '一', '线', '歌', '手', '的', '专', '辑', '。', '专', '辑', '以', '本', '地', '创', '作', '为', '主', '，', '只', '有', '《', '爱', '的', '替', '身', '》', '和', '《', '雾', '之', '恋', '》', '是', '改', '编', '日', '本', '歌', '曲', '，', '而', '《', '雾', '之', '恋', '》', '亦', '成', '了', '香', '港', '新', '秀', '帮', '许', '志', '安', '和', '全', '港', '十', '八', '区', '业', '余', '歌', '唱', '比', '赛', '参', '赛', '者', '李', '克', '勤', '的', '参', '赛', '作', '品', '。', '《', '傲', '骨', '》', '是', '谭', '咏', '麟', '再', '次', '作', '曲', '、', '而', '且', '是', '首', '支', '热', '门', '作', '品', '。', '专', '辑', '内', '有', '多', '首', '热', '门', '歌', '曲', '，', '其', '中', '五', '首', '歌', '曲', '入', '选', '“', '劲', '歌', '金', '曲', '季', '选', '”', '，', '包', '括', '《', '傲', '骨', '》', '、', '《', '爱', '的', '替', '身', '》', '、', '《', '雾', '之', '恋', '》', '、', '《', '幻', '影', '》', '、', '《', '午', '夜', '丽', '人', '》', '等', '。', '当', '中', '《', '幻', '影', '》', '是', '一', '个', '重', '新', '编', '曲', '的', '版', '本', '，', '歌', '曲', '以', '清', '唱', '形', '式', '起', '始', '。', '而', '歌', '曲', '“', '雾', '之', '恋', '”', '更', '是', '代', '表', '谭', '咏', '麟', '入', '选', '了', '“', '香', '港', '2', '0', '世', '纪', '十', '大', '金', '曲', '”', '。', '《', '雾', '之', '恋', '》', '里', '的', '多', '首', '大', '热', '歌', '曲', '为', '香', '港', '乐', '坛', '展', '开', '了', '以', '谭', '咏', '麟', '为', '首', '的', '时', '代', '。', '此', '专', '辑', '销', '量', '达', '到', '了', '六', '白', '金', '，', '在', '当', '时', '来', '说', '是', '一', '个', '很', '不', '错', '的', '销', '量', '数', '字', '。', '这', '张', '专', '辑', '是', '不', '少', '老', '一', '辈', '谭', '咏', '麟', '歌', '迷', '最', '爱', '的', '唱', '片', '，', '因', '歌', '曲', '流', '行', '而', '悦', '耳', '之', '余', '，', '曲', '风', '也', '不', '失', '清', '新', '以', '及', '本', '地', '风', '格', '，', '有', '别', '于', '《', '爱', '的', '根', '源', '》', '和', '《', '爱', '情', '陷', '阱', '》', '的', '浓', '厚', '商', '业', '味', '道', '。']
orig_answer_text= 五首歌曲
start_position= 199
end_position= 202
is_impossible= False
==============
paragraph[qas]
[{'question': '《雾之恋》是香港歌手谁发行的粤语专辑？', 'id': 'TRAIN_3818_QUERY_0', 'answers': [{'text': '谭咏麟', 'answer_start': 10}]}, {'question': ' 是哪张专辑将谭咏麟推向一线歌手？', 'id': 'TRAIN_3818_QUERY_1', 'answers': [{'text': '《雾之恋》', 'answer_start': 0}]}, {'question': '《傲骨》这张专辑内 有多首热门歌曲，其中有几首歌曲入选“劲歌金曲季选”？', 'id': 'TRAIN_3818_QUERY_2', 'answers': [{'text': '五首歌曲', 'answer_start': 200}]}, {'question': '《幻影》是一个重新编曲的版本，歌曲以什么形式起始？', 'id': 'TRAIN_3818_QUERY_3', 'answers': [{'text': '清唱形式', 'answer_start': 268}]}, {'question': '哪首歌曲代表了谭咏麟入选了“香港20世纪十大金曲”？', 'id': 'TRAIN_3818_QUERY_4', 'answers': [{'text': '雾之恋', 'answer_start': 1}]}]
answer= {'text': '清唱形式', 'answer_start': 268}
orig_answer_text= 清唱形式
answer_offset= 268
answer_length= 4
actual_text= 清唱形式
qas_id= TRAIN_3818_QUERY_3
question_text= 《幻影》是一个重新编曲的版本，歌曲以什么形式起始？
doc_tokens= ['《', '雾', '之', '恋', '》', '是', '香', '港', '歌', '手', '谭', '咏', '麟', '发', '行', '第', '七', '张', '粤', '语', '专', '辑', '，', ' 籍', '著', '上', '一', '年', '的', '专', '辑', '《', '春', '.', '.', '.', '迟', '来', '的', '春', '天', '》', '的', '成', '功', '，', '谭', '咏', '麟', '开', '始', '在', '香', '港', '乐', '坛', '的', '前', '列', '歌', '手', '行', '列', '站', '稳', '阵', '脚', '。', '《', '雾', '之', '恋', '》', '可', '说', '是', '将', '谭', '咏', '麟', '推', '向', '一', '线', '歌', '手', '的', '专', '辑', '。', '专', '辑', '以', '本', '地', '创', '作', '为', '主', '，', '只', '有', '《', '爱', '的', '替', '身', '》', '和', '《', '雾', '之', '恋', '》', '是', '改', '编', '日', '本', '歌', '曲', '，', '而', '《', '雾', '之', '恋', '》', '亦', '成', '了', '香', '港', '新', '秀', '帮', '许', '志', '安', '和', '全', '港', '十', '八', '区', '业', '余', '歌', '唱', '比', '赛', '参', '赛', '者', '李', '克', '勤', '的', '参', '赛', '作', '品', '。', '《', '傲', '骨', '》', '是', '谭', '咏', '麟', '再', '次', '作', '曲', '、', '而', '且', '是', '首', '支', '热', '门', '作', '品', '。', '专', '辑', '内', '有', '多', '首', '热', '门', '歌', '曲', '，', '其', '中', '五', '首', '歌', '曲', '入', '选', '“', '劲', '歌', '金', '曲', '季', '选', '”', '，', '包', '括', '《', '傲', '骨', '》', '、', '《', '爱', '的', '替', '身', '》', '、', '《', '雾', '之', '恋', '》', '、', '《', '幻', '影', '》', '、', '《', '午', '夜', '丽', '人', '》', '等', '。', '当', '中', '《', '幻', '影', '》', '是', '一', '个', '重', '新', '编', '曲', '的', '版', '本', '，', '歌', '曲', '以', '清', '唱', '形', '式', '起', '始', '。', '而', '歌', '曲', '“', '雾', '之', '恋', '”', '更', '是', '代', '表', '谭', '咏', '麟', '入', '选', '了', '“', '香', '港', '2', '0', '世', '纪', '十', '大', '金', '曲', '”', '。', '《', '雾', '之', '恋', '》', '里', '的', '多', '首', '大', '热', '歌', '曲', '为', '香', '港', '乐', '坛', '展', '开', '了', '以', '谭', '咏', '麟', '为', '首', '的', '时', '代', '。', '此', '专', '辑', '销', '量', '达', '到', '了', '六', '白', '金', '，', '在', '当', '时', '来', '说', '是', '一', '个', '很', '不', '错', '的', '销', '量', '数', '字', '。', '这', '张', '专', '辑', '是', '不', '少', '老', '一', '辈', '谭', '咏', '麟', '歌', '迷', '最', '爱', '的', '唱', '片', '，', '因', '歌', '曲', '流', '行', '而', '悦', '耳', '之', '余', '，', '曲', '风', '也', '不', '失', '清', '新', '以', '及', '本', '地', '风', '格', '，', '有', '别', '于', '《', '爱', '的', '根', '源', '》', '和', '《', '爱', '情', '陷', '阱', '》', '的', '浓', '厚', '商', '业', '味', '道', '。']
orig_answer_text= 清唱形式
start_position= 267
end_position= 270
is_impossible= False
==============
paragraph[qas]
[{'question': '《雾之恋》是香港歌手谁发行的粤语专辑？', 'id': 'TRAIN_3818_QUERY_0', 'answers': [{'text': '谭咏麟', 'answer_start': 10}]}, {'question': ' 是哪张专辑将谭咏麟推向一线歌手？', 'id': 'TRAIN_3818_QUERY_1', 'answers': [{'text': '《雾之恋》', 'answer_start': 0}]}, {'question': '《傲骨》这张专辑内 有多首热门歌曲，其中有几首歌曲入选“劲歌金曲季选”？', 'id': 'TRAIN_3818_QUERY_2', 'answers': [{'text': '五首歌曲', 'answer_start': 200}]}, {'question': '《幻影》是一个重新编曲的版本，歌曲以什么形式起始？', 'id': 'TRAIN_3818_QUERY_3', 'answers': [{'text': '清唱形式', 'answer_start': 268}]}, {'question': '哪首歌曲代表了谭咏麟入选了“香港20世纪十大金曲”？', 'id': 'TRAIN_3818_QUERY_4', 'answers': [{'text': '雾之恋', 'answer_start': 1}]}]
answer= {'text': '雾之恋', 'answer_start': 1}
orig_answer_text= 雾之恋
answer_offset= 1
answer_length= 3
actual_text= 《雾之
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '《雾之' vs. '雾之恋'
==============
paragraph[qas]
[{'question': '里卡多·阿尔贝托·马蒂内利·贝罗卡尔身份是什么？', 'id': 'TRAIN_3820_QUERY_0', 'answers': [{'text': '巴拿马政治家和企业家，前巴拿马总统', 'answer_start': 22}]}, {'question': '里卡多·阿尔贝托·马蒂内利·贝罗卡尔曾获什么学位？', 'id': 'TRAIN_3820_QUERY_1', 'answers': [{'text': '美国阿肯色州大学的 工商管理学士学位和中美洲工商管理研究所的工商管理硕士学位', 'answer_start': 66}]}, {'question': '马蒂内利创立民主变革党是在哪一年？', 'id': 'TRAIN_3820_QUERY_2', 'answers': [{'text': '1998年', 'answer_start': 145}]}, {'question': '2009年，马蒂内利再次参选总统，这次是代表什么参选？', 'id': 'TRAIN_3820_QUERY_3', 'answers': [{'text': '民主变革党、巴拿马主义党等政党组成的联盟', 'answer_start': 237}]}]
answer= {'text': '巴拿马政治家和企业家，前巴拿马总统', 'answer_start': 22}
orig_answer_text= 巴拿马政治家和企业家，前巴拿马总统
answer_offset= 22
answer_length= 17
actual_text= ，巴拿马政治家和企业家，前巴拿马总
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '，巴拿马政治家和企业家，前巴拿马总' vs. '巴拿马政治家和企业家，前巴拿马总统'
==============
paragraph[qas]
[{'question': '里卡多·阿尔贝托·马蒂内利·贝罗卡尔身份是什么？', 'id': 'TRAIN_3820_QUERY_0', 'answers': [{'text': '巴拿马政治家和企业家，前巴拿马总统', 'answer_start': 22}]}, {'question': '里卡多·阿尔贝托·马蒂内利·贝罗卡尔曾获什么学位？', 'id': 'TRAIN_3820_QUERY_1', 'answers': [{'text': '美国阿肯色州大学的 工商管理学士学位和中美洲工商管理研究所的工商管理硕士学位', 'answer_start': 66}]}, {'question': '马蒂内利创立民主变革党是在哪一年？', 'id': 'TRAIN_3820_QUERY_2', 'answers': [{'text': '1998年', 'answer_start': 145}]}, {'question': '2009年，马蒂内利再次参选总统，这次是代表什么参选？', 'id': 'TRAIN_3820_QUERY_3', 'answers': [{'text': '民主变革党、巴拿马主义党等政党组成的联盟', 'answer_start': 237}]}]
answer= {'text': '美国阿肯色州大学的工商管理学士学位和中美洲工商管理研究所的工商管理硕士学位', 'answer_start': 66}
orig_answer_text= 美国阿肯色州大学的工商管理学士学位和中美洲工商管理研究所的工商管理硕士学位
answer_offset= 66
answer_length= 37
actual_text= 获美国阿肯色州大学的工商管理学士学位和中美洲工商管理研究所的工商管理硕士学
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '获美国阿肯色州大学的工商管理学士学位和中美洲工商管理研究所的工商管理硕士学' vs. '美国阿肯色州 大学的工商管理学士学位和中美洲工商管理研究所的工商管理硕士学位'
==============
paragraph[qas]
[{'question': '里卡多·阿尔贝托·马蒂内利·贝罗卡尔身份是什么？', 'id': 'TRAIN_3820_QUERY_0', 'answers': [{'text': '巴拿马政治家和企业家，前巴拿马总统', 'answer_start': 22}]}, {'question': '里卡多·阿尔贝托·马蒂内利·贝罗卡尔曾获什么学位？', 'id': 'TRAIN_3820_QUERY_1', 'answers': [{'text': '美国阿肯色州大学的 工商管理学士学位和中美洲工商管理研究所的工商管理硕士学位', 'answer_start': 66}]}, {'question': '马蒂内利创立民主变革党是在哪一年？', 'id': 'TRAIN_3820_QUERY_2', 'answers': [{'text': '1998年', 'answer_start': 145}]}, {'question': '2009年，马蒂内利再次参选总统，这次是代表什么参选？', 'id': 'TRAIN_3820_QUERY_3', 'answers': [{'text': '民主变革党、巴拿马主义党等政党组成的联盟', 'answer_start': 237}]}]
answer= {'text': '1998年', 'answer_start': 145}
orig_answer_text= 1998年
answer_offset= 145
answer_length= 5
actual_text= 。1998
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '。1998' vs. '1998年'
==============
paragraph[qas]
[{'question': '里卡多·阿尔贝托·马蒂内利·贝罗卡尔身份是什么？', 'id': 'TRAIN_3820_QUERY_0', 'answers': [{'text': '巴拿马政治家和企业家，前巴拿马总统', 'answer_start': 22}]}, {'question': '里卡多·阿尔贝托·马蒂内利·贝罗卡尔曾获什么学位？', 'id': 'TRAIN_3820_QUERY_1', 'answers': [{'text': '美国阿肯色州大学的 工商管理学士学位和中美洲工商管理研究所的工商管理硕士学位', 'answer_start': 66}]}, {'question': '马蒂内利创立民主变革党是在哪一年？', 'id': 'TRAIN_3820_QUERY_2', 'answers': [{'text': '1998年', 'answer_start': 145}]}, {'question': '2009年，马蒂内利再次参选总统，这次是代表什么参选？', 'id': 'TRAIN_3820_QUERY_3', 'answers': [{'text': '民主变革党、巴拿马主义党等政党组成的联盟', 'answer_start': 237}]}]
answer= {'text': '民主变革党、巴拿马主义党等政党组成的联盟', 'answer_start': 237}
orig_answer_text= 民主变革党、巴拿马主义党等政党组成的联盟
answer_offset= 237
answer_length= 20
actual_text= 表民主变革党、巴拿马主义党等政党组成的联
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '表民主变革党、巴拿马主义党等政党组成的联' vs. '民主变革党、巴拿马主义党等政党组成的联盟'
==============
paragraph[qas]
[{'question': '《爱的根源》是香港歌手谭咏麟发行第几张粤语专辑？', 'id': 'TRAIN_3821_QUERY_0', 'answers': [{'text': '第八张', 'answer_start': 16}]}]
answer= {'text': '第八张', 'answer_start': 16}
orig_answer_text= 第八张
answer_offset= 16
answer_length= 3
actual_text= 行第八
07/23/2021 21:23:41 - WARNING - utils_squad -   样本错误: '行第八' vs. '第八张'
examples[0]= qas_id: TRAIN_54_QUERY_3, question_text: 毕业后的安雅·罗素法职业是什么？, doc_tokens: [安 雅 · 罗 素 法 （ ， ） ， 来 自 俄 罗 斯 圣 彼 得 堡 的 模 特 儿 。 她 是 《 全 美 超 级 模 特 儿 新 秀 大 赛 》 第 十 季 的 亚 军 。 2 0 0 8 年 ， 安 雅 宣 布 改 回 出 生 时 的 名 字 ： 安 雅 · 罗 素 法 （ A n y a R o z o v a ） ， 在 此 之 前 是 使 用 安 雅 · 冈 （ ） 。 安 雅 于 俄 罗 斯 出 生 ， 后 来 被 一 个 居 住 在 美 国 夏 威 夷 群 岛 欧 胡 岛  檀 香 山 的 家 庭 领 养 。 安 雅 十 七 岁 时 曾 参 与 香 奈 儿 、 路 易 · 威 登 及 芬 迪 （ F e n d i ） 等 品 牌 的 非 正 式 时 装 秀 。 2 0 0 7 年 ，  她 于 瓦 伊 帕 胡 高 级 中 学 毕 业 。 毕 业 后 ， 她 当 了 一 名 售 货 员 。 她 曾 为 R u s s e l l T a n o u e 拍 摄 照 片 ， R u s s e l l T a n o u e 称 赞 她 是 「 有 前 途 的 新 面 孔 」 。 安 雅 在 半 准 决 赛 面 试 时 说 她 对 模 特 儿 行 业 充 满 热 诚 ， 所 以 参 加 全 美 超 级 模 特 儿 新 秀 大 赛 。 她 于 比 赛 中 表 现 出 色 ， 曾 五 次 首 名 入 围 ， 平 均 入 围 顺 序 更 拿 下 历 届 以 来 最 优 异 的 成 绩 ( 2 . 6 4 ) ， 另 外 胜 出 三 次 小 挑 战 ， 分 别 获 得 与 评 判 尼 祖 · 百 克 拍 照 、 为 柠 檬 味 道 的 七 喜 拍 摄 广 告 的 机 会 及 十 万 美 元 、 和 盖 马 蒂 洛 （ G a i M a t t i o l o ） 设 计 的 晚 装 。 在 最 后 两 强 中 ， 安 雅 与 另 一 名 参 赛 者 惠 妮 · 汤 姆 森 为 范 思 哲 走 秀 ， 但 评 判 认 为 她 在 台 上 不 够 惠 妮 突 出 ， 所 以 选 了 惠 妮 当 冠 军 ， 安 雅 屈 居 亚 军 ( 但 就 整 体 表 现 来 说 ， 部 份 网 友 认 为 安 雅 才 是 第 十 季 名 副 其 实 的 冠 军 。 ) 安 雅 在 比 赛 拿 五 次 第 一 ， 也 胜 出 多 次 小 挑 战 。 安 雅 赛 后 再 次 与 R u s s e l l T a n o u e 合 作 ， 为 2 0 0 8 年 4 月 3 0 日 出 版 的 M i d W e e k 杂 志 拍 摄 封 面 及 内 页 照 。 其 后 她 参 加 了 V 杂 志 与 S u p r e m e 模 特 儿 公 司 合 办 的 模 特 儿 选 拔 赛 2 0 0 8 。 她 其 后 更 与 E l i t e 签 约 。 最 近 她 与 香 港 的 模 特 儿 公 司 S t y l e I n t e r n a t i o n a l M a n a g e m e n t 签 约 ， 并 在 香 港 发 展 其 模 特 儿 事 业 。 她 曾 在 很 多 香 港 的 时 装 杂 志 中 任 模 特 儿 ， 《 J e t 》 、 《 东 方 日 报 》 、 《 E l l e 》 等 。], start_position: 201, end_position: 203
example= qas_id: TRAIN_54_QUERY_3, question_text: 毕业后的安雅·罗素法职业是什么？, doc_tokens: [安 雅 · 罗 素 法 （ ， ） ， 来 自 俄 罗 斯 圣 彼 得 堡  的 模 特 儿 。 她 是 《 全 美 超 级 模 特 儿 新 秀 大 赛 》 第 十 季 的 亚 军 。 2 0 0 8 年 ， 安 雅 宣 布 改 回 出 生 时 的 名 字 ： 安 雅 · 罗 素 法 （ A n y a R o z o v a ） ， 在 此 之 前 是 使 用 安 雅 · 冈 （ ） 。 安 雅 于 俄 罗 斯 出 生 ， 后 来 被 一 个 居 住 在 美 国 夏 威 夷 群 岛 欧 胡 岛 檀  香 山 的 家 庭 领 养 。 安 雅 十 七 岁 时 曾 参 与 香 奈 儿 、 路 易 · 威 登 及 芬 迪 （ F e n d i ） 等 品 牌 的 非 正 式 时 装 秀 。 2 0 0 7 年 ， 她  于 瓦 伊 帕 胡 高 级 中 学 毕 业 。 毕 业 后 ， 她 当 了 一 名 售 货 员 。 她 曾 为 R u s s e l l T a n o u e 拍 摄 照 片 ， R u s s e l l T a n o u e 称 赞 她 是 「 有 前 途 的 新 面 孔 」 。 安 雅 在 半 准 决 赛 面 试 时 说 她 对 模 特 儿 行 业 充 满 热 诚 ， 所 以 参 加 全 美 超 级 模 特 儿 新 秀 大 赛 。 她 于 比 赛 中 表 现 出 色 ， 曾 五 次 首 名 入 围 ， 平 均 入 围 顺 序 更 拿 下 历 届 以 来 最 优 异 的 成 绩 ( 2 . 6 4 ) ， 另 外 胜 出 三 次 小 挑 战 ， 分 别 获 得 与 评 判 尼 祖 · 百 克 拍 照 、 为 柠 檬 味 道 的 七 喜 拍 摄 广 告 的 机 会 及 十 万 美 元 、 和 盖 马 蒂 洛 （ G a i M a t t i o l o ） 设 计 的 晚 装 。 在 最 后 两 强 中 ， 安 雅 与 另 一 名 参 赛 者 惠 妮 · 汤 姆 森 为 范 思 哲 走 秀 ， 但 评 判 认 为 她 在 台 上 不 够 惠 妮 突 出 ， 所 以 选 了 惠 妮 当 冠 军 ， 安 雅 屈 居 亚 军 ( 但 就 整 体 表 现 来 说 ， 部 份 网 友 认 为 安 雅 才 是 第 十 季 名 副 其 实 的 冠 军 。 ) 安 雅 在 比 赛 拿 五 次 第 一 ， 也 胜 出 多 次 小 挑 战 。 安 雅 赛 后 再 次 与 R u s s e l l T a n o u e 合 作 ， 为 2 0 0 8 年 4 月 3 0 日 出 版 的 M i d W e e k 杂 志 拍 摄 封 面 及 内 页 照 。 其 后 她 参 加 了 V 杂 志 与 S u p r e m e 模 特 儿 公 司 合 办 的 模 特 儿 选 拔 赛 2 0 0 8 。 她 其 后 更 与 E l i t e 签 约 。 最 近 她 与 香 港 的 模 特 儿 公 司 S t y l e I n t e r n a t i o n a l M a n a g e m e n t 签 约 ， 并 在 香 港 发 展 其 模 特 儿 事 业 。 她 曾 在 很 多 香 港 的 时 装 杂 志 中 任 模 特 儿 ， 《 J e t 》 、 《 东 方 日 报 》 、 《 E l l e 》 等 。], start_position: 201, end_position: 203
example.question_text= 毕业后的安雅·罗素法职业是什么？
query_tokens= ['毕', '业', '后', '的', '安', '雅', '·', '罗', '素', '法', '职', '业', '是', '什', '么', '？']
tok_to_orig_index= [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717]
orig_to_tok_index= [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717]
all_doc_tokens= ['安', '雅', '·', '罗', '素', '法', '（', '，', '）', '，', '来', '自', '俄', '罗', '斯', '圣', '彼', '得', '堡', '的', '模', '特', '儿', '。', '她', '是', '《', '全', '美', '超', '级', '模', '特', '儿', '新', '秀', '大', '赛', '》', '第', '十', '季', '的', '亚', '军', '。', '2', '0', '0', '8', '年', '，', '安', '雅', '宣', '布', '改', '回', '出', '生', '时', '的', '名', '字', '：', '安', '雅', '·', '罗', '素', '法', '（', '[UNK]', 'n', 'y', 'a', '[UNK]', 'o', 'z', 'o', 'v', 'a', '）', '，', '在', '此', '之', '前', '是', '使', '用', '安', '雅', '·', '冈', '（', '）', '。', '安', '雅', '于', '俄', '罗', '斯', '出', '生', '，', '后', '来', '被', '一', '个', '居', '住', '在', '美', '国', '夏', '威', '夷', '群', '岛', '欧', '胡', '岛', '檀', '香', '山', '的', '家', '庭', '领', '养', '。', '安', '雅', '十', '七', '岁', '时', '曾', '参', '与', '香', '奈', '儿', '、', '路', '易', '·', '威', '登', '及', '芬', '迪', '（', '[UNK]', 'e', 'n', 'd', 'i', '）', '等', '品', '牌', '的', '非', '正', '式', '时', '装', '秀', '。', '2', '0', '0', '7', '年', '，', '她', '于', '瓦', '伊', '帕', '胡', '高', '级', '中', '学', '毕', '业', '。', '毕', '业', '后', '，', '她', '当', '了', '一', '名', '售', '货', '员', '。', '她', '曾', '为', '[UNK]', 'u', 's', 's', 'e', 'l', 'l', '[UNK]', 'a', 'n', 'o', 'u', 'e', '拍', '摄', '照', '片', '，', '[UNK]', 'u', 's', 's', 'e', 'l', 'l', '[UNK]', 'a', 'n', 'o', 'u', 'e', '称', '赞', '她', '是', '「', '有', '前', '途', '的', '新', '面', '孔', '」', '。', '安', '雅', '在', ' 半', '准', '决', '赛', '面', '试', '时', '说', '她', '对', '模', '特', '儿', '行', '业', '充', '满', '热', '诚', '，', '所', '以', '参', '加', '全', '美', '超', '级', '模', '特', '儿', '新', '秀', '大', '赛', '。', '她', '于', '比', '赛', '中', '表', '现', '出', '色', '，', '曾', '五', '次', '首', '名', '入', '围', '，', '平', '均', '入', '围', '顺', '序', '更', '拿', '下', '历', '届', '以', '来', '最', '优', '异', '的', '成', '绩', '(', '2', '.', '6', '4', ')', '，', '另', '外', '胜', '出', '三', '次', '小', '挑', '战', '，', '分', '别', '获', '得', '与', '评', '判', '尼', '祖', '·', '百', '克', '拍', ' 照', '、', '为', '柠', '檬', '味', '道', '的', '七', '喜', '拍', '摄', '广', '告', '的', '机', '会', '及', '十', '万', '美', '元', '、', '和', '盖', '马', '蒂', '洛', '（', '[UNK]', 'a', 'i', '[UNK]', 'a', 't', 't', 'i', 'o', 'l', 'o', '）', '设', '计', '的', '晚', '装', '。', '在', '最', '后', '两', '强', '中', '，', '安', '雅', '与', '另', '一', '名', '参', '赛', '者', '惠', '妮', '·', '汤', '姆', '森', '为', '范', '思', '哲', '走', '秀', '，', '但', ' 评', '判', '认', '为', '她', '在', '台', '上', '不', '够', '惠', '妮', '突', '出', '，', '所', '以', '选', '了', '惠', '妮', '当', '冠', '军', '，', '安', '雅', '屈', '居', '亚', '军', '(', '但', '就', '整', '体', '表', '现', '来', '说', '，', '部', '份', '网', '友', '认', '为', '安', '雅', '才', '是', ' 第', '十', '季', '名', '副', '其', '实', '的', '冠', '军', '。', ')', '安', '雅', '在', '比', '赛', '拿', '五', '次', '第', '一', '，', '也', '胜', '出', '多', '次', '小', '挑', '战', '。', '安', '雅', '赛', '后', '再', '次', '与', '[UNK]', 'u', 's', 's', 'e', 'l', 'l', '[UNK]', 'a', 'n', 'o', 'u', 'e', '合', '作', '，', '为', '2', '0', '0', '8', '年', '4', '月', '3', '0', '日', '出', '版', '的', '[UNK]', 'i', 'd', '[UNK]', 'e', 'e', 'k', '杂', '志', '拍', '摄', '封', '面', '及', '内', '页', '照', '。', '其', '后', '她', '参', '加', '了', '[UNK]', '杂', '志', '与', '[UNK]', 'u', 'p', 'r', 'e', 'm', 'e', '模', '特', '儿', '公', '司', '合', '办', '的', '模', '特', '儿', '选', '拔', '赛', '2', '0', '0', '8', '。', '她', '其', '后', '更', '与', '[UNK]', 'l', 'i', 't', 'e', '签', '约', '。', '最', '近', '她', '与', '香', '港', '的', '模', '特', '儿', '公', '司', '[UNK]', 't', 'y', 'l', 'e', '[UNK]', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', '[UNK]', 'a', 'n', 'a', 'g', 'e', 'm', 'e', 'n', 't', '签', '约', '，', '并', '在', '香', '港', '发', '展', '其', '模', '特', '儿', '事', '业', '。', '她', '曾', '在', '很', '多', '香', '港', '的', '时', '装', '杂', '志', '中', '任', '模', '特', '儿', '，', '《', '[UNK]', 'e', 't', '》', '、', '《', '东', '方', '日', '报', '》', '、', '《', '[UNK]', 'l', 'l', 'e', '》', '等', '。']
example.start_position= 201
tok_start_position= 201
tok_start_position 201
tok_end_position 203
max_seq_length= 384 max_tokens_for_doc 365
len(all_doc_tokens)= 718 start_offset= 0
length= 718 max_tokens_for_doc 365
_DocSpan(start=start_offset, length=length)=
DocSpan(start=0, length=365)
min(length, doc_stride)= 128
len(all_doc_tokens)= 718 start_offset= 128
length= 590 max_tokens_for_doc 365
_DocSpan(start=start_offset, length=length)=
DocSpan(start=128, length=365)
min(length, doc_stride)= 128
len(all_doc_tokens)= 718 start_offset= 256
length= 462 max_tokens_for_doc 365
_DocSpan(start=start_offset, length=length)=
DocSpan(start=256, length=365)
min(length, doc_stride)= 128
len(all_doc_tokens)= 718 start_offset= 384
length= 334 max_tokens_for_doc 365
_DocSpan(start=start_offset, length=length)=
DocSpan(start=384, length=334)
doc_span_index 0 doc_span DocSpan(start=0, length=365)
tokens a ['[CLS]', '毕', '业', '后', '的', '安', '雅', '·', '罗', '素', '法', '职', '业', '是', '什', '么', '？', '[SEP]']
segment_ids a [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
p_mask a [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
doc_span.length= 365
i= 0 doc_span.start = 0 split_token_index= 0
token_to_orig_map[ 18 ]= 0
position= 0
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 0
num_right_context= 364
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 18 ]= True
i= 1 doc_span.start = 0 split_token_index= 1
token_to_orig_map[ 19 ]= 1
position= 1
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 1
num_right_context= 363
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 19 ]= True
i= 2 doc_span.start = 0 split_token_index= 2
token_to_orig_map[ 20 ]= 2
position= 2
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 2
num_right_context= 362
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 20 ]= True
i= 3 doc_span.start = 0 split_token_index= 3
token_to_orig_map[ 21 ]= 3
position= 3
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 3
num_right_context= 361
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 21 ]= True
i= 4 doc_span.start = 0 split_token_index= 4
token_to_orig_map[ 22 ]= 4
position= 4
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 4
num_right_context= 360
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 22 ]= True
i= 5 doc_span.start = 0 split_token_index= 5
token_to_orig_map[ 23 ]= 5
position= 5
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 5
num_right_context= 359
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 23 ]= True
i= 6 doc_span.start = 0 split_token_index= 6
token_to_orig_map[ 24 ]= 6
position= 6
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 6
num_right_context= 358
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 24 ]= True
i= 7 doc_span.start = 0 split_token_index= 7
token_to_orig_map[ 25 ]= 7
position= 7
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 7
num_right_context= 357
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 25 ]= True
i= 8 doc_span.start = 0 split_token_index= 8
token_to_orig_map[ 26 ]= 8
position= 8
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 8
num_right_context= 356
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 26 ]= True
i= 9 doc_span.start = 0 split_token_index= 9
token_to_orig_map[ 27 ]= 9
position= 9
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 9
num_right_context= 355
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 27 ]= True
i= 10 doc_span.start = 0 split_token_index= 10
token_to_orig_map[ 28 ]= 10
position= 10
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 10
num_right_context= 354
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 28 ]= True
i= 11 doc_span.start = 0 split_token_index= 11
token_to_orig_map[ 29 ]= 11
position= 11
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 11
num_right_context= 353
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 29 ]= True
i= 12 doc_span.start = 0 split_token_index= 12
token_to_orig_map[ 30 ]= 12
position= 12
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 12
num_right_context= 352
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 30 ]= True
i= 13 doc_span.start = 0 split_token_index= 13
token_to_orig_map[ 31 ]= 13
position= 13
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 13
num_right_context= 351
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 31 ]= True
i= 14 doc_span.start = 0 split_token_index= 14
token_to_orig_map[ 32 ]= 14
position= 14
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 14
num_right_context= 350
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 32 ]= True
i= 15 doc_span.start = 0 split_token_index= 15
token_to_orig_map[ 33 ]= 15
position= 15
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 15
num_right_context= 349
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 33 ]= True
i= 16 doc_span.start = 0 split_token_index= 16
token_to_orig_map[ 34 ]= 16
position= 16
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 16
num_right_context= 348
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 34 ]= True
i= 17 doc_span.start = 0 split_token_index= 17
token_to_orig_map[ 35 ]= 17
position= 17
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 17
num_right_context= 347
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 35 ]= True
i= 18 doc_span.start = 0 split_token_index= 18
token_to_orig_map[ 36 ]= 18
position= 18
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 18
num_right_context= 346
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 36 ]= True
i= 19 doc_span.start = 0 split_token_index= 19
token_to_orig_map[ 37 ]= 19
position= 19
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 19
num_right_context= 345
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 37 ]= True
i= 20 doc_span.start = 0 split_token_index= 20
token_to_orig_map[ 38 ]= 20
position= 20
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 20
num_right_context= 344
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 38 ]= True
i= 21 doc_span.start = 0 split_token_index= 21
token_to_orig_map[ 39 ]= 21
position= 21
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 21
num_right_context= 343
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 39 ]= True
i= 22 doc_span.start = 0 split_token_index= 22
token_to_orig_map[ 40 ]= 22
position= 22
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 22
num_right_context= 342
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 40 ]= True
i= 23 doc_span.start = 0 split_token_index= 23
token_to_orig_map[ 41 ]= 23
position= 23
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 23
num_right_context= 341
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 41 ]= True
i= 24 doc_span.start = 0 split_token_index= 24
token_to_orig_map[ 42 ]= 24
position= 24
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 24
num_right_context= 340
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 42 ]= True
i= 25 doc_span.start = 0 split_token_index= 25
token_to_orig_map[ 43 ]= 25
position= 25
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 25
num_right_context= 339
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 43 ]= True
i= 26 doc_span.start = 0 split_token_index= 26
token_to_orig_map[ 44 ]= 26
position= 26
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 26
num_right_context= 338
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 44 ]= True
i= 27 doc_span.start = 0 split_token_index= 27
token_to_orig_map[ 45 ]= 27
position= 27
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 27
num_right_context= 337
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 45 ]= True
i= 28 doc_span.start = 0 split_token_index= 28
token_to_orig_map[ 46 ]= 28
position= 28
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 28
num_right_context= 336
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 46 ]= True
i= 29 doc_span.start = 0 split_token_index= 29
token_to_orig_map[ 47 ]= 29
position= 29
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 29
num_right_context= 335
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 47 ]= True
i= 30 doc_span.start = 0 split_token_index= 30
token_to_orig_map[ 48 ]= 30
position= 30
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 30
num_right_context= 334
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 48 ]= True
i= 31 doc_span.start = 0 split_token_index= 31
token_to_orig_map[ 49 ]= 31
position= 31
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 31
num_right_context= 333
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 49 ]= True
i= 32 doc_span.start = 0 split_token_index= 32
token_to_orig_map[ 50 ]= 32
position= 32
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 32
num_right_context= 332
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 50 ]= True
i= 33 doc_span.start = 0 split_token_index= 33
token_to_orig_map[ 51 ]= 33
position= 33
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 33
num_right_context= 331
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 51 ]= True
i= 34 doc_span.start = 0 split_token_index= 34
token_to_orig_map[ 52 ]= 34
position= 34
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 34
num_right_context= 330
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 52 ]= True
i= 35 doc_span.start = 0 split_token_index= 35
token_to_orig_map[ 53 ]= 35
position= 35
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 35
num_right_context= 329
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 53 ]= True
i= 36 doc_span.start = 0 split_token_index= 36
token_to_orig_map[ 54 ]= 36
position= 36
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 36
num_right_context= 328
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 54 ]= True
i= 37 doc_span.start = 0 split_token_index= 37
token_to_orig_map[ 55 ]= 37
position= 37
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 37
num_right_context= 327
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 55 ]= True
i= 38 doc_span.start = 0 split_token_index= 38
token_to_orig_map[ 56 ]= 38
position= 38
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 38
num_right_context= 326
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 56 ]= True
i= 39 doc_span.start = 0 split_token_index= 39
token_to_orig_map[ 57 ]= 39
position= 39
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 39
num_right_context= 325
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 57 ]= True
i= 40 doc_span.start = 0 split_token_index= 40
token_to_orig_map[ 58 ]= 40
position= 40
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 40
num_right_context= 324
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 58 ]= True
i= 41 doc_span.start = 0 split_token_index= 41
token_to_orig_map[ 59 ]= 41
position= 41
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 41
num_right_context= 323
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 59 ]= True
i= 42 doc_span.start = 0 split_token_index= 42
token_to_orig_map[ 60 ]= 42
position= 42
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 42
num_right_context= 322
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 60 ]= True
i= 43 doc_span.start = 0 split_token_index= 43
token_to_orig_map[ 61 ]= 43
position= 43
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 43
num_right_context= 321
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 61 ]= True
i= 44 doc_span.start = 0 split_token_index= 44
token_to_orig_map[ 62 ]= 44
position= 44
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 44
num_right_context= 320
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 62 ]= True
i= 45 doc_span.start = 0 split_token_index= 45
token_to_orig_map[ 63 ]= 45
position= 45
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 45
num_right_context= 319
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 63 ]= True
i= 46 doc_span.start = 0 split_token_index= 46
token_to_orig_map[ 64 ]= 46
position= 46
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 46
num_right_context= 318
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 64 ]= True
i= 47 doc_span.start = 0 split_token_index= 47
token_to_orig_map[ 65 ]= 47
position= 47
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 47
num_right_context= 317
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 65 ]= True
i= 48 doc_span.start = 0 split_token_index= 48
token_to_orig_map[ 66 ]= 48
position= 48
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 48
num_right_context= 316
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 66 ]= True
i= 49 doc_span.start = 0 split_token_index= 49
token_to_orig_map[ 67 ]= 49
position= 49
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 49
num_right_context= 315
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 67 ]= True
i= 50 doc_span.start = 0 split_token_index= 50
token_to_orig_map[ 68 ]= 50
position= 50
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 50
num_right_context= 314
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 68 ]= True
i= 51 doc_span.start = 0 split_token_index= 51
token_to_orig_map[ 69 ]= 51
position= 51
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 51
num_right_context= 313
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 69 ]= True
i= 52 doc_span.start = 0 split_token_index= 52
token_to_orig_map[ 70 ]= 52
position= 52
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 52
num_right_context= 312
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 70 ]= True
i= 53 doc_span.start = 0 split_token_index= 53
token_to_orig_map[ 71 ]= 53
position= 53
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 53
num_right_context= 311
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 71 ]= True
i= 54 doc_span.start = 0 split_token_index= 54
token_to_orig_map[ 72 ]= 54
position= 54
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 54
num_right_context= 310
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 72 ]= True
i= 55 doc_span.start = 0 split_token_index= 55
token_to_orig_map[ 73 ]= 55
position= 55
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 55
num_right_context= 309
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 73 ]= True
i= 56 doc_span.start = 0 split_token_index= 56
token_to_orig_map[ 74 ]= 56
position= 56
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 56
num_right_context= 308
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 74 ]= True
i= 57 doc_span.start = 0 split_token_index= 57
token_to_orig_map[ 75 ]= 57
position= 57
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 57
num_right_context= 307
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 75 ]= True
i= 58 doc_span.start = 0 split_token_index= 58
token_to_orig_map[ 76 ]= 58
position= 58
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 58
num_right_context= 306
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 76 ]= True
i= 59 doc_span.start = 0 split_token_index= 59
token_to_orig_map[ 77 ]= 59
position= 59
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 59
num_right_context= 305
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 77 ]= True
i= 60 doc_span.start = 0 split_token_index= 60
token_to_orig_map[ 78 ]= 60
position= 60
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 60
num_right_context= 304
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 78 ]= True
i= 61 doc_span.start = 0 split_token_index= 61
token_to_orig_map[ 79 ]= 61
position= 61
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 61
num_right_context= 303
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 79 ]= True
i= 62 doc_span.start = 0 split_token_index= 62
token_to_orig_map[ 80 ]= 62
position= 62
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 62
num_right_context= 302
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 80 ]= True
i= 63 doc_span.start = 0 split_token_index= 63
token_to_orig_map[ 81 ]= 63
position= 63
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 63
num_right_context= 301
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 81 ]= True
i= 64 doc_span.start = 0 split_token_index= 64
token_to_orig_map[ 82 ]= 64
position= 64
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 64
num_right_context= 300
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 82 ]= True
i= 65 doc_span.start = 0 split_token_index= 65
token_to_orig_map[ 83 ]= 65
position= 65
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 65
num_right_context= 299
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 83 ]= True
i= 66 doc_span.start = 0 split_token_index= 66
token_to_orig_map[ 84 ]= 66
position= 66
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 66
num_right_context= 298
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 84 ]= True
i= 67 doc_span.start = 0 split_token_index= 67
token_to_orig_map[ 85 ]= 67
position= 67
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 67
num_right_context= 297
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 85 ]= True
i= 68 doc_span.start = 0 split_token_index= 68
token_to_orig_map[ 86 ]= 68
position= 68
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 68
num_right_context= 296
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 86 ]= True
i= 69 doc_span.start = 0 split_token_index= 69
token_to_orig_map[ 87 ]= 69
position= 69
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 69
num_right_context= 295
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 87 ]= True
i= 70 doc_span.start = 0 split_token_index= 70
token_to_orig_map[ 88 ]= 70
position= 70
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 70
num_right_context= 294
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 88 ]= True
i= 71 doc_span.start = 0 split_token_index= 71
token_to_orig_map[ 89 ]= 71
position= 71
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 71
num_right_context= 293
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 89 ]= True
i= 72 doc_span.start = 0 split_token_index= 72
token_to_orig_map[ 90 ]= 72
position= 72
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 72
num_right_context= 292
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 90 ]= True
i= 73 doc_span.start = 0 split_token_index= 73
token_to_orig_map[ 91 ]= 73
position= 73
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 73
num_right_context= 291
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 91 ]= True
i= 74 doc_span.start = 0 split_token_index= 74
token_to_orig_map[ 92 ]= 74
position= 74
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 74
num_right_context= 290
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 92 ]= True
i= 75 doc_span.start = 0 split_token_index= 75
token_to_orig_map[ 93 ]= 75
position= 75
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 75
num_right_context= 289
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 93 ]= True
i= 76 doc_span.start = 0 split_token_index= 76
token_to_orig_map[ 94 ]= 76
position= 76
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 76
num_right_context= 288
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 94 ]= True
i= 77 doc_span.start = 0 split_token_index= 77
token_to_orig_map[ 95 ]= 77
position= 77
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 77
num_right_context= 287
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 95 ]= True
i= 78 doc_span.start = 0 split_token_index= 78
token_to_orig_map[ 96 ]= 78
position= 78
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 78
num_right_context= 286
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 96 ]= True
i= 79 doc_span.start = 0 split_token_index= 79
token_to_orig_map[ 97 ]= 79
position= 79
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 79
num_right_context= 285
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 97 ]= True
i= 80 doc_span.start = 0 split_token_index= 80
token_to_orig_map[ 98 ]= 80
position= 80
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 80
num_right_context= 284
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 98 ]= True
i= 81 doc_span.start = 0 split_token_index= 81
token_to_orig_map[ 99 ]= 81
position= 81
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 81
num_right_context= 283
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 99 ]= True
i= 82 doc_span.start = 0 split_token_index= 82
token_to_orig_map[ 100 ]= 82
position= 82
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 82
num_right_context= 282
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 100 ]= True
i= 83 doc_span.start = 0 split_token_index= 83
token_to_orig_map[ 101 ]= 83
position= 83
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 83
num_right_context= 281
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 101 ]= True
i= 84 doc_span.start = 0 split_token_index= 84
token_to_orig_map[ 102 ]= 84
position= 84
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 84
num_right_context= 280
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 102 ]= True
i= 85 doc_span.start = 0 split_token_index= 85
token_to_orig_map[ 103 ]= 85
position= 85
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 85
num_right_context= 279
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 103 ]= True
i= 86 doc_span.start = 0 split_token_index= 86
token_to_orig_map[ 104 ]= 86
position= 86
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 86
num_right_context= 278
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 104 ]= True
i= 87 doc_span.start = 0 split_token_index= 87
token_to_orig_map[ 105 ]= 87
position= 87
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 87
num_right_context= 277
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 105 ]= True
i= 88 doc_span.start = 0 split_token_index= 88
token_to_orig_map[ 106 ]= 88
position= 88
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 88
num_right_context= 276
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 106 ]= True
i= 89 doc_span.start = 0 split_token_index= 89
token_to_orig_map[ 107 ]= 89
position= 89
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 89
num_right_context= 275
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 107 ]= True
i= 90 doc_span.start = 0 split_token_index= 90
token_to_orig_map[ 108 ]= 90
position= 90
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 90
num_right_context= 274
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 108 ]= True
i= 91 doc_span.start = 0 split_token_index= 91
token_to_orig_map[ 109 ]= 91
position= 91
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 91
num_right_context= 273
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 109 ]= True
i= 92 doc_span.start = 0 split_token_index= 92
token_to_orig_map[ 110 ]= 92
position= 92
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 92
num_right_context= 272
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 110 ]= True
i= 93 doc_span.start = 0 split_token_index= 93
token_to_orig_map[ 111 ]= 93
position= 93
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 93
num_right_context= 271
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 111 ]= True
i= 94 doc_span.start = 0 split_token_index= 94
token_to_orig_map[ 112 ]= 94
position= 94
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 94
num_right_context= 270
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 112 ]= True
i= 95 doc_span.start = 0 split_token_index= 95
token_to_orig_map[ 113 ]= 95
position= 95
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 95
num_right_context= 269
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 113 ]= True
i= 96 doc_span.start = 0 split_token_index= 96
token_to_orig_map[ 114 ]= 96
position= 96
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 96
num_right_context= 268
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 114 ]= True
i= 97 doc_span.start = 0 split_token_index= 97
token_to_orig_map[ 115 ]= 97
position= 97
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 97
num_right_context= 267
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 115 ]= True
i= 98 doc_span.start = 0 split_token_index= 98
token_to_orig_map[ 116 ]= 98
position= 98
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 98
num_right_context= 266
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 116 ]= True
i= 99 doc_span.start = 0 split_token_index= 99
token_to_orig_map[ 117 ]= 99
position= 99
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 99
num_right_context= 265
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 117 ]= True
i= 100 doc_span.start = 0 split_token_index= 100
token_to_orig_map[ 118 ]= 100
position= 100
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 100
num_right_context= 264
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 118 ]= True
i= 101 doc_span.start = 0 split_token_index= 101
token_to_orig_map[ 119 ]= 101
position= 101
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 101
num_right_context= 263
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 119 ]= True
i= 102 doc_span.start = 0 split_token_index= 102
token_to_orig_map[ 120 ]= 102
position= 102
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 102
num_right_context= 262
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 120 ]= True
i= 103 doc_span.start = 0 split_token_index= 103
token_to_orig_map[ 121 ]= 103
position= 103
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 103
num_right_context= 261
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 121 ]= True
i= 104 doc_span.start = 0 split_token_index= 104
token_to_orig_map[ 122 ]= 104
position= 104
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 104
num_right_context= 260
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 122 ]= True
i= 105 doc_span.start = 0 split_token_index= 105
token_to_orig_map[ 123 ]= 105
position= 105
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 105
num_right_context= 259
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 123 ]= True
i= 106 doc_span.start = 0 split_token_index= 106
token_to_orig_map[ 124 ]= 106
position= 106
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 106
num_right_context= 258
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 124 ]= True
i= 107 doc_span.start = 0 split_token_index= 107
token_to_orig_map[ 125 ]= 107
position= 107
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 107
num_right_context= 257
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 125 ]= True
i= 108 doc_span.start = 0 split_token_index= 108
token_to_orig_map[ 126 ]= 108
position= 108
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 108
num_right_context= 256
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 126 ]= True
i= 109 doc_span.start = 0 split_token_index= 109
token_to_orig_map[ 127 ]= 109
position= 109
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 109
num_right_context= 255
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 127 ]= True
i= 110 doc_span.start = 0 split_token_index= 110
token_to_orig_map[ 128 ]= 110
position= 110
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 110
num_right_context= 254
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 128 ]= True
i= 111 doc_span.start = 0 split_token_index= 111
token_to_orig_map[ 129 ]= 111
position= 111
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 111
num_right_context= 253
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 129 ]= True
i= 112 doc_span.start = 0 split_token_index= 112
token_to_orig_map[ 130 ]= 112
position= 112
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 112
num_right_context= 252
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 130 ]= True
i= 113 doc_span.start = 0 split_token_index= 113
token_to_orig_map[ 131 ]= 113
position= 113
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 113
num_right_context= 251
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 131 ]= True
i= 114 doc_span.start = 0 split_token_index= 114
token_to_orig_map[ 132 ]= 114
position= 114
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 114
num_right_context= 250
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 132 ]= True
i= 115 doc_span.start = 0 split_token_index= 115
token_to_orig_map[ 133 ]= 115
position= 115
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 115
num_right_context= 249
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 133 ]= True
i= 116 doc_span.start = 0 split_token_index= 116
token_to_orig_map[ 134 ]= 116
position= 116
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 116
num_right_context= 248
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 134 ]= True
i= 117 doc_span.start = 0 split_token_index= 117
token_to_orig_map[ 135 ]= 117
position= 117
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 117
num_right_context= 247
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 135 ]= True
i= 118 doc_span.start = 0 split_token_index= 118
token_to_orig_map[ 136 ]= 118
position= 118
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 118
num_right_context= 246
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 136 ]= True
i= 119 doc_span.start = 0 split_token_index= 119
token_to_orig_map[ 137 ]= 119
position= 119
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 119
num_right_context= 245
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 137 ]= True
i= 120 doc_span.start = 0 split_token_index= 120
token_to_orig_map[ 138 ]= 120
position= 120
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 120
num_right_context= 244
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 138 ]= True
i= 121 doc_span.start = 0 split_token_index= 121
token_to_orig_map[ 139 ]= 121
position= 121
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 121
num_right_context= 243
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 139 ]= True
i= 122 doc_span.start = 0 split_token_index= 122
token_to_orig_map[ 140 ]= 122
position= 122
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 122
num_right_context= 242
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 140 ]= True
i= 123 doc_span.start = 0 split_token_index= 123
token_to_orig_map[ 141 ]= 123
position= 123
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 123
num_right_context= 241
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 141 ]= True
i= 124 doc_span.start = 0 split_token_index= 124
token_to_orig_map[ 142 ]= 124
position= 124
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 124
num_right_context= 240
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 142 ]= True
i= 125 doc_span.start = 0 split_token_index= 125
token_to_orig_map[ 143 ]= 125
position= 125
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 125
num_right_context= 239
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 143 ]= True
i= 126 doc_span.start = 0 split_token_index= 126
token_to_orig_map[ 144 ]= 126
position= 126
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 126
num_right_context= 238
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 144 ]= True
i= 127 doc_span.start = 0 split_token_index= 127
token_to_orig_map[ 145 ]= 127
position= 127
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 127
num_right_context= 237
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 145 ]= True
i= 128 doc_span.start = 0 split_token_index= 128
token_to_orig_map[ 146 ]= 128
position= 128
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 128
num_right_context= 236
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 0
num_right_context= 364
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 146 ]= True
i= 129 doc_span.start = 0 split_token_index= 129
token_to_orig_map[ 147 ]= 129
position= 129
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 129
num_right_context= 235
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 1
num_right_context= 363
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 147 ]= True
i= 130 doc_span.start = 0 split_token_index= 130
token_to_orig_map[ 148 ]= 130
position= 130
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 130
num_right_context= 234
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 2
num_right_context= 362
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 148 ]= True
i= 131 doc_span.start = 0 split_token_index= 131
token_to_orig_map[ 149 ]= 131
position= 131
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 131
num_right_context= 233
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 3
num_right_context= 361
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 149 ]= True
i= 132 doc_span.start = 0 split_token_index= 132
token_to_orig_map[ 150 ]= 132
position= 132
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 132
num_right_context= 232
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 4
num_right_context= 360
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 150 ]= True
i= 133 doc_span.start = 0 split_token_index= 133
token_to_orig_map[ 151 ]= 133
position= 133
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 133
num_right_context= 231
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 5
num_right_context= 359
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 151 ]= True
i= 134 doc_span.start = 0 split_token_index= 134
token_to_orig_map[ 152 ]= 134
position= 134
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 134
num_right_context= 230
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 6
num_right_context= 358
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 152 ]= True
i= 135 doc_span.start = 0 split_token_index= 135
token_to_orig_map[ 153 ]= 135
position= 135
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 135
num_right_context= 229
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 7
num_right_context= 357
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 153 ]= True
i= 136 doc_span.start = 0 split_token_index= 136
token_to_orig_map[ 154 ]= 136
position= 136
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 136
num_right_context= 228
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 8
num_right_context= 356
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 154 ]= True
i= 137 doc_span.start = 0 split_token_index= 137
token_to_orig_map[ 155 ]= 137
position= 137
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 137
num_right_context= 227
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 9
num_right_context= 355
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 155 ]= True
i= 138 doc_span.start = 0 split_token_index= 138
token_to_orig_map[ 156 ]= 138
position= 138
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 138
num_right_context= 226
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 10
num_right_context= 354
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 156 ]= True
i= 139 doc_span.start = 0 split_token_index= 139
token_to_orig_map[ 157 ]= 139
position= 139
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 139
num_right_context= 225
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 11
num_right_context= 353
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 157 ]= True
i= 140 doc_span.start = 0 split_token_index= 140
token_to_orig_map[ 158 ]= 140
position= 140
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 140
num_right_context= 224
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 12
num_right_context= 352
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 158 ]= True
i= 141 doc_span.start = 0 split_token_index= 141
token_to_orig_map[ 159 ]= 141
position= 141
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 141
num_right_context= 223
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 13
num_right_context= 351
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 159 ]= True
i= 142 doc_span.start = 0 split_token_index= 142
token_to_orig_map[ 160 ]= 142
position= 142
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 142
num_right_context= 222
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 14
num_right_context= 350
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 160 ]= True
i= 143 doc_span.start = 0 split_token_index= 143
token_to_orig_map[ 161 ]= 143
position= 143
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 143
num_right_context= 221
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 15
num_right_context= 349
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 161 ]= True
i= 144 doc_span.start = 0 split_token_index= 144
token_to_orig_map[ 162 ]= 144
position= 144
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 144
num_right_context= 220
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 16
num_right_context= 348
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 162 ]= True
i= 145 doc_span.start = 0 split_token_index= 145
token_to_orig_map[ 163 ]= 145
position= 145
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 145
num_right_context= 219
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 17
num_right_context= 347
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 163 ]= True
i= 146 doc_span.start = 0 split_token_index= 146
token_to_orig_map[ 164 ]= 146
position= 146
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 146
num_right_context= 218
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 18
num_right_context= 346
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 164 ]= True
i= 147 doc_span.start = 0 split_token_index= 147
token_to_orig_map[ 165 ]= 147
position= 147
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 147
num_right_context= 217
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 19
num_right_context= 345
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 165 ]= True
i= 148 doc_span.start = 0 split_token_index= 148
token_to_orig_map[ 166 ]= 148
position= 148
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 148
num_right_context= 216
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 20
num_right_context= 344
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 166 ]= True
i= 149 doc_span.start = 0 split_token_index= 149
token_to_orig_map[ 167 ]= 149
position= 149
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 149
num_right_context= 215
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 21
num_right_context= 343
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 167 ]= True
i= 150 doc_span.start = 0 split_token_index= 150
token_to_orig_map[ 168 ]= 150
position= 150
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 150
num_right_context= 214
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 22
num_right_context= 342
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 168 ]= True
i= 151 doc_span.start = 0 split_token_index= 151
token_to_orig_map[ 169 ]= 151
position= 151
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 151
num_right_context= 213
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 23
num_right_context= 341
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 169 ]= True
i= 152 doc_span.start = 0 split_token_index= 152
token_to_orig_map[ 170 ]= 152
position= 152
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 152
num_right_context= 212
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 24
num_right_context= 340
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 170 ]= True
i= 153 doc_span.start = 0 split_token_index= 153
token_to_orig_map[ 171 ]= 153
position= 153
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 153
num_right_context= 211
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 25
num_right_context= 339
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 171 ]= True
i= 154 doc_span.start = 0 split_token_index= 154
token_to_orig_map[ 172 ]= 154
position= 154
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 154
num_right_context= 210
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 26
num_right_context= 338
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 172 ]= True
i= 155 doc_span.start = 0 split_token_index= 155
token_to_orig_map[ 173 ]= 155
position= 155
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 155
num_right_context= 209
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 27
num_right_context= 337
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 173 ]= True
i= 156 doc_span.start = 0 split_token_index= 156
token_to_orig_map[ 174 ]= 156
position= 156
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 156
num_right_context= 208
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 28
num_right_context= 336
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 174 ]= True
i= 157 doc_span.start = 0 split_token_index= 157
token_to_orig_map[ 175 ]= 157
position= 157
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 157
num_right_context= 207
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 29
num_right_context= 335
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 175 ]= True
i= 158 doc_span.start = 0 split_token_index= 158
token_to_orig_map[ 176 ]= 158
position= 158
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 158
num_right_context= 206
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 30
num_right_context= 334
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 176 ]= True
i= 159 doc_span.start = 0 split_token_index= 159
token_to_orig_map[ 177 ]= 159
position= 159
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 159
num_right_context= 205
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 31
num_right_context= 333
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 177 ]= True
i= 160 doc_span.start = 0 split_token_index= 160
token_to_orig_map[ 178 ]= 160
position= 160
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 160
num_right_context= 204
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 32
num_right_context= 332
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 178 ]= True
i= 161 doc_span.start = 0 split_token_index= 161
token_to_orig_map[ 179 ]= 161
position= 161
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 161
num_right_context= 203
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 33
num_right_context= 331
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 179 ]= True
i= 162 doc_span.start = 0 split_token_index= 162
token_to_orig_map[ 180 ]= 162
position= 162
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 162
num_right_context= 202
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 34
num_right_context= 330
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 180 ]= True
i= 163 doc_span.start = 0 split_token_index= 163
token_to_orig_map[ 181 ]= 163
position= 163
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 163
num_right_context= 201
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 35
num_right_context= 329
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 181 ]= True
i= 164 doc_span.start = 0 split_token_index= 164
token_to_orig_map[ 182 ]= 164
position= 164
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 164
num_right_context= 200
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 36
num_right_context= 328
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 182 ]= True
i= 165 doc_span.start = 0 split_token_index= 165
token_to_orig_map[ 183 ]= 165
position= 165
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 165
num_right_context= 199
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 37
num_right_context= 327
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 183 ]= True
i= 166 doc_span.start = 0 split_token_index= 166
token_to_orig_map[ 184 ]= 166
position= 166
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 166
num_right_context= 198
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 38
num_right_context= 326
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 184 ]= True
i= 167 doc_span.start = 0 split_token_index= 167
token_to_orig_map[ 185 ]= 167
position= 167
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 167
num_right_context= 197
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 39
num_right_context= 325
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 185 ]= True
i= 168 doc_span.start = 0 split_token_index= 168
token_to_orig_map[ 186 ]= 168
position= 168
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 168
num_right_context= 196
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 40
num_right_context= 324
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 186 ]= True
i= 169 doc_span.start = 0 split_token_index= 169
token_to_orig_map[ 187 ]= 169
position= 169
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 169
num_right_context= 195
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 41
num_right_context= 323
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 187 ]= True
i= 170 doc_span.start = 0 split_token_index= 170
token_to_orig_map[ 188 ]= 170
position= 170
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 170
num_right_context= 194
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 42
num_right_context= 322
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 188 ]= True
i= 171 doc_span.start = 0 split_token_index= 171
token_to_orig_map[ 189 ]= 171
position= 171
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 171
num_right_context= 193
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 43
num_right_context= 321
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 189 ]= True
i= 172 doc_span.start = 0 split_token_index= 172
token_to_orig_map[ 190 ]= 172
position= 172
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 172
num_right_context= 192
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 44
num_right_context= 320
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 190 ]= True
i= 173 doc_span.start = 0 split_token_index= 173
token_to_orig_map[ 191 ]= 173
position= 173
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 173
num_right_context= 191
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 45
num_right_context= 319
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 191 ]= True
i= 174 doc_span.start = 0 split_token_index= 174
token_to_orig_map[ 192 ]= 174
position= 174
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 174
num_right_context= 190
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 46
num_right_context= 318
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 192 ]= True
i= 175 doc_span.start = 0 split_token_index= 175
token_to_orig_map[ 193 ]= 175
position= 175
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 175
num_right_context= 189
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 47
num_right_context= 317
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 193 ]= True
i= 176 doc_span.start = 0 split_token_index= 176
token_to_orig_map[ 194 ]= 176
position= 176
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 176
num_right_context= 188
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 48
num_right_context= 316
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 194 ]= True
i= 177 doc_span.start = 0 split_token_index= 177
token_to_orig_map[ 195 ]= 177
position= 177
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 177
num_right_context= 187
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 49
num_right_context= 315
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 195 ]= True
i= 178 doc_span.start = 0 split_token_index= 178
token_to_orig_map[ 196 ]= 178
position= 178
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 178
num_right_context= 186
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 50
num_right_context= 314
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 196 ]= True
i= 179 doc_span.start = 0 split_token_index= 179
token_to_orig_map[ 197 ]= 179
position= 179
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 179
num_right_context= 185
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 51
num_right_context= 313
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 197 ]= True
i= 180 doc_span.start = 0 split_token_index= 180
token_to_orig_map[ 198 ]= 180
position= 180
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 180
num_right_context= 184
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 52
num_right_context= 312
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 198 ]= True
i= 181 doc_span.start = 0 split_token_index= 181
token_to_orig_map[ 199 ]= 181
position= 181
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 181
num_right_context= 183
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 53
num_right_context= 311
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 199 ]= True
i= 182 doc_span.start = 0 split_token_index= 182
token_to_orig_map[ 200 ]= 182
position= 182
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 182
num_right_context= 182
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 54
num_right_context= 310
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 200 ]= True
i= 183 doc_span.start = 0 split_token_index= 183
token_to_orig_map[ 201 ]= 183
position= 183
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 183
num_right_context= 181
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 55
num_right_context= 309
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 201 ]= True
i= 184 doc_span.start = 0 split_token_index= 184
token_to_orig_map[ 202 ]= 184
position= 184
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 184
num_right_context= 180
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 56
num_right_context= 308
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 202 ]= True
i= 185 doc_span.start = 0 split_token_index= 185
token_to_orig_map[ 203 ]= 185
position= 185
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 185
num_right_context= 179
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 57
num_right_context= 307
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 203 ]= True
i= 186 doc_span.start = 0 split_token_index= 186
token_to_orig_map[ 204 ]= 186
position= 186
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 186
num_right_context= 178
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 58
num_right_context= 306
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 204 ]= True
i= 187 doc_span.start = 0 split_token_index= 187
token_to_orig_map[ 205 ]= 187
position= 187
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 187
num_right_context= 177
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 59
num_right_context= 305
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 205 ]= True
i= 188 doc_span.start = 0 split_token_index= 188
token_to_orig_map[ 206 ]= 188
position= 188
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 188
num_right_context= 176
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 60
num_right_context= 304
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 206 ]= True
i= 189 doc_span.start = 0 split_token_index= 189
token_to_orig_map[ 207 ]= 189
position= 189
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 189
num_right_context= 175
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 61
num_right_context= 303
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 207 ]= True
i= 190 doc_span.start = 0 split_token_index= 190
token_to_orig_map[ 208 ]= 190
position= 190
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 190
num_right_context= 174
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 62
num_right_context= 302
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 208 ]= True
i= 191 doc_span.start = 0 split_token_index= 191
token_to_orig_map[ 209 ]= 191
position= 191
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 191
num_right_context= 173
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 63
num_right_context= 301
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 209 ]= True
i= 192 doc_span.start = 0 split_token_index= 192
token_to_orig_map[ 210 ]= 192
position= 192
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 192
num_right_context= 172
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 64
num_right_context= 300
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 210 ]= True
i= 193 doc_span.start = 0 split_token_index= 193
token_to_orig_map[ 211 ]= 193
position= 193
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 193
num_right_context= 171
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 65
num_right_context= 299
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 211 ]= True
i= 194 doc_span.start = 0 split_token_index= 194
token_to_orig_map[ 212 ]= 194
position= 194
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 194
num_right_context= 170
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 66
num_right_context= 298
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 212 ]= True
i= 195 doc_span.start = 0 split_token_index= 195
token_to_orig_map[ 213 ]= 195
position= 195
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 195
num_right_context= 169
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 67
num_right_context= 297
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 213 ]= True
i= 196 doc_span.start = 0 split_token_index= 196
token_to_orig_map[ 214 ]= 196
position= 196
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 196
num_right_context= 168
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 68
num_right_context= 296
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 214 ]= True
i= 197 doc_span.start = 0 split_token_index= 197
token_to_orig_map[ 215 ]= 197
position= 197
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 197
num_right_context= 167
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 69
num_right_context= 295
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 215 ]= True
i= 198 doc_span.start = 0 split_token_index= 198
token_to_orig_map[ 216 ]= 198
position= 198
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 198
num_right_context= 166
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 70
num_right_context= 294
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 216 ]= True
i= 199 doc_span.start = 0 split_token_index= 199
token_to_orig_map[ 217 ]= 199
position= 199
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 199
num_right_context= 165
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 71
num_right_context= 293
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 217 ]= True
i= 200 doc_span.start = 0 split_token_index= 200
token_to_orig_map[ 218 ]= 200
position= 200
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 200
num_right_context= 164
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 72
num_right_context= 292
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 218 ]= True
i= 201 doc_span.start = 0 split_token_index= 201
token_to_orig_map[ 219 ]= 201
position= 201
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 201
num_right_context= 163
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 73
num_right_context= 291
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 219 ]= True
i= 202 doc_span.start = 0 split_token_index= 202
token_to_orig_map[ 220 ]= 202
position= 202
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 202
num_right_context= 162
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 74
num_right_context= 290
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 220 ]= True
i= 203 doc_span.start = 0 split_token_index= 203
token_to_orig_map[ 221 ]= 203
position= 203
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 203
num_right_context= 161
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 75
num_right_context= 289
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 221 ]= True
i= 204 doc_span.start = 0 split_token_index= 204
token_to_orig_map[ 222 ]= 204
position= 204
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 204
num_right_context= 160
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 76
num_right_context= 288
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 222 ]= True
i= 205 doc_span.start = 0 split_token_index= 205
token_to_orig_map[ 223 ]= 205
position= 205
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 205
num_right_context= 159
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 77
num_right_context= 287
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 223 ]= True
i= 206 doc_span.start = 0 split_token_index= 206
token_to_orig_map[ 224 ]= 206
position= 206
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 206
num_right_context= 158
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 78
num_right_context= 286
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 224 ]= True
i= 207 doc_span.start = 0 split_token_index= 207
token_to_orig_map[ 225 ]= 207
position= 207
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 207
num_right_context= 157
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 79
num_right_context= 285
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 225 ]= True
i= 208 doc_span.start = 0 split_token_index= 208
token_to_orig_map[ 226 ]= 208
position= 208
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 208
num_right_context= 156
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 80
num_right_context= 284
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 226 ]= True
i= 209 doc_span.start = 0 split_token_index= 209
token_to_orig_map[ 227 ]= 209
position= 209
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 209
num_right_context= 155
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 81
num_right_context= 283
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 227 ]= True
i= 210 doc_span.start = 0 split_token_index= 210
token_to_orig_map[ 228 ]= 210
position= 210
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 210
num_right_context= 154
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 82
num_right_context= 282
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 228 ]= True
i= 211 doc_span.start = 0 split_token_index= 211
token_to_orig_map[ 229 ]= 211
position= 211
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 211
num_right_context= 153
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 83
num_right_context= 281
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 229 ]= True
i= 212 doc_span.start = 0 split_token_index= 212
token_to_orig_map[ 230 ]= 212
position= 212
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 212
num_right_context= 152
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 84
num_right_context= 280
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 230 ]= True
i= 213 doc_span.start = 0 split_token_index= 213
token_to_orig_map[ 231 ]= 213
position= 213
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 213
num_right_context= 151
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 85
num_right_context= 279
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 231 ]= True
i= 214 doc_span.start = 0 split_token_index= 214
token_to_orig_map[ 232 ]= 214
position= 214
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 214
num_right_context= 150
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 86
num_right_context= 278
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 232 ]= True
i= 215 doc_span.start = 0 split_token_index= 215
token_to_orig_map[ 233 ]= 215
position= 215
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 215
num_right_context= 149
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 87
num_right_context= 277
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 233 ]= True
i= 216 doc_span.start = 0 split_token_index= 216
token_to_orig_map[ 234 ]= 216
position= 216
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 216
num_right_context= 148
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 88
num_right_context= 276
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 234 ]= True
i= 217 doc_span.start = 0 split_token_index= 217
token_to_orig_map[ 235 ]= 217
position= 217
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 217
num_right_context= 147
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 89
num_right_context= 275
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 235 ]= True
i= 218 doc_span.start = 0 split_token_index= 218
token_to_orig_map[ 236 ]= 218
position= 218
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 218
num_right_context= 146
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 90
num_right_context= 274
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 236 ]= True
i= 219 doc_span.start = 0 split_token_index= 219
token_to_orig_map[ 237 ]= 219
position= 219
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 219
num_right_context= 145
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 91
num_right_context= 273
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 237 ]= True
i= 220 doc_span.start = 0 split_token_index= 220
token_to_orig_map[ 238 ]= 220
position= 220
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 220
num_right_context= 144
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 92
num_right_context= 272
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 238 ]= True
i= 221 doc_span.start = 0 split_token_index= 221
token_to_orig_map[ 239 ]= 221
position= 221
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 221
num_right_context= 143
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 93
num_right_context= 271
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 239 ]= True
i= 222 doc_span.start = 0 split_token_index= 222
token_to_orig_map[ 240 ]= 222
position= 222
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 222
num_right_context= 142
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 94
num_right_context= 270
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 240 ]= True
i= 223 doc_span.start = 0 split_token_index= 223
token_to_orig_map[ 241 ]= 223
position= 223
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 223
num_right_context= 141
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 95
num_right_context= 269
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 241 ]= True
i= 224 doc_span.start = 0 split_token_index= 224
token_to_orig_map[ 242 ]= 224
position= 224
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 224
num_right_context= 140
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 96
num_right_context= 268
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 242 ]= True
i= 225 doc_span.start = 0 split_token_index= 225
token_to_orig_map[ 243 ]= 225
position= 225
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 225
num_right_context= 139
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 97
num_right_context= 267
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 243 ]= True
i= 226 doc_span.start = 0 split_token_index= 226
token_to_orig_map[ 244 ]= 226
position= 226
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 226
num_right_context= 138
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 98
num_right_context= 266
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 244 ]= True
i= 227 doc_span.start = 0 split_token_index= 227
token_to_orig_map[ 245 ]= 227
position= 227
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 227
num_right_context= 137
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 99
num_right_context= 265
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 245 ]= True
i= 228 doc_span.start = 0 split_token_index= 228
token_to_orig_map[ 246 ]= 228
position= 228
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 228
num_right_context= 136
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 100
num_right_context= 264
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 246 ]= True
i= 229 doc_span.start = 0 split_token_index= 229
token_to_orig_map[ 247 ]= 229
position= 229
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 229
num_right_context= 135
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 101
num_right_context= 263
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 247 ]= True
i= 230 doc_span.start = 0 split_token_index= 230
token_to_orig_map[ 248 ]= 230
position= 230
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 230
num_right_context= 134
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 102
num_right_context= 262
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 248 ]= True
i= 231 doc_span.start = 0 split_token_index= 231
token_to_orig_map[ 249 ]= 231
position= 231
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 231
num_right_context= 133
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 103
num_right_context= 261
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 249 ]= True
i= 232 doc_span.start = 0 split_token_index= 232
token_to_orig_map[ 250 ]= 232
position= 232
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 232
num_right_context= 132
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 104
num_right_context= 260
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 250 ]= True
i= 233 doc_span.start = 0 split_token_index= 233
token_to_orig_map[ 251 ]= 233
position= 233
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 233
num_right_context= 131
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 105
num_right_context= 259
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 251 ]= True
i= 234 doc_span.start = 0 split_token_index= 234
token_to_orig_map[ 252 ]= 234
position= 234
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 234
num_right_context= 130
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 106
num_right_context= 258
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 252 ]= True
i= 235 doc_span.start = 0 split_token_index= 235
token_to_orig_map[ 253 ]= 235
position= 235
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 235
num_right_context= 129
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 107
num_right_context= 257
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 253 ]= True
i= 236 doc_span.start = 0 split_token_index= 236
token_to_orig_map[ 254 ]= 236
position= 236
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 236
num_right_context= 128
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 108
num_right_context= 256
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 254 ]= True
i= 237 doc_span.start = 0 split_token_index= 237
token_to_orig_map[ 255 ]= 237
position= 237
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 237
num_right_context= 127
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 109
num_right_context= 255
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 255 ]= True
i= 238 doc_span.start = 0 split_token_index= 238
token_to_orig_map[ 256 ]= 238
position= 238
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 238
num_right_context= 126
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 110
num_right_context= 254
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 256 ]= True
i= 239 doc_span.start = 0 split_token_index= 239
token_to_orig_map[ 257 ]= 239
position= 239
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 239
num_right_context= 125
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 111
num_right_context= 253
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 257 ]= True
i= 240 doc_span.start = 0 split_token_index= 240
token_to_orig_map[ 258 ]= 240
position= 240
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 240
num_right_context= 124
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 112
num_right_context= 252
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 258 ]= True
i= 241 doc_span.start = 0 split_token_index= 241
token_to_orig_map[ 259 ]= 241
position= 241
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 241
num_right_context= 123
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 113
num_right_context= 251
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 259 ]= True
i= 242 doc_span.start = 0 split_token_index= 242
token_to_orig_map[ 260 ]= 242
position= 242
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 242
num_right_context= 122
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 114
num_right_context= 250
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 260 ]= True
i= 243 doc_span.start = 0 split_token_index= 243
token_to_orig_map[ 261 ]= 243
position= 243
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 243
num_right_context= 121
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 115
num_right_context= 249
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 261 ]= True
i= 244 doc_span.start = 0 split_token_index= 244
token_to_orig_map[ 262 ]= 244
position= 244
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 244
num_right_context= 120
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 116
num_right_context= 248
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 262 ]= True
i= 245 doc_span.start = 0 split_token_index= 245
token_to_orig_map[ 263 ]= 245
position= 245
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 245
num_right_context= 119
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 117
num_right_context= 247
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 263 ]= True
i= 246 doc_span.start = 0 split_token_index= 246
token_to_orig_map[ 264 ]= 246
position= 246
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 246
num_right_context= 118
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 118
num_right_context= 246
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 264 ]= True
i= 247 doc_span.start = 0 split_token_index= 247
token_to_orig_map[ 265 ]= 247
position= 247
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 247
num_right_context= 117
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 119
num_right_context= 245
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 265 ]= False
i= 248 doc_span.start = 0 split_token_index= 248
token_to_orig_map[ 266 ]= 248
position= 248
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 248
num_right_context= 116
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 120
num_right_context= 244
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 266 ]= False
i= 249 doc_span.start = 0 split_token_index= 249
token_to_orig_map[ 267 ]= 249
position= 249
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 249
num_right_context= 115
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 121
num_right_context= 243
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 267 ]= False
i= 250 doc_span.start = 0 split_token_index= 250
token_to_orig_map[ 268 ]= 250
position= 250
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 250
num_right_context= 114
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 122
num_right_context= 242
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 268 ]= False
i= 251 doc_span.start = 0 split_token_index= 251
token_to_orig_map[ 269 ]= 251
position= 251
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 251
num_right_context= 113
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 123
num_right_context= 241
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 269 ]= False
i= 252 doc_span.start = 0 split_token_index= 252
token_to_orig_map[ 270 ]= 252
position= 252
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 252
num_right_context= 112
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 124
num_right_context= 240
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 270 ]= False
i= 253 doc_span.start = 0 split_token_index= 253
token_to_orig_map[ 271 ]= 253
position= 253
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 253
num_right_context= 111
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 125
num_right_context= 239
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 271 ]= False
i= 254 doc_span.start = 0 split_token_index= 254
token_to_orig_map[ 272 ]= 254
position= 254
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 254
num_right_context= 110
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 126
num_right_context= 238
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 272 ]= False
i= 255 doc_span.start = 0 split_token_index= 255
token_to_orig_map[ 273 ]= 255
position= 255
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 255
num_right_context= 109
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 127
num_right_context= 237
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 273 ]= False
i= 256 doc_span.start = 0 split_token_index= 256
token_to_orig_map[ 274 ]= 256
position= 256
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 256
num_right_context= 108
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 128
num_right_context= 236
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 0
num_right_context= 364
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 274 ]= False
i= 257 doc_span.start = 0 split_token_index= 257
token_to_orig_map[ 275 ]= 257
position= 257
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 257
num_right_context= 107
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 129
num_right_context= 235
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 1
num_right_context= 363
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 275 ]= False
i= 258 doc_span.start = 0 split_token_index= 258
token_to_orig_map[ 276 ]= 258
position= 258
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 258
num_right_context= 106
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 130
num_right_context= 234
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 2
num_right_context= 362
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 276 ]= False
i= 259 doc_span.start = 0 split_token_index= 259
token_to_orig_map[ 277 ]= 259
position= 259
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 259
num_right_context= 105
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 131
num_right_context= 233
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 3
num_right_context= 361
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 277 ]= False
i= 260 doc_span.start = 0 split_token_index= 260
token_to_orig_map[ 278 ]= 260
position= 260
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 260
num_right_context= 104
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 132
num_right_context= 232
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 4
num_right_context= 360
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 278 ]= False
i= 261 doc_span.start = 0 split_token_index= 261
token_to_orig_map[ 279 ]= 261
position= 261
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 261
num_right_context= 103
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 133
num_right_context= 231
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 5
num_right_context= 359
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 279 ]= False
i= 262 doc_span.start = 0 split_token_index= 262
token_to_orig_map[ 280 ]= 262
position= 262
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 262
num_right_context= 102
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 134
num_right_context= 230
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 6
num_right_context= 358
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 280 ]= False
i= 263 doc_span.start = 0 split_token_index= 263
token_to_orig_map[ 281 ]= 263
position= 263
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 263
num_right_context= 101
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 135
num_right_context= 229
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 7
num_right_context= 357
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 281 ]= False
i= 264 doc_span.start = 0 split_token_index= 264
token_to_orig_map[ 282 ]= 264
position= 264
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 264
num_right_context= 100
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 136
num_right_context= 228
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 8
num_right_context= 356
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 282 ]= False
i= 265 doc_span.start = 0 split_token_index= 265
token_to_orig_map[ 283 ]= 265
position= 265
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 265
num_right_context= 99
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 137
num_right_context= 227
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 9
num_right_context= 355
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 283 ]= False
i= 266 doc_span.start = 0 split_token_index= 266
token_to_orig_map[ 284 ]= 266
position= 266
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 266
num_right_context= 98
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 138
num_right_context= 226
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 10
num_right_context= 354
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 284 ]= False
i= 267 doc_span.start = 0 split_token_index= 267
token_to_orig_map[ 285 ]= 267
position= 267
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 267
num_right_context= 97
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 139
num_right_context= 225
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 11
num_right_context= 353
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 285 ]= False
i= 268 doc_span.start = 0 split_token_index= 268
token_to_orig_map[ 286 ]= 268
position= 268
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 268
num_right_context= 96
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 140
num_right_context= 224
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 12
num_right_context= 352
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 286 ]= False
i= 269 doc_span.start = 0 split_token_index= 269
token_to_orig_map[ 287 ]= 269
position= 269
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 269
num_right_context= 95
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 141
num_right_context= 223
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 13
num_right_context= 351
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 287 ]= False
i= 270 doc_span.start = 0 split_token_index= 270
token_to_orig_map[ 288 ]= 270
position= 270
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 270
num_right_context= 94
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 142
num_right_context= 222
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 14
num_right_context= 350
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 288 ]= False
i= 271 doc_span.start = 0 split_token_index= 271
token_to_orig_map[ 289 ]= 271
position= 271
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 271
num_right_context= 93
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 143
num_right_context= 221
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 15
num_right_context= 349
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 289 ]= False
i= 272 doc_span.start = 0 split_token_index= 272
token_to_orig_map[ 290 ]= 272
position= 272
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 272
num_right_context= 92
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 144
num_right_context= 220
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 16
num_right_context= 348
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 290 ]= False
i= 273 doc_span.start = 0 split_token_index= 273
token_to_orig_map[ 291 ]= 273
position= 273
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 273
num_right_context= 91
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 145
num_right_context= 219
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 17
num_right_context= 347
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 291 ]= False
i= 274 doc_span.start = 0 split_token_index= 274
token_to_orig_map[ 292 ]= 274
position= 274
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 274
num_right_context= 90
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 146
num_right_context= 218
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 18
num_right_context= 346
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 292 ]= False
i= 275 doc_span.start = 0 split_token_index= 275
token_to_orig_map[ 293 ]= 275
position= 275
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 275
num_right_context= 89
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 147
num_right_context= 217
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 19
num_right_context= 345
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 293 ]= False
i= 276 doc_span.start = 0 split_token_index= 276
token_to_orig_map[ 294 ]= 276
position= 276
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 276
num_right_context= 88
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 148
num_right_context= 216
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 20
num_right_context= 344
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 294 ]= False
i= 277 doc_span.start = 0 split_token_index= 277
token_to_orig_map[ 295 ]= 277
position= 277
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 277
num_right_context= 87
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 149
num_right_context= 215
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 21
num_right_context= 343
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 295 ]= False
i= 278 doc_span.start = 0 split_token_index= 278
token_to_orig_map[ 296 ]= 278
position= 278
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 278
num_right_context= 86
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 150
num_right_context= 214
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 22
num_right_context= 342
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 296 ]= False
i= 279 doc_span.start = 0 split_token_index= 279
token_to_orig_map[ 297 ]= 279
position= 279
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 279
num_right_context= 85
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 151
num_right_context= 213
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 23
num_right_context= 341
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 297 ]= False
i= 280 doc_span.start = 0 split_token_index= 280
token_to_orig_map[ 298 ]= 280
position= 280
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 280
num_right_context= 84
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 152
num_right_context= 212
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 24
num_right_context= 340
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 298 ]= False
i= 281 doc_span.start = 0 split_token_index= 281
token_to_orig_map[ 299 ]= 281
position= 281
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 281
num_right_context= 83
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 153
num_right_context= 211
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 25
num_right_context= 339
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 299 ]= False
i= 282 doc_span.start = 0 split_token_index= 282
token_to_orig_map[ 300 ]= 282
position= 282
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 282
num_right_context= 82
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 154
num_right_context= 210
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 26
num_right_context= 338
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 300 ]= False
i= 283 doc_span.start = 0 split_token_index= 283
token_to_orig_map[ 301 ]= 283
position= 283
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 283
num_right_context= 81
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 155
num_right_context= 209
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 27
num_right_context= 337
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 301 ]= False
i= 284 doc_span.start = 0 split_token_index= 284
token_to_orig_map[ 302 ]= 284
position= 284
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 284
num_right_context= 80
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 156
num_right_context= 208
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 28
num_right_context= 336
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 302 ]= False
i= 285 doc_span.start = 0 split_token_index= 285
token_to_orig_map[ 303 ]= 285
position= 285
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 285
num_right_context= 79
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 157
num_right_context= 207
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 29
num_right_context= 335
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 303 ]= False
i= 286 doc_span.start = 0 split_token_index= 286
token_to_orig_map[ 304 ]= 286
position= 286
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 286
num_right_context= 78
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 158
num_right_context= 206
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 30
num_right_context= 334
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 304 ]= False
i= 287 doc_span.start = 0 split_token_index= 287
token_to_orig_map[ 305 ]= 287
position= 287
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 287
num_right_context= 77
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 159
num_right_context= 205
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 31
num_right_context= 333
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 305 ]= False
i= 288 doc_span.start = 0 split_token_index= 288
token_to_orig_map[ 306 ]= 288
position= 288
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 288
num_right_context= 76
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 160
num_right_context= 204
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 32
num_right_context= 332
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 306 ]= False
i= 289 doc_span.start = 0 split_token_index= 289
token_to_orig_map[ 307 ]= 289
position= 289
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 289
num_right_context= 75
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 161
num_right_context= 203
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 33
num_right_context= 331
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 307 ]= False
i= 290 doc_span.start = 0 split_token_index= 290
token_to_orig_map[ 308 ]= 290
position= 290
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 290
num_right_context= 74
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 162
num_right_context= 202
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 34
num_right_context= 330
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 308 ]= False
i= 291 doc_span.start = 0 split_token_index= 291
token_to_orig_map[ 309 ]= 291
position= 291
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 291
num_right_context= 73
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 163
num_right_context= 201
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 35
num_right_context= 329
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 309 ]= False
i= 292 doc_span.start = 0 split_token_index= 292
token_to_orig_map[ 310 ]= 292
position= 292
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 292
num_right_context= 72
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 164
num_right_context= 200
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 36
num_right_context= 328
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 310 ]= False
i= 293 doc_span.start = 0 split_token_index= 293
token_to_orig_map[ 311 ]= 293
position= 293
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 293
num_right_context= 71
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 165
num_right_context= 199
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 37
num_right_context= 327
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 311 ]= False
i= 294 doc_span.start = 0 split_token_index= 294
token_to_orig_map[ 312 ]= 294
position= 294
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 294
num_right_context= 70
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 166
num_right_context= 198
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 38
num_right_context= 326
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 312 ]= False
i= 295 doc_span.start = 0 split_token_index= 295
token_to_orig_map[ 313 ]= 295
position= 295
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 295
num_right_context= 69
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 167
num_right_context= 197
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 39
num_right_context= 325
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 313 ]= False
i= 296 doc_span.start = 0 split_token_index= 296
token_to_orig_map[ 314 ]= 296
position= 296
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 296
num_right_context= 68
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 168
num_right_context= 196
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 40
num_right_context= 324
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 314 ]= False
i= 297 doc_span.start = 0 split_token_index= 297
token_to_orig_map[ 315 ]= 297
position= 297
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 297
num_right_context= 67
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 169
num_right_context= 195
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 41
num_right_context= 323
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 315 ]= False
i= 298 doc_span.start = 0 split_token_index= 298
token_to_orig_map[ 316 ]= 298
position= 298
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 298
num_right_context= 66
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 170
num_right_context= 194
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 42
num_right_context= 322
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 316 ]= False
i= 299 doc_span.start = 0 split_token_index= 299
token_to_orig_map[ 317 ]= 299
position= 299
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 299
num_right_context= 65
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 171
num_right_context= 193
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 43
num_right_context= 321
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 317 ]= False
i= 300 doc_span.start = 0 split_token_index= 300
token_to_orig_map[ 318 ]= 300
position= 300
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 300
num_right_context= 64
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 172
num_right_context= 192
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 44
num_right_context= 320
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 318 ]= False
i= 301 doc_span.start = 0 split_token_index= 301
token_to_orig_map[ 319 ]= 301
position= 301
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 301
num_right_context= 63
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 173
num_right_context= 191
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 45
num_right_context= 319
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 319 ]= False
i= 302 doc_span.start = 0 split_token_index= 302
token_to_orig_map[ 320 ]= 302
position= 302
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 302
num_right_context= 62
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 174
num_right_context= 190
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 46
num_right_context= 318
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 320 ]= False
i= 303 doc_span.start = 0 split_token_index= 303
token_to_orig_map[ 321 ]= 303
position= 303
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 303
num_right_context= 61
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 175
num_right_context= 189
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 47
num_right_context= 317
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 321 ]= False
i= 304 doc_span.start = 0 split_token_index= 304
token_to_orig_map[ 322 ]= 304
position= 304
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 304
num_right_context= 60
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 176
num_right_context= 188
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 48
num_right_context= 316
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 322 ]= False
i= 305 doc_span.start = 0 split_token_index= 305
token_to_orig_map[ 323 ]= 305
position= 305
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 305
num_right_context= 59
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 177
num_right_context= 187
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 49
num_right_context= 315
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 323 ]= False
i= 306 doc_span.start = 0 split_token_index= 306
token_to_orig_map[ 324 ]= 306
position= 306
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 306
num_right_context= 58
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 178
num_right_context= 186
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 50
num_right_context= 314
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 324 ]= False
i= 307 doc_span.start = 0 split_token_index= 307
token_to_orig_map[ 325 ]= 307
position= 307
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 307
num_right_context= 57
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 179
num_right_context= 185
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 51
num_right_context= 313
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 325 ]= False
i= 308 doc_span.start = 0 split_token_index= 308
token_to_orig_map[ 326 ]= 308
position= 308
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 308
num_right_context= 56
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 180
num_right_context= 184
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 52
num_right_context= 312
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 326 ]= False
i= 309 doc_span.start = 0 split_token_index= 309
token_to_orig_map[ 327 ]= 309
position= 309
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 309
num_right_context= 55
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 181
num_right_context= 183
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 53
num_right_context= 311
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 327 ]= False
i= 310 doc_span.start = 0 split_token_index= 310
token_to_orig_map[ 328 ]= 310
position= 310
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 310
num_right_context= 54
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 182
num_right_context= 182
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 54
num_right_context= 310
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 328 ]= False
i= 311 doc_span.start = 0 split_token_index= 311
token_to_orig_map[ 329 ]= 311
position= 311
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 311
num_right_context= 53
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 183
num_right_context= 181
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 55
num_right_context= 309
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 329 ]= False
i= 312 doc_span.start = 0 split_token_index= 312
token_to_orig_map[ 330 ]= 312
position= 312
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 312
num_right_context= 52
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 184
num_right_context= 180
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 56
num_right_context= 308
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 330 ]= False
i= 313 doc_span.start = 0 split_token_index= 313
token_to_orig_map[ 331 ]= 313
position= 313
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 313
num_right_context= 51
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 185
num_right_context= 179
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 57
num_right_context= 307
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 331 ]= False
i= 314 doc_span.start = 0 split_token_index= 314
token_to_orig_map[ 332 ]= 314
position= 314
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 314
num_right_context= 50
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 186
num_right_context= 178
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 58
num_right_context= 306
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 332 ]= False
i= 315 doc_span.start = 0 split_token_index= 315
token_to_orig_map[ 333 ]= 315
position= 315
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 315
num_right_context= 49
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 187
num_right_context= 177
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 59
num_right_context= 305
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 333 ]= False
i= 316 doc_span.start = 0 split_token_index= 316
token_to_orig_map[ 334 ]= 316
position= 316
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 316
num_right_context= 48
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 188
num_right_context= 176
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 60
num_right_context= 304
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 334 ]= False
i= 317 doc_span.start = 0 split_token_index= 317
token_to_orig_map[ 335 ]= 317
position= 317
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 317
num_right_context= 47
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 189
num_right_context= 175
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 61
num_right_context= 303
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 335 ]= False
i= 318 doc_span.start = 0 split_token_index= 318
token_to_orig_map[ 336 ]= 318
position= 318
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 318
num_right_context= 46
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 190
num_right_context= 174
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 62
num_right_context= 302
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 336 ]= False
i= 319 doc_span.start = 0 split_token_index= 319
token_to_orig_map[ 337 ]= 319
position= 319
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 319
num_right_context= 45
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 191
num_right_context= 173
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 63
num_right_context= 301
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 337 ]= False
i= 320 doc_span.start = 0 split_token_index= 320
token_to_orig_map[ 338 ]= 320
position= 320
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 320
num_right_context= 44
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 192
num_right_context= 172
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 64
num_right_context= 300
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 338 ]= False
i= 321 doc_span.start = 0 split_token_index= 321
token_to_orig_map[ 339 ]= 321
position= 321
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 321
num_right_context= 43
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 193
num_right_context= 171
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 65
num_right_context= 299
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 339 ]= False
i= 322 doc_span.start = 0 split_token_index= 322
token_to_orig_map[ 340 ]= 322
position= 322
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 322
num_right_context= 42
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 194
num_right_context= 170
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 66
num_right_context= 298
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 340 ]= False
i= 323 doc_span.start = 0 split_token_index= 323
token_to_orig_map[ 341 ]= 323
position= 323
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 323
num_right_context= 41
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 195
num_right_context= 169
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 67
num_right_context= 297
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 341 ]= False
i= 324 doc_span.start = 0 split_token_index= 324
token_to_orig_map[ 342 ]= 324
position= 324
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 324
num_right_context= 40
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 196
num_right_context= 168
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 68
num_right_context= 296
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 342 ]= False
i= 325 doc_span.start = 0 split_token_index= 325
token_to_orig_map[ 343 ]= 325
position= 325
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 325
num_right_context= 39
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 197
num_right_context= 167
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 69
num_right_context= 295
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 343 ]= False
i= 326 doc_span.start = 0 split_token_index= 326
token_to_orig_map[ 344 ]= 326
position= 326
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 326
num_right_context= 38
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 198
num_right_context= 166
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 70
num_right_context= 294
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 344 ]= False
i= 327 doc_span.start = 0 split_token_index= 327
token_to_orig_map[ 345 ]= 327
position= 327
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 327
num_right_context= 37
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 199
num_right_context= 165
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 71
num_right_context= 293
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 345 ]= False
i= 328 doc_span.start = 0 split_token_index= 328
token_to_orig_map[ 346 ]= 328
position= 328
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 328
num_right_context= 36
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 200
num_right_context= 164
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 72
num_right_context= 292
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 346 ]= False
i= 329 doc_span.start = 0 split_token_index= 329
token_to_orig_map[ 347 ]= 329
position= 329
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 329
num_right_context= 35
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 201
num_right_context= 163
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 73
num_right_context= 291
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 347 ]= False
i= 330 doc_span.start = 0 split_token_index= 330
token_to_orig_map[ 348 ]= 330
position= 330
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 330
num_right_context= 34
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 202
num_right_context= 162
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 74
num_right_context= 290
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 348 ]= False
i= 331 doc_span.start = 0 split_token_index= 331
token_to_orig_map[ 349 ]= 331
position= 331
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 331
num_right_context= 33
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 203
num_right_context= 161
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 75
num_right_context= 289
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 349 ]= False
i= 332 doc_span.start = 0 split_token_index= 332
token_to_orig_map[ 350 ]= 332
position= 332
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 332
num_right_context= 32
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 204
num_right_context= 160
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 76
num_right_context= 288
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 350 ]= False
i= 333 doc_span.start = 0 split_token_index= 333
token_to_orig_map[ 351 ]= 333
position= 333
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 333
num_right_context= 31
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 205
num_right_context= 159
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 77
num_right_context= 287
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 351 ]= False
i= 334 doc_span.start = 0 split_token_index= 334
token_to_orig_map[ 352 ]= 334
position= 334
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 334
num_right_context= 30
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 206
num_right_context= 158
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 78
num_right_context= 286
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 352 ]= False
i= 335 doc_span.start = 0 split_token_index= 335
token_to_orig_map[ 353 ]= 335
position= 335
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 335
num_right_context= 29
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 207
num_right_context= 157
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 79
num_right_context= 285
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 353 ]= False
i= 336 doc_span.start = 0 split_token_index= 336
token_to_orig_map[ 354 ]= 336
position= 336
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 336
num_right_context= 28
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 208
num_right_context= 156
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 80
num_right_context= 284
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 354 ]= False
i= 337 doc_span.start = 0 split_token_index= 337
token_to_orig_map[ 355 ]= 337
position= 337
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 337
num_right_context= 27
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 209
num_right_context= 155
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 81
num_right_context= 283
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 355 ]= False
i= 338 doc_span.start = 0 split_token_index= 338
token_to_orig_map[ 356 ]= 338
position= 338
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 338
num_right_context= 26
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 210
num_right_context= 154
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 82
num_right_context= 282
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 356 ]= False
i= 339 doc_span.start = 0 split_token_index= 339
token_to_orig_map[ 357 ]= 339
position= 339
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 339
num_right_context= 25
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 211
num_right_context= 153
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 83
num_right_context= 281
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 357 ]= False
i= 340 doc_span.start = 0 split_token_index= 340
token_to_orig_map[ 358 ]= 340
position= 340
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 340
num_right_context= 24
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 212
num_right_context= 152
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 84
num_right_context= 280
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 358 ]= False
i= 341 doc_span.start = 0 split_token_index= 341
token_to_orig_map[ 359 ]= 341
position= 341
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 341
num_right_context= 23
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 213
num_right_context= 151
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 85
num_right_context= 279
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 359 ]= False
i= 342 doc_span.start = 0 split_token_index= 342
token_to_orig_map[ 360 ]= 342
position= 342
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 342
num_right_context= 22
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 214
num_right_context= 150
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 86
num_right_context= 278
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 360 ]= False
i= 343 doc_span.start = 0 split_token_index= 343
token_to_orig_map[ 361 ]= 343
position= 343
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 343
num_right_context= 21
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 215
num_right_context= 149
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 87
num_right_context= 277
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 361 ]= False
i= 344 doc_span.start = 0 split_token_index= 344
token_to_orig_map[ 362 ]= 344
position= 344
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 344
num_right_context= 20
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 216
num_right_context= 148
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 88
num_right_context= 276
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 362 ]= False
i= 345 doc_span.start = 0 split_token_index= 345
token_to_orig_map[ 363 ]= 345
position= 345
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 345
num_right_context= 19
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 217
num_right_context= 147
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 89
num_right_context= 275
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 363 ]= False
i= 346 doc_span.start = 0 split_token_index= 346
token_to_orig_map[ 364 ]= 346
position= 346
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 346
num_right_context= 18
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 218
num_right_context= 146
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 90
num_right_context= 274
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 364 ]= False
i= 347 doc_span.start = 0 split_token_index= 347
token_to_orig_map[ 365 ]= 347
position= 347
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 347
num_right_context= 17
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 219
num_right_context= 145
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 91
num_right_context= 273
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 365 ]= False
i= 348 doc_span.start = 0 split_token_index= 348
token_to_orig_map[ 366 ]= 348
position= 348
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 348
num_right_context= 16
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 220
num_right_context= 144
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 92
num_right_context= 272
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 366 ]= False
i= 349 doc_span.start = 0 split_token_index= 349
token_to_orig_map[ 367 ]= 349
position= 349
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 349
num_right_context= 15
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 221
num_right_context= 143
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 93
num_right_context= 271
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 367 ]= False
i= 350 doc_span.start = 0 split_token_index= 350
token_to_orig_map[ 368 ]= 350
position= 350
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 350
num_right_context= 14
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 222
num_right_context= 142
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 94
num_right_context= 270
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 368 ]= False
i= 351 doc_span.start = 0 split_token_index= 351
token_to_orig_map[ 369 ]= 351
position= 351
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 351
num_right_context= 13
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 223
num_right_context= 141
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 95
num_right_context= 269
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 369 ]= False
i= 352 doc_span.start = 0 split_token_index= 352
token_to_orig_map[ 370 ]= 352
position= 352
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 352
num_right_context= 12
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 224
num_right_context= 140
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 96
num_right_context= 268
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 370 ]= False
i= 353 doc_span.start = 0 split_token_index= 353
token_to_orig_map[ 371 ]= 353
position= 353
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 353
num_right_context= 11
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 225
num_right_context= 139
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 97
num_right_context= 267
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 371 ]= False
i= 354 doc_span.start = 0 split_token_index= 354
token_to_orig_map[ 372 ]= 354
position= 354
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 354
num_right_context= 10
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 226
num_right_context= 138
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 98
num_right_context= 266
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 372 ]= False
i= 355 doc_span.start = 0 split_token_index= 355
token_to_orig_map[ 373 ]= 355
position= 355
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 355
num_right_context= 9
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 227
num_right_context= 137
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 99
num_right_context= 265
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 373 ]= False
i= 356 doc_span.start = 0 split_token_index= 356
token_to_orig_map[ 374 ]= 356
position= 356
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 356
num_right_context= 8
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 228
num_right_context= 136
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 100
num_right_context= 264
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 374 ]= False
i= 357 doc_span.start = 0 split_token_index= 357
token_to_orig_map[ 375 ]= 357
position= 357
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 357
num_right_context= 7
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 229
num_right_context= 135
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 101
num_right_context= 263
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 375 ]= False
i= 358 doc_span.start = 0 split_token_index= 358
token_to_orig_map[ 376 ]= 358
position= 358
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 358
num_right_context= 6
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 230
num_right_context= 134
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 102
num_right_context= 262
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 376 ]= False
i= 359 doc_span.start = 0 split_token_index= 359
token_to_orig_map[ 377 ]= 359
position= 359
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 359
num_right_context= 5
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 231
num_right_context= 133
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 103
num_right_context= 261
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 377 ]= False
i= 360 doc_span.start = 0 split_token_index= 360
token_to_orig_map[ 378 ]= 360
position= 360
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 360
num_right_context= 4
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 232
num_right_context= 132
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 104
num_right_context= 260
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 378 ]= False
i= 361 doc_span.start = 0 split_token_index= 361
token_to_orig_map[ 379 ]= 361
position= 361
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 361
num_right_context= 3
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 233
num_right_context= 131
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 105
num_right_context= 259
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 379 ]= False
i= 362 doc_span.start = 0 split_token_index= 362
token_to_orig_map[ 380 ]= 362
position= 362
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 362
num_right_context= 2
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 234
num_right_context= 130
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 106
num_right_context= 258
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 380 ]= False
i= 363 doc_span.start = 0 split_token_index= 363
token_to_orig_map[ 381 ]= 363
position= 363
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 363
num_right_context= 1
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 235
num_right_context= 129
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 107
num_right_context= 257
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 381 ]= False
i= 364 doc_span.start = 0 split_token_index= 364
token_to_orig_map[ 382 ]= 364
position= 364
doc_span DocSpan(start=0, length=365)
doc_span.start= 0 doc_span.length - 1= 364
num_left_context= 364
num_right_context= 0
best_span_index= 0
cur_span_index= 0
doc_span DocSpan(start=128, length=365)
doc_span.start= 128 doc_span.length - 1= 364
num_left_context= 236
num_right_context= 128
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=256, length=365)
doc_span.start= 256 doc_span.length - 1= 364
num_left_context= 108
num_right_context= 256
best_span_index= 1
cur_span_index= 0
doc_span DocSpan(start=384, length=334)
doc_span.start= 384 doc_span.length - 1= 333
token_is_max_context[ 382 ]= False
tokens b ['[CLS]', '毕', '业', '后', '的', '安', '雅', '·', '罗', '素', '法', '职', '业', '是', '什', '么', '？', '[SEP]', '安', '雅', '·', '罗', '素', '法', '（', '，', '）', '，', '来', '自', '俄', '罗', '斯', '圣', '彼', '得', '堡', '的', '模', '特', '儿', '。', '她', '是', '《', '全', '美', '超', '级', '模', '特', '儿', '新', '秀', '大', '赛', '》', '第', '十', '季', '的', '亚', '军', '。', '2', '0', '0', '8', '年', '，', '安', '雅', '宣', '布', '改', '回', '出', '生', '时', '的', '名', '字', '：', '安', '雅', '·', '罗', '素', '法', '（', '[UNK]', 'n', 'y', 'a', '[UNK]', 'o', 'z', 'o', 'v', 'a', '）', '，', '在', '此', '之', '前', '是', '使', '用', '安', '雅', '·', '冈', '（', '）', '。', '安', '雅', '于', '俄', '罗', '斯', '出', '生', '，', '后', '来', '被', '一', '个', '居', '住', '在', '美', '国', '夏', '威', '夷', '群', '岛', '欧', '胡', '岛', '檀', '香', '山', '的', '家', '庭', '领', '养', '。', '安', '雅', '十', '七', '岁', '时', '曾', '参', '与', '香', '奈', '儿', '、', '路', '易', '·', '威', '登', '及', '芬', '迪', '（', '[UNK]', 'e', 'n', 'd', 'i', '）', '等', '品', '牌', '的', '非', '正', '式', '时', '装', '秀', '。', '2', '0', '0', '7', '年', '，', '她', '于', '瓦', '伊', '帕', '胡', '高', '级', '中', '学', '毕', '业', '。', '毕', '业', '后', '，', '她', '当', '了', '一', '名', '售', '货', '员', '。', '她', '曾', '为', '[UNK]', 'u', 's', 's', 'e', 'l', 'l', '[UNK]', 'a', 'n', 'o', 'u', 'e', '拍', '摄', '照', '片', '，', '[UNK]', 'u', 's', 's', 'e', 'l', 'l', '[UNK]', 'a', 'n', 'o', 'u', 'e', '称', '赞', '她', '是', '「', '有', '前', '途', '的', '新', '面', '孔', '」', '。', '安', '雅', '在', '半', '准', '决', '赛', '面', '试', '时', '说', '她', '对', '模', '特', '儿', '行', '业', '充', '满', '热', '诚', '，', '所', '以', '参', '加', '全', '美', '超', '级', '模', '特', '儿', '新', '秀', '大', '赛', '。', '她', '于', '比', '赛', '中', '表', '现', '出', '色', '，', '曾', '五', '次', '首', '名', '入', '围', '，', '平', '均', '入', '围', '顺', '序', '更', '拿', '下', '历', '届', '以', '来', '最', '优', '异', '的', '成', '绩', '(', '2', '.', '6', '4', ')', '，', '另', '外', '胜', '出', '三', '次', '小', '挑', '战', '，', '分', '别', '获', '得', '与', '评', '判', '尼', '祖', '·', '百', '克', '拍', '照', '、', '为', '柠', '檬', '味', '[SEP]']
segment_ids b [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
p_mask b [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
Traceback (most recent call last):
  File "bert_qa.py", line 528, in <module>
    main()
  File "bert_qa.py", line 475, in main
    train_dataset = load_and_cache_examples(args, tokenizer, evaluate=False, output_examples=False)
  File "bert_qa.py", line 294, in load_and_cache_examples
    is_training=not evaluate)
  File "D:\yu_ting_nlp_qa\chinese-qa-with-bert-master_v2\utils_squad.py", line 369, in convert_examples_to_features
    time.sleep(60000)
NameError: name 'time' is not defined

(nlp_tilly_qa) D:\yu_ting_nlp_qa\chinese-qa-with-bert-master_v2>